webpackJsonp([110],{

/***/ 100:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LabaddreportPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_file_transfer__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_video_player__ = __webpack_require__(392);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








/**
 * Generated class for the LabaddreportPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LabaddreportPage = /** @class */ (function () {
    function LabaddreportPage(navCtrl, navParams, api, camera, actionSheetCrtl, toastCtrl, transfer, file, videoPlayer, platform) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.camera = camera;
        this.actionSheetCrtl = actionSheetCrtl;
        this.toastCtrl = toastCtrl;
        this.transfer = transfer;
        this.file = file;
        this.videoPlayer = videoPlayer;
        this.platform = platform;
        this.labReportList = [];
        this.AllReportList = [];
        this.num = 0;
        this.LabReportFile = "";
        this.LabReportvideoFile = "";
        this.formData = new FormData();
        this.arrDiseaseAssociated = [];
        this.Objecttobeinserted = {
            ReportDate: "12 Jan 2017",
            ReportTime: "07:15 pm",
            PatientId: this.num,
            ReportName: "CBC",
            DiseaseAssociated: "    Impetigo" //diagnosisMasterdata->diagnosiseName
        };
        this.Objecttobeinserted1 = {
            ReportDate: "13 Jan 2017",
            ReportTime: "8:20 pm",
            PatientId: "00001",
            ReportName: "HB",
            DiseaseAssociated: "Ring Warm"
        };
        this.Patients = [];
        // arrDiseaseAssociated: any = [];
        this.IsShow = false;
        this.IsShowDataFromOtherPage = false;
        this.LabReport = {
            Patient: {},
            PatientID: "",
            PatLabAppointmentID: "",
            ReportDetail: "",
            AdditionalDetail: "",
            ReportName: "",
            ExtraDetail: "",
            DiseaseAssociated: {},
            DiseaseID: "",
            labReportLevel1ID: ""
        };
        if (this.navParams.get("item")) {
            console.log('JSON.stringify(this.navParams.get("item")) === ' +
                JSON.stringify(this.navParams.get("item")));
            this.DataFromOtherPage = this.navParams.get("item");
            this.labReportList = [];
            this.AllReportList = [];
            this.Patients = [];
            this.IsShowDataFromOtherPage = true;
            this.arrDiseaseAssociated = [];
        }
        else {
            console.log("Undefineeeeeeddddddd === " + JSON.stringify(this.navParams.get("item")));
            this.labReportList = [];
            this.AllReportList = [];
            this.Patients = [];
            this.IsShowDataFromOtherPage = false;
            this.arrDiseaseAssociated = [];
        }
        console.log('JSON.stringify(this.navParams.get("item")) === ' +
            JSON.stringify(this.navParams.get("item")));
    }
    LabaddreportPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        console.log("ionViewDidLoad LabaddreportPage");
        if (this.IsShowDataFromOtherPage) {
            var tempObj = {
                patientID: this.DataFromOtherPage.patientID,
                patientName: this.DataFromOtherPage.name
            };
            this.Patients.push(tempObj);
            this.LabReport.Patient = this.Patients[0];
        }
        else {
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllPatient, {}).then(function (resp) {
                if (resp.status === 500) {
                }
                else {
                    console.log("location array 0 item", _this.Patients);
                    _this.Patients = resp.data;
                }
            });
        }
    };
    LabaddreportPage.prototype.viewReportList = function (data) {
        console.log(data);
    };
    LabaddreportPage.prototype.NextClicked = function () {
        var _this = this;
        var patientMaster1 = { patientID: this.LabReport.PatientID };
        var Param;
        if (this.IsShowDataFromOtherPage) {
            var patLabAppointmentID123 = {
                patLabAppointmentID: this.DataFromOtherPage.patLabAppointmentID
            };
            Param = {
                patientMaster: patientMaster1,
                reportDetail: this.LabReport.ReportDetail,
                additionalDetail: this.LabReport.AdditionalDetail,
                patLabAppointments: patLabAppointmentID123,
                patAppStatus: "Completed"
                //  patLabAppointmentID: this.DataFromOtherPage.patLabAppointmentID
            };
        }
        else {
            Param = {
                patientMaster: patientMaster1,
                reportDetail: this.LabReport.ReportDetail,
                additionalDetail: this.LabReport.AdditionalDetail,
                patAppStatus: "Completed"
            };
        }
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditLabReportByLabUser, Param)
            .then(function (resp) {
            _this.IsShow = true;
            _this.reportPatLapAppId = resp.data.reportPatLapAppId;
            if (_this.IsShowDataFromOtherPage) {
                _this.AllReportList = _this.DataFromOtherPage.data;
                console.log("this.AllReportList" + JSON.stringify(_this.AllReportList));
                _this.LabReport.ReportName = _this.AllReportList[0];
                _this.LabReport.labReportLevel1ID = _this.AllReportList[0].labReportLevel1ID;
                _this.WsGetAllDiagnosis();
            }
            else {
                _this.WsGetAllLab1ReportByLab();
            }
        });
        console.log("dsfffewfewf" + this.IsShow);
    };
    LabaddreportPage.prototype.BackClicked = function () {
        this.IsShow = false;
    };
    LabaddreportPage.prototype.SaveClicked = function () {
        var _this = this;
        if (this.IsShowDataFromOtherPage) {
            this.formData.append("reportLapAppId", "0");
            this.formData.append("reportPatLapAppId", this.reportPatLapAppId);
            this.formData.append("diagnosisMaster", this.LabReport.DiseaseID);
            this.formData.append("labReportLevel1ID", this.LabReport.labReportLevel1ID);
            this.formData.append("extraDetail", this.LabReport.ExtraDetail);
        }
        else {
            this.formData.append("reportLapAppId", "0");
            this.formData.append("reportPatLapAppId", this.reportPatLapAppId);
            this.formData.append("diagnosisMaster", this.LabReport.DiseaseID);
            this.formData.append("labReportLevel1ID", this.LabReport.labReportLevel1ID);
            this.formData.append("extraDetail", this.LabReport.ExtraDetail);
        }
        // this.formData.append("vidreportPath", undefined);
        this.api
            .wsPostMutlipartHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditReportByLabUser, this.formData)
            .then(function (resp) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
        });
    };
    LabaddreportPage.prototype.onSelectChange = function (event) {
        this.LabReport.PatientID = event.patientID;
        this.LabReport.PatLabAppointmentID = event.patLabAppointmentID;
        console.log("Event =" + JSON.stringify(event));
    };
    LabaddreportPage.prototype.onSelectChangeReportName = function (event) {
        // this.LabReport.ReportName = event.lrl1Name;
        console.log("onsaelectcll");
        this.LabReport.labReportLevel1ID = event.labReportLevel1ID;
        console.log(this.LabReport.labReportLevel1ID);
    };
    LabaddreportPage.prototype.onSelectChangeDesease = function (event) {
        this.LabReport.DiseaseID = event.diagnosisID;
    };
    LabaddreportPage.prototype.SaveAndAddClicked = function () {
        // console.log(this.LabReport.DiseaseAssociated);
        console.log(this.reportPatLapAppId);
        console.log(this.LabReport.DiseaseID);
        console.log(this.LabReport.labReportLevel1ID);
        console.log(this.LabReport.ExtraDetail);
        // this.uploadFile();
        this.callWebserviceUpdatePersonalDetails();
        // this.labReportList.push(this.Objecttobeinserted);
    };
    LabaddreportPage.prototype.WsGetAllDiagnosis = function () {
        var _this = this;
        this.api.wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDiagnosis, {}).then(function (resp) {
            var Temparray = resp;
            _this.arrDiseaseAssociated = Temparray.data;
        });
    };
    LabaddreportPage.prototype.WsGetAllLab1ReportByLab = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLab1ReportByLab, {})
            .then(function (resp) {
            var Temparray = resp;
            _this.AllReportList = Temparray.data;
            console.log("this.AllReportList" + JSON.stringify(_this.AllReportList));
            _this.WsGetAllDiagnosis();
        });
    };
    LabaddreportPage.prototype.CancelClicked = function () { };
    LabaddreportPage.prototype.DeleteFromList = function (obj) {
        var index = this.labReportList.indexOf(obj);
        console.log(index);
        this.labReportList.splice(index, 1);
    };
    LabaddreportPage.prototype.buttonClickForChooseReports = function () {
        var _this = this;
        Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["g" /* showActionSheetPhoto */])(this.actionSheetCrtl).then(function (seletedIndex) {
            _this.choosePhotoFromCameraOrGallery(seletedIndex);
        });
    };
    LabaddreportPage.prototype.choosePhotoFromCameraOrGallery = function (sourceType) {
        var _this = this;
        var options = {
            quality: 100,
            destinationType: __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__["b" /* DestinationType */].FILE_URL,
            sourceType: sourceType,
            saveToPhotoAlbum: true,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (imagePath) {
            console.log("getPicture >> ", imagePath);
            console.log("getPicture  normalizeURL(imagePath) >> ", Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            _this.saveImage(Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            _this.LabReportFile = imagePath;
        }, function (err) {
            alert(err);
        });
    };
    LabaddreportPage.prototype.saveImage = function (imageFileUri) {
        var _this = this;
        this.file
            .resolveLocalFilesystemUrl(imageFileUri)
            .then(function (entry) {
            return entry.file(function (file) {
                _this.readFile(file);
            });
        })
            .catch(function (err) { return console.log(err); });
    };
    LabaddreportPage.prototype.readFile = function (file) {
        var _this = this;
        var reader = new FileReader();
        reader.onloadend = function () {
            var imgBlob = new Blob([reader.result], { type: file.type });
            // console.log("readFile() : file.type >> ", file.type);
            // console.log("readFile() : file >> ", file);
            _this.formData.append("reportPath", imgBlob, file.name);
        };
        reader.readAsArrayBuffer(file);
    };
    LabaddreportPage.prototype.callWebserviceUpdatePersonalDetails = function () {
        var _this = this;
        if (this.IsShowDataFromOtherPage) {
            console.log("if call...");
            this.formData.append("reportLapAppId", "0");
            this.formData.append("reportPatLapAppId", this.reportPatLapAppId);
            this.formData.append("diagnosisMaster", this.LabReport.DiseaseID);
            this.formData.append("labReportLevel1ID", this.LabReport.labReportLevel1ID);
            this.formData.append("extraDetail", this.LabReport.ExtraDetail);
            this.formData.append("reportPath", this.LabReportFile);
            this.formData.append("vidreportPath", this.LabReportvideoFile);
        }
        else {
            console.log(this.labReportList.labReportLevel1ID + "else call...");
            this.formData.append("reportLapAppId", "0");
            this.formData.append("reportPatLapAppId", this.reportPatLapAppId);
            this.formData.append("diagnosisMaster", this.LabReport.DiseaseID);
            this.formData.append("labReportLevel1ID", this.LabReport.labReportLevel1ID);
            this.formData.append("extraDetail", this.LabReport.ExtraDetail);
            this.formData.append("reportPath", this.LabReportFile);
            this.formData.append("vidreportPath", this.LabReportvideoFile);
        }
        this.api
            .wsPostMutlipartHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditReportByLabUser, this.formData)
            .then(function (resp) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
        });
    };
    LabaddreportPage.prototype.buttonClickForChooseReportsvideo = function () {
        var _this = this;
        Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["g" /* showActionSheetPhoto */])(this.actionSheetCrtl).then(function (seletedIndex) {
            _this.choosePhotoFromCameraOrGalleryvideo(seletedIndex);
        });
    };
    LabaddreportPage.prototype.choosePhotoFromCameraOrGalleryvideo = function (sourceType) {
        var _this = this;
        var options = {
            quality: 100,
            destinationType: __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__["b" /* DestinationType */].FILE_URL,
            sourceType: sourceType,
            // sourceType: this.camera.PictureSourceType.PHOTOLIBRARY,
            saveToPhotoAlbum: true,
            // encodingType: this.camera.EncodingType.,
            mediaType: this.camera.MediaType.VIDEO,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (videoPath) { return __awaiter(_this, void 0, void 0, function () {
            var _this = this;
            var filename, dirpath, dirUrl, retrievedFile, err_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        console.log("getPicture >> ", "file://" + videoPath);
                        console.log("getvideo  normalizeURL(videopath) >> ", Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])("file://" + videoPath));
                        this.savevideo(Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])("file://" + videoPath));
                        filename = videoPath.substr(videoPath.lastIndexOf("/") + 1);
                        dirpath = videoPath.substr(0, videoPath.lastIndexOf("/") + 1);
                        dirpath = dirpath.includes("file://") ? dirpath : "file://" + dirpath;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 4, , 5]);
                        return [4 /*yield*/, this.file.resolveDirectoryUrl(dirpath)];
                    case 2:
                        dirUrl = _a.sent();
                        return [4 /*yield*/, this.file.getFile(dirUrl, filename, {})];
                    case 3:
                        retrievedFile = _a.sent();
                        return [3 /*break*/, 5];
                    case 4:
                        err_1 = _a.sent();
                        return [3 /*break*/, 5];
                    case 5:
                        this.videooption = { volume: 0.7 };
                        retrievedFile.file(function (data) {
                            _this.LabReportvideoFile = retrievedFile.nativeURL;
                            console.log("video url------" + retrievedFile.nativeURL);
                            _this.selectedVideo = retrievedFile.nativeURL;
                        });
                        return [2 /*return*/];
                }
            });
        }); }, function (err) {
            alert(err);
        });
    };
    LabaddreportPage.prototype.savevideo = function (videoFileUri) {
        var _this = this;
        this.file
            .resolveLocalFilesystemUrl(videoFileUri)
            .then(function (entry) {
            return entry.file(function (file) {
                _this.readFilevideo(file);
            });
        })
            .catch(function (err) { return console.log(err); });
    };
    LabaddreportPage.prototype.readFilevideo = function (file) {
        var _this = this;
        var reader = new FileReader();
        reader.onloadend = function () {
            var imgBlob = new Blob([reader.result], { type: file.type });
            _this.formData.append("vidreportPath", imgBlob, file.name);
        };
        reader.readAsArrayBuffer(file);
    };
    LabaddreportPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-labaddreport",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labaddreport/labaddreport.html"*/'<!--\n  Generated template for the LabaddreportPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <!-- <ion-navbar hideBackButton="false">\n\n   <ion-title>Add Report</ion-title>\n </ion-navbar>     -->\n\n  <ion-navbar>\n    <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Add Report</ion-title>\n    <ion-buttons left>\n      <button ion-button icon-only>\n        <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding class="login-hc">\n  <form text-center class="login-inner-hc">\n    <ion-list>\n      <!-- <ion-img width="112" height="120" src="assets/imgs/health-chain-logo.png"></ion-img> -->\n      <div class="login-signin-hc">\n        <div class="login-head-hc">\n          <!-- <div style="float:left;margin-top: 5px;margin-left: 10px;position: absolute;" *ngIf="IsShow == true">\n               <button\n               (click)="BackClicked()"ion-button small class="" color="default" light>Back</button>\n           </div> -->\n          <!-- <h5>Add Report</h5> -->\n        </div>\n\n        <div *ngIf="IsShow == false">\n          <ion-item>\n            <ion-label>Patient Id</ion-label>\n            <ion-select\n              [disabled]="IsShowDataFromOtherPage == true"\n              [(ngModel)]="LabReport.Patient"\n              name="LabReport.Patient"\n              (ionChange)="onSelectChange($event)"\n            >\n              <ion-option *ngFor="let P of Patients" [value]="P">\n                {{P.patientName}}\n              </ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label color="" floating>Report Detail</ion-label>\n            <ion-textarea\n              [(ngModel)]="LabReport.ReportDetail"\n              name="LabReport.ReportDetail"\n            ></ion-textarea>\n          </ion-item>\n\n          <ion-item>\n            <ion-label color="" floating>Additional Detail</ion-label>\n            <ion-textarea\n              [(ngModel)]="LabReport.AdditionalDetail"\n              name="LabReport.AdditionalDetail"\n            ></ion-textarea>\n          </ion-item>\n        </div>\n\n        <div *ngIf="IsShow == true">\n          <!-- <ion-item>\n               <ion-label color="" floating>Report Name</ion-label>\n               <ion-textarea  [(ngModel)]="LabReport.ReportName" name="LabReport.ReportName"></ion-textarea>\n             </ion-item> -->\n\n          <ion-item>\n            <ion-label>Report Name</ion-label>\n            <ion-select\n              [(ngModel)]="LabReport.ReportName"\n              name="LabReport.ReportName"\n              (ionChange)="onSelectChangeReportName($event)"\n            >\n              <ion-option *ngFor="let A of AllReportList" [value]="A">\n                {{A.lrl1Name}}\n              </ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item no-lines>\n            <ion-label>Upload Report</ion-label>\n          </ion-item>\n          <ion-item no-lines>\n            <button ion-button small (click)="buttonClickForChooseReports()">\n              Choose File\n            </button>\n          </ion-item>\n          <div class="uploaded-img">\n            <img\n              src="{{LabReportFile}}"\n              style="width: 100%"\n              [hidden]="imagePancard === null"\n            />\n          </div>\n\n          <ion-item no-lines>\n            <ion-label>Upload Video</ion-label>\n          </ion-item>\n          <!-- <ion-item no-lines>\n              <button ion-button small (click)="buttonClickForChooseReportsvideo()">Choose File</button>\n          </ion-item> -->\n\n          <!-- <video #myVideo style="width: 100%; margin-top: 6px; height: 180px;;padding: 6px 10px" controls="controls"\n              preload="metadata" webkit-playsinline="webkit-playsinline">\n              <source src="{{LabReportvideoFile}}" style="width: 100%" type="video/mp4" >\n              </video> -->\n          <!-- <video src="{{LabReportvideoFile}}"  type="video/mp4">\n              </video> -->\n\n          <div class="video-selection" *ngIf="!selectedVideo">\n            <p>Please select a video for upload from your gallery</p>\n            <button ion-button (click)="buttonClickForChooseReportsvideo()">\n              Select Video\n            </button>\n          </div>\n\n          <div class="video-section" *ngIf="selectedVideo">\n            <video width="400" height="200" controls>\n              <source [src]="selectedVideo" />\n            </video>\n          </div>\n\n          <div class="video-section" *ngIf="selectedVideo">\n            <video width="400" height="200" controls>\n              <source [src]="selectedVideo" />\n            </video>\n          </div>\n\n          <ion-item>\n            <ion-label>Disease Associated</ion-label>\n            <ion-select\n              [(ngModel)]="LabReport.DiseaseAssociated"\n              name="LabReport.DiseaseAssociated"\n              (ionChange)="onSelectChangeDesease($event)"\n            >\n              <ion-option *ngFor="let D of arrDiseaseAssociated" [value]="D">\n                {{D.diagnosiseName}}\n              </ion-option>\n            </ion-select>\n          </ion-item>\n\n          <ion-item>\n            <ion-label color="" floating>Extra Detail</ion-label>\n            <ion-textarea\n              [(ngModel)]="LabReport.ExtraDetail"\n              name="LabReport.ExtraDetail"\n            ></ion-textarea>\n          </ion-item>\n        </div>\n\n        <div *ngIf="IsShow == false" padding>\n          <button\n            (click)="NextClicked()"\n            ion-button\n            class=""\n            color="default"\n            light\n          >\n            Next\n          </button>\n        </div>\n\n        <div *ngIf="IsShow == true" style="margin-top: 10px;">\n          <button\n            (click)="SaveClicked()"\n            ion-button\n            small\n            class=""\n            color="secondary"\n            light\n          >\n            Save\n          </button>\n\n          <button\n            (click)="SaveAndAddClicked()"\n            ion-button\n            small\n            class=""\n            color="secondary"\n            light\n          >\n            Save & Add New\n          </button>\n\n          <!-- <button \n                     (click)="ResetClicked()"ion-button small class="" style="background:#CCC; color:black "light>Reset</button> -->\n        </div>\n\n        <ion-list class="cmn-tb-cntnt">\n          <ion-item-sliding #slidingItem *ngFor="let obj of labReportList">\n            <ion-item (click)="viewReportList(obj)">\n              <div class="ptnt-name">Report Name - {{obj.ReportName}}</div>\n              <div class="ptnt-name">Patient Id - {{obj.PatientId}}</div>\n              <div class="ptnt-name">\n                Disease Associated - {{obj.DiseaseAssociated}}\n              </div>\n              <div class="apmnt-tm">{{obj.ReportDate}} {{obj.ReportTime}}</div>\n            </ion-item>\n            <ion-item-options>\n              <button\n                ion-button\n                color="calm"\n                (click)="editItem(item.patAppointmentID)"\n              >\n                Edit\n              </button>\n              <button ion-button color="danger" (click)="DeleteFromList(obj)">\n                Delete\n              </button>\n            </ion-item-options>\n          </ion-item-sliding>\n        </ion-list>\n      </div>\n    </ion-list>\n  </form>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labaddreport/labaddreport.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_file_transfer__["a" /* FileTransfer */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_video_player__["a" /* VideoPlayer */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Platform */]])
    ], LabaddreportPage);
    return LabaddreportPage;
}());

//# sourceMappingURL=labaddreport.js.map

/***/ }),

/***/ 101:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DashBoardForMedicalstorePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__pharmadelivered_pharmadelivered__ = __webpack_require__(98);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__doctor_transactionhistory_transactionhistory__ = __webpack_require__(140);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the DashBoardForMedicalstorePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DashBoardForMedicalstorePage = /** @class */ (function () {
    function DashBoardForMedicalstorePage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.pharmadeliveredlistCount = "";
        this.transactionHistorycount = "";
    }
    DashBoardForMedicalstorePage.prototype.ionViewDidLoad = function () {
        var _this = this;
        console.log("ionViewDidLoad DashBoardForMedicalstorePage");
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].getpharmadeliverdpharma, "").then(function (resp) {
            _this.pharmadeliveredlistCount = resp.data.totalNumber;
        });
        this.api
            .wsGet(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].getAllPharmaTransactionHistory, "")
            .then(function (resp) {
            _this.transactionHistorycount = resp.data.totalNumber;
        });
    };
    DashBoardForMedicalstorePage.prototype.viewPharmaDeliveredList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__pharmadelivered_pharmadelivered__["a" /* PharmadeliveredPage */]);
    };
    DashBoardForMedicalstorePage.prototype.viewTransactionList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__doctor_transactionhistory_transactionhistory__["a" /* TransactionhistoryPage */]);
    };
    DashBoardForMedicalstorePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-dash-board-for-medicalstore",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/dash-board-for-medicalstore/dash-board-for-medicalstore.html"*/'<!--\n  Generated template for the DashBoardForMedicalstorePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Medical Store Dashboard</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <div class="page-content-white">\n    <div class="page-wrapper">\n      <div class="page-container">\n        <!-- start page content -->\n        <div class="page-content-wrapper home">\n          <div class="page-content">\n            <div class="page-bar clearfix">\n              <div class="page-title-breadcrumb">\n                <div class=" pull-left">\n                  <div class="page-title">Welcome to Health Chain</div>\n                </div>\n                <!-- <ol class="breadcrumb page-breadcrumb pull-right">\n                            <li><i class="fa fa-home"></i>&nbsp;<a class="parent-item" routerLink="/home">Home</a>&nbsp;<i class="fa fa-angle-right"></i>\n                            </li>\n                            <li class="active">Dashboard</li>\n                        </ol> -->\n              </div>\n            </div>\n            <!-- start widget -->\n            <div class="state-overview">\n              <div class="">\n                <div class="col-xl-4 col-md-6 col-12">\n                  <div class="info-box orange-bg info-dctr-vst-icon">\n                    <div class="info-box-content d-flex align-items-center">\n                      <span class="info-box-text"\n                        >Pharma <br />\n                        Delivered</span\n                      >\n                      <span class="info-box-number ml-auto"\n                        >{{ pharmadeliveredlistCount }}</span\n                      >\n                    </div>\n                    <!-- /.info-box-content -->\n                    <!-- <button ion-button color="calm" (click)="editItem(item.patAppointmentID)"></button> -->\n                    <button\n                      class="view-dtl-btn"\n                      (click)="viewPharmaDeliveredList()"\n                    >\n                      View Details\n                    </button>\n                  </div>\n                  <!-- /.info-box -->\n                </div>\n                <!-- /.col -->\n\n                <!-- /.col -->\n              </div>\n            </div>\n\n            <div class="col-xl-4 col-md-6 col-12">\n              <div class="info-box orange-bg info-dctr-vst-icon">\n                <div class="info-box-content d-flex align-items-center">\n                  <span class="info-box-text"\n                    >Transaction <br />\n                    History\n                  </span>\n                  <span class="info-box-number ml-auto"\n                    >{{ transactionHistorycount }}</span\n                  >\n                </div>\n                <!-- /.info-box-content -->\n                <!-- <button ion-button color="calm" (click)="editItem(item.patAppointmentID)"></button> -->\n                <button class="view-dtl-btn" (click)="viewTransactionList()">\n                  View Details\n                </button>\n              </div>\n              <!-- /.info-box -->\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- end page content -->\n    </div>\n\n    <!-- include js -->\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/dash-board-for-medicalstore/dash-board-for-medicalstore.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], DashBoardForMedicalstorePage);
    return DashBoardForMedicalstorePage;
}());

//# sourceMappingURL=dash-board-for-medicalstore.js.map

/***/ }),

/***/ 112:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GeocoderProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common_http__ = __webpack_require__(172);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__(346);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_native_geocoder__ = __webpack_require__(347);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/*
  Generated class for the GeocoderProvider provider.

  See https://angular.io/guide/dependency-injection for more info on providers
  and Angular DI.
*/
var GeocoderProvider = /** @class */ (function () {
    function GeocoderProvider(http, _GEOCODE) {
        this.http = http;
        this._GEOCODE = _GEOCODE;
        console.log("Hello GeocoderProvider Provider");
    }
    GeocoderProvider.prototype.reverseGeocode = function (lat, lng) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this._GEOCODE
                .reverseGeocode(lat, lng)
                .then(function (result) {
                var str = "The reverseGeocode address is " + result[0].street + " in " + result[0].countryCode;
                resolve(str);
            })
                .catch(function (error) {
                reject(error);
            });
        });
    };
    GeocoderProvider.prototype.forwardGeocode = function (keyword) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this._GEOCODE
                .forwardGeocode(keyword)
                .then(function (coordinates) {
                // let str : string[];
                // str[0]   = coordinates[0].latitude;
                // str[1] =coordinates[0].longitude;
                console.log("test");
                // let str : string   = `${coordinates[0].latitude},${coordinates[0].longitude}`;
                resolve(coordinates);
            })
                .catch(function (error) {
                reject(error);
            });
        });
    };
    GeocoderProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_common_http__["a" /* HttpClient */], __WEBPACK_IMPORTED_MODULE_3__ionic_native_native_geocoder__["a" /* NativeGeocoder */]])
    ], GeocoderProvider);
    return GeocoderProvider;
}());

//# sourceMappingURL=geocoder.js.map

/***/ }),

/***/ 136:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoginPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__signup_signup__ = __webpack_require__(232);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__forgotpassword_forgotpassword__ = __webpack_require__(231);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__doctor_dash_board_for_doctor_dash_board_for_doctor__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__patient_dash_board_for_patient_dash_board_for_patient__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__laboratory_laboratorydashboard_laboratorydashboard__ = __webpack_require__(99);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__medicalstore_dash_board_for_medicalstore_dash_board_for_medicalstore__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_native_network__ = __webpack_require__(177);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__ionic_native_fcm__ = __webpack_require__(120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__ionic_native_google_plus__ = __webpack_require__(393);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};















/**
 * Generated class for the LoginPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LoginPage = /** @class */ (function () {
    function LoginPage(navCtrl, navParams, api, alertCtrl, toastCtrl, actionSheetCtrl, events, menuController, network, fcm, googleplus) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.toastCtrl = toastCtrl;
        this.actionSheetCtrl = actionSheetCtrl;
        this.events = events;
        this.menuController = menuController;
        this.network = network;
        this.fcm = fcm;
        this.googleplus = googleplus;
        // public selectedRole:string;
        this.objectdata = [];
        this.account = {
            username: "",
            password: "",
            perProfile: "",
            deviceToken: "12345678902",
            deviceID: "12345678902",
            deviceType: "IOS"
        };
        // this.navCtrl.push(AddappointmentPage);
    }
    LoginPage.prototype.googlelogin = function () {
        console.log("google response");
        this.googleplus.login({
            "webClientId": "401030294796-e0u3es1vc1fofj3ra03rhms7g722av1k.apps.googleusercontent.com",
            "offline": true
        }).then(function (res) {
            console.log("google response" + JSON.stringify(res));
            // alert("google response" +res);
            // firebase.auth().signInWithCredential(firebase.auth.GoogleAuthProvider.credential(res.idToken))
            // .then(suc=>{
            //   alert("LOGIN SUCCESS");
            // })
            // .catch(NS=>{
            //   alert("NOT LOGIN SUCCESS");
            // })
        });
    };
    LoginPage.prototype.presentActionSheet = function (responseDataForButton) {
        var actionSheet = this.actionSheetCtrl.create({
            title: "Login as",
            buttons: this.createButtons(responseDataForButton)
        });
        actionSheet.present();
    };
    LoginPage.prototype.createButtons = function (possibleButtons) {
        var _this = this;
        var buttons = [];
        for (var index in possibleButtons) {
            var button = {
                text: possibleButtons[index],
                handler: function () {
                    // localStorage.setItem(selectedRole, 'Doctor');
                    localStorage.setItem(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["f" /* selectedRole */], buttons[index].text);
                    // console.log( 'selectedRole = ' + localStorage.getItem(selectedRole))
                    console.log("selectedRole in login = " + localStorage.getItem(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["f" /* selectedRole */]));
                    // selectedRole = possibleButtons[index].text
                    if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_6__doctor_dash_board_for_doctor_dash_board_for_doctor__["a" /* DashBoardForDoctorPage */]);
                    }
                    else {
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_7__patient_dash_board_for_patient_dash_board_for_patient__["a" /* DashBoardForPatientPage */]);
                    }
                    _this.events.publish("user:created", Date.now());
                    return true;
                }
            };
            buttons.push(button);
        }
        return buttons;
    };
    LoginPage.prototype.presentAlert = function () {
        var alert = this.alertCtrl.create({
            title: "Login Failed",
            subTitle: "User not found",
            buttons: ["OK"]
        });
        alert.present();
    };
    LoginPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad LoginPage");
        this.menuController.swipeEnable(false);
    };
    LoginPage.prototype.openNav = function () {
        var _this = this;
        // Reset the content nav to have just this page
        // we wouldn't want the back button to show in this scenario
        // this.nav.setRoot(page.component);
        // this.account.username = "arpit";
        // this.account.password = "arpit";
        if (this.account.username.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter User name", this.toastCtrl);
            return;
        }
        else if (this.account.password.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Password", this.toastCtrl);
            return;
        }
        localStorage.setItem(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["k" /* username */], this.account.username);
        localStorage.setItem(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["d" /* password */], this.account.password);
        var body = {
            deviceToken: Math.random(),
            deviceID: Math.random(),
            deviceType: "Android"
        };
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["a" /* APIName */].login, body).then(function (resp) {
            console.log("Respomse : " + resp);
            var myObjStr = JSON.stringify(resp);
            console.log("response:" + myObjStr);
            //  console.log("response:"+resp.status);
            if (!resp) {
                console.log("call this");
                Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Right Password or Username", _this.toastCtrl);
            }
            else if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("wsPostHeader :hellooooo >>", typeof resp);
                _this.objectdata = resp;
                if (typeof resp != "undefined" &&
                    _this.objectdata.data.data.length == 1) {
                    console.log("selectedRole===>", _this.objectdata.data.data[0]);
                    localStorage.setItem(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["e" /* perProfile */], _this.objectdata.data.perProfile);
                    localStorage.setItem(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["f" /* selectedRole */], _this.objectdata.data.data[0]);
                    // localStorage.setItem(username, this.objectdata.data.name);
                    localStorage.setItem("fcmid", _this.objectdata.data.id);
                    if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
                        _this.menuController.swipeEnable(true);
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_6__doctor_dash_board_for_doctor_dash_board_for_doctor__["a" /* DashBoardForDoctorPage */]);
                    }
                    else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Laboratory") {
                        _this.menuController.swipeEnable(true);
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_8__laboratory_laboratorydashboard_laboratorydashboard__["a" /* LaboratorydashboardPage */]);
                    }
                    else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "MedicalCenter") {
                        _this.menuController.swipeEnable(true);
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__medicalstore_dash_board_for_medicalstore_dash_board_for_medicalstore__["a" /* DashBoardForMedicalstorePage */]);
                    }
                    else {
                        _this.menuController.swipeEnable(true);
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_7__patient_dash_board_for_patient_dash_board_for_patient__["a" /* DashBoardForPatientPage */]);
                    }
                    _this.events.publish("user:created", Date.now());
                }
                else if (typeof resp != "undefined" &&
                    _this.objectdata.data.data.length > 1) {
                    _this.presentActionSheet(_this.objectdata.data.data);
                }
                else {
                    Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])("No Role assign to you , Please contact admin", _this.toastCtrl);
                }
            }
        });
    };
    LoginPage.prototype.gotosignup = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__signup_signup__["a" /* SignupPage */]);
    };
    LoginPage.prototype.gotoforgotpassword = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__forgotpassword_forgotpassword__["a" /* ForgotpasswordPage */]);
    };
    LoginPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-login",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/commonpages/login/login.html"*/'<ion-content padding class="loginpage">\n  <div class="">\n    <div class="dis-tbl">\n      <div class="dis-tbl-cl">\n        <div class="lgn-cntnt">\n          <div class="lgn-lgo text-center">\n            <a href="javascript:;"\n              ><img\n                class="img-responsive"\n                src="assets/images/logo.png"\n                alt="Logo"\n            /></a>\n          </div>\n\n          <div class="lgn-frm-box">\n            <div class="login-form">\n              <div class="lgn-ttl text-center">LOGIN</div>\n\n              <form class="cmn-form mt-10">\n                <div class="row">\n                  <div class="col-md-12">\n                    <div class="form-group">\n                      <ion-label class="bmd-label-floating"\n                        >User Name</ion-label\n                      >\n                      <input\n                        type="email"\n                        [(ngModel)]="account.username"\n                        name="Username"\n                        class="form-control"\n                      />\n                    </div>\n                  </div>\n\n                  <div class="col-md-12">\n                    <div class="form-group">\n                      <ion-label class="bmd-label-floating">Password</ion-label>\n                      <input\n                        type="password"\n                        [(ngModel)]="account.password"\n                        name="Password"\n                        class="form-control"\n                      />\n                    </div>\n                  </div>\n\n                  \n\n                  <div class="frgt-lnk col-md-12 text-right mt-10 mb-30">\n                    <a (click)="gotoforgotpassword()" href="javascript:;"\n                      >Forgot Password?</a\n                    >\n                  </div>\n                </div>\n\n                <div class="row">\n                  <div class="ml-auto mr-auto text-center">\n                    <button class="btn lgn-btn thm-btn" (click)="openNav()">\n                      Login Now <img src="assets/images/arwrgt.png" />\n                    </button>\n                  </div>\n                </div>\n                <br>\n                <br>\n                <br>\n\n                \n                  <button ion-button icon-left (click)="googlelogin()" block outline>\n                    <ion-icon name="logo-googleplus"></ion-icon> \n                    Login With Google\n                    <ion-select>\n                        <ion-option>\n                          Patient\n                        </ion-option>\n                        <ion-option>\n                          Doctor\n                        </ion-option>\n                        <ion-option>\n                            Laboratort\n                        </ion-option>\n                        <ion-option>\n                              Pharma\n                        </ion-option>\n                      </ion-select>\n                  </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- </ion-list>\n    </form> -->\n  <!-- <div class="alredayHave-hc" text-center>\n        Don\'t have account? <a (click)="gotosignup()" href="#">Signup</a>\n      </div>  -->\n\n  <div class="signup-link">\n    <span class="opacity-6" f>Don’t have an account?</span>\n    <a (click)="gotosignup()" href="javascript:;">Sign Up</a>\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/commonpages/login/login.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_4__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* MenuController */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_native_network__["a" /* Network */],
            __WEBPACK_IMPORTED_MODULE_11__ionic_native_fcm__["a" /* FCM */],
            __WEBPACK_IMPORTED_MODULE_12__ionic_native_google_plus__["a" /* GooglePlus */]])
    ], LoginPage);
    return LoginPage;
}());

//# sourceMappingURL=login.js.map

/***/ }),

/***/ 137:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppointmentlistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__viewappointment_viewappointment__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__addappointment_addappointment__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__editappointment_editappointment__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__rebookappointment_rebookappointment__ = __webpack_require__(61);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the AppointmentlistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AppointmentlistPage = /** @class */ (function () {
    function AppointmentlistPage(navCtrl, navParams, api, alertCtrl, datepipe) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.datepipe = datepipe;
        this.appointmentTodayItems = [];
        this.currentAppointlist = [];
        //localStorage.setItem(selectedRole, 'Patient');
        //localStorage.setItem(selectedRole, 'Doctor');
        this.currentAppointlist = this.appointmentTodayItems;
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        // if (localStorage.getItem(selectedRole) == 'Patient') {
        //   this.api.wsPostHeader(APIName.getAppointmentPatient, '').then((resp:any) => {
        //     this.appointmentTodayItems = resp.data;
        //     this.currentAppointlist = resp.data;
        //   });
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                _this.currentAppointlist = resp.data.patAppointmentPojo;
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
            // this.api.wsPostHeader(APIName.getAppointmentDoctor, '').then((resp:any) => {
            //   this.appointmentTodayItems = resp.data;
            //   this.currentAppointlist = resp.data;
            // });
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, '').then(function (resp) {
                _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                _this.currentAppointlist = resp.data.patAppointmentPojo;
            });
        }
    }
    AppointmentlistPage.prototype.ionViewDidLoad = function () {
    };
    AppointmentlistPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__addappointment_addappointment__["a" /* AddappointmentPage */]);
    };
    AppointmentlistPage.prototype.editItem = function (id) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__editappointment_editappointment__["a" /* EditappointmentPage */], { patAppointmentID: id });
    };
    AppointmentlistPage.prototype.changeItem = function (stateInt) {
        switch (stateInt) {
            case 1:
                this.currentAppointlist = this.appointmentTodayItems;
                break;
            default:
        }
    };
    AppointmentlistPage.prototype.openItem = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__viewappointment_viewappointment__["a" /* ViewappointmentPage */], { item: item });
    };
    AppointmentlistPage.prototype.Canceled = function (data) {
        var _this = this;
        console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to cancel?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            "patientAppointmentStatus": "Cancel",
                            "id": d.patAppointmentID,
                            "description": ''
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Cancel",
                            // "patAppDescription":''
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                // this.api.wsPostHeaderBackground(APIName.getAppointmentDoctor, '').then((resp:any) => {
                                //   this.appointmentTodayItems = resp.data;
                                //   this.currentAppointlist = resp.data;
                                // });
                                _this.api.wsGetBG(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, '').then(function (resp) {
                                    _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    AppointmentlistPage.prototype.checkNulldata = function (data) {
        if (data.fclProviderMapID === null) {
            data.fclProviderMapID = "";
        }
        if (data.specialityID === null) {
            data.specialityID = "";
        }
        if (data.patAppDate === null) {
            data.patAppDate = 1524123001;
        }
        if (data.patAppTimeFrom === null) {
            data.patAppTimeFrom = 1524123001;
        }
        if (data.patAppTimeTo === null) {
            data.patAppTimeTo = 1524123001;
        }
        if (data.patAppType === null) {
            data.patAppType = "New";
        }
        if (data.patAppReason === null) {
            data.patAppReason = "BP";
        }
        if (data.patAppDescription === null) {
            data.patAppDescription = "dsfdsfdf";
        }
        return data;
    };
    AppointmentlistPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to reject?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Rejected",
                            // "patAppDescription":''
                            "patientAppointmentStatus": "Rejected",
                            "id": d.patAppointmentID,
                            "description": ''
                        };
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                // this.api.wsPostHeaderBackground(APIName.getAppointmentDoctor, '').then((resp:any) => {
                                //   this.appointmentTodayItems = resp.data;
                                //   this.currentAppointlist = resp.data;
                                // });
                                _this.api.wsGetBG(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, '').then(function (resp) {
                                    _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    AppointmentlistPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to approve?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        // console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Approved",
                            // "patAppDescription":''
                            "patientAppointmentStatus": "Approved",
                            "id": d.patAppointmentID,
                            "description": ''
                        };
                        //console.log(passParam);
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                // this.api.wsPostHeaderBackground(APIName.getAppointmentDoctor, '').then((resp:any) => {
                                //   this.appointmentTodayItems = resp.data;
                                //   this.currentAppointlist = resp.data;
                                // });
                                _this.api.wsGetBG(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, '').then(function (resp) {
                                    _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    AppointmentlistPage.prototype.Addvisit = function (data) {
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to Add visit?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    AppointmentlistPage.prototype.Edit = function (data) {
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to edit?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    AppointmentlistPage.prototype.Cancel = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to cancel?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Cancel",
                            // "patAppDescription":''
                            "patientAppointmentStatus": "Cancel",
                            "id": d.patAppointmentID,
                            "description": ''
                        };
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                // this.api.wsPostHeaderBackground(APIName.getAppointmentPatient, '').then((resp:any) => {
                                //   this.appointmentTodayItems = resp.data;
                                //   this.currentAppointlist = resp.data;
                                // });
                                _this.api.wsGet(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                    _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    AppointmentlistPage.prototype.ReBook = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to re-book?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var d = _this.checkNulldata(data);
                        var id = d.patAppointmentID;
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__rebookappointment_rebookappointment__["a" /* RebookappointmentPage */], { patAppointmentID: id });
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    AppointmentlistPage.prototype.changeStringToDate = function (dateString, format) {
        if (format) {
            console.log('StringToDate==>', this.changeDateFormat(new Date(dateString), format));
            return this.changeDateFormat(new Date(dateString), format);
        }
        else {
            console.log('completeString=>>>>>>', dateString);
            console.log('StringToDate==>', new Date(dateString).toISOString());
            return new Date(dateString).toISOString();
        }
    };
    //date to any format
    AppointmentlistPage.prototype.changeDateFormat = function (date, formate) {
        var latest_date = this.datepipe.transform(date, formate);
        console.log("ChangeDateFormat", latest_date);
        return latest_date;
    };
    AppointmentlistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-appointmentlist',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/appointmentlist/appointmentlist.html"*/'<!--\n  Generated template for the AppointmentlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Appointment List</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<!-- <ion-tabs selectedIndex="1">\n    <ion-tab [root]="tab1Root" [tabTitle]="Today" tabIcon="home"></ion-tab>\n    <ion-tab [root]="tab2Root" [tabTitle]="Tommorrow" tabIcon="home"></ion-tab>\n    <ion-tab [root]="tab3Root" [tabTitle]="View All" tabIcon="home"></ion-tab>\n  </ion-tabs> -->\n\n<ion-content>\n  <div class="cmn-list-page">\n    <div *ngIf="selectRole == \'Patient\'">\n      <div\n        class="cmn-apmnt-row w-100 clearfix"\n        #slidingItem\n        *ngFor="let item of currentAppointlist"\n      >\n        <div>\n          <div class="apmn-lft" (click)="openItem(item)">\n            <div class="dr-name">{{ item.providerName }}</div>\n            <div class="dr-adrs">\n              <img src="assets/images/location.png" />\n              {{ item.facilityCenterType }} {{ item.facilityCenterName }}- {{\n              item.fcLocationName }}\n            </div>\n            <div class="apmnt-dt-tm">\n              <img src="assets/images/cal.png" />\n              <span class="apmn-time"\n                >{{ item.patAppDate | date: "dd/MM/yyyy" }} {{ item.patAppTimeTo\n                | date: "shortTime" }}</span\n              >\n            </div>\n          </div>\n\n          <div\n            *ngIf="item.patAppStatus == \'Approved\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl accepted">\n              {{ item.patAppStatus }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.patAppStatus == \'Cancel\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl cancelled">\n              {{ item.patAppStatus }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.patAppStatus == \'Rejected\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl rejected">\n              {{ item.patAppStatus }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.patAppStatus == \'Pending\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl pending">\n              {{ item.patAppStatus }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.patAppStatus == \'Completed\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl accepted">\n              {{ item.patAppStatus }}\n            </span>\n          </div>\n\n          <ion-item-options *ngIf="item.patAppStatus == \'Pending\'">\n            <button\n              ion-button\n              color="calm"\n              (click)="editItem(item.patAppointmentID)"\n            >\n              Edit\n            </button>\n            <button ion-button color="danger" (click)="Cancel(item)">\n              Cancel\n            </button>\n          </ion-item-options>\n\n          <ion-item-options *ngIf="item.patAppStatus == \'Completed\'">\n            <button ion-button color="danger" (click)="ReBook(item)">\n              Re-Book\n            </button>\n          </ion-item-options>\n\n          <ion-item-options *ngIf="item.patAppStatus == \'Approved\'">\n            <button ion-button color="danger" (click)="Cancel(item)">\n              Cancel\n            </button>\n          </ion-item-options>\n\n          <ion-item-options *ngIf="item.patAppStatus == \'Rejected\'">\n            <button ion-button (click)="ReBook(item)">Re-Book</button>\n          </ion-item-options>\n\n          <ion-item-options *ngIf="item.patAppStatus == \'Cancel\'">\n            <button ion-button (click)="ReBook(item)">Re-Book</button>\n          </ion-item-options>\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf="selectRole == \'Doctor\'">\n      <div\n        class="cmn-apmnt-row clearfix w-100 clearfix"\n        #slidingItem\n        *ngFor="let item of currentAppointlist"\n      >\n        <div>\n          <div class="apmn-lft" (click)="openItem(item)">\n            <div class="dr-name">{{ item.name }}</div>\n            <div class="dr-adrs">\n              <!-- <img src="assets/images/location.png" /> -->\n              {{ item.patAppReason }}\n            </div>\n            <div class="apmnt-dt-tm">\n              <img src="assets/images/cal.png" />\n              <span class="apmn-time"\n                >{{ item.patAppDate | date: "dd/MM/yyyy" }} {{ item.patAppTimeTo\n                | date: "shortTime" }}</span\n              >\n            </div>\n          </div>\n\n          <div\n            *ngIf="item.patAppStatus == \'Approved\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl accepted">\n              {{ item.patAppStatus }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.patAppStatus == \'Cancel\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl cancelled">\n              {{ item.patAppStatus }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.patAppStatus == \'Rejected\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl rejected">\n              {{ item.patAppStatus }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.patAppStatus == \'Pending\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl pending">\n              {{ item.patAppStatus }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.patAppStatus == \'Completed\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl accepted">\n              {{ item.patAppStatus }}\n            </span>\n          </div>\n\n          <!-- <div class="apmn-rgt" (click)="openItem(item)">\n            <span class="apmnt-lbl accepted">\n              {{ item.patAppStatus }}\n            </span>\n          </div> -->\n\n          <!-- <div class="apmnt-date">\n              {{ item.patAppDate | date: "dd/MM/yyyy" }}\n            </div> -->\n          <ion-item-options *ngIf="item.patAppStatus == \'Pending\'">\n            <button ion-button (click)="Approved(item)">Approve</button>\n            <button ion-button color="danger" (click)="Rejected(item)">\n              Reject\n            </button>\n            <button ion-button color="danger" (click)="Canceled(item)">\n              Cancel\n            </button>\n          </ion-item-options>\n\n          <ion-item-options *ngIf="item.patAppStatus == \'Approved\'">\n            <button ion-button (click)="Addvisit(item)">Add Visit</button>\n            <button ion-button color="danger" (click)="Canceled(item)">\n              Cancel\n            </button>\n          </ion-item-options>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ion-fab bottom right *ngIf="selectRole == \'Patient\'">\n    <button class="cmn-create-btn" ion-fab (click)="addItem()">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n</ion-content>\n<!-- <div class="cmn-apmnt-row clearfix">\n        <div class="apmn-lft">\n          <div class="dr-name">Dr. Andrew Simons</div>\n          <div class="dr-adrs">\n            <img src="assets/images/location.png" /> Apolo Hostipal - Makarba\n          </div>\n          <div class="apmnt-dt-tm">\n            <img src="assets/images/cal.png" />\n            5 Oct 2018<span class="apmn-time">10:45 AM - 11:45 AM</span>\n          </div>\n        </div>\n        <div class="apmn-rgt">\n          <span class="apmnt-lbl pending">\n            Pending\n          </span>\n        </div>\n      </div> -->\n<!-- <div class="cmn-list-page">\n      <div class="cmn-tab-dsgn">\n          <ul>\n            <li class="first" (click)="changeItem(1)"><button type="button" class="tab-btn">Today</button></li>\n            <li (click)="changeItem(2)"><button type="button" class="tab-btn">Tomorrow</button></li>\n            <li class="last" (click)="changeItem(3)"><button type="button" class="tab-btn">View All</button></li>\n          </ul>\n      </div>\n      \n      <ion-list class="cmn-tb-cntnt" *ngIf="selectRole == \'Patient\'">\n        <ion-item-sliding #slidingItem *ngFor="let item of currentAppointlist">\n            <ion-item (click)="openItem(item)" >\n                <div class="ptnt-name">{{item.providerName}}</div>\n                <div class="rson-fr-meet">{{item.facilityCenterName}} {{item.facilityCenterType}} - {{item.fcLocationName}}</div>\n                <div class="apmnt-tm">{{item.patAppDate | date:\'dd/MM/yyyy\'}} {{item.patAppTimeTo | date : \'shortTime\'}}</div>\n                <div class="apmnt-status" >{{item.patAppStatus}}</div>\n            </ion-item>\n            <ion-item-options *ngIf="item.patAppStatus == \'Pending\'">\n                  <button ion-button color="calm" (click)="editItem(item.patAppointmentID)">Edit</button>\n                  <button ion-button color="danger" (click)="Cancel(item)">Cancel</button>\n            </ion-item-options>\n  \n            <ion-item-options *ngIf="item.patAppStatus == \'Completed\'">\n                  <button ion-button color="danger" (click)="ReBook(item)">Re-Book</button>\n            </ion-item-options>\n  \n            <ion-item-options *ngIf="item.patAppStatus == \'Approved\'">\n                  <button ion-button color="danger" (click)="Cancel(item)">Cancel</button>\n            </ion-item-options>\n  \n            <ion-item-options *ngIf="item.patAppStatus == \'Rejected\'">\n                <button ion-button (click)="ReBook(item)">Re-Book</button>\n            </ion-item-options>\n  \n            <ion-item-options *ngIf="item.patAppStatus == \'Cancel\'">\n                <button ion-button (click)="ReBook(item)">Re-Book</button>\n            </ion-item-options>  \n  \n          </ion-item-sliding>\n      </ion-list>\n  \n  \n      <ion-list class="cmn-tb-cntnt" *ngIf="selectRole == \'Doctor\'">\n        <ion-item-sliding #slidingItem *ngFor="let item of currentAppointlist">\n            <ion-item (click)="openItem(item)" >\n              <div class="ptnt-name">{{item.name}}</div>\n              <div class="rson-fr-meet">{{item.patAppReason}}</div>\n              <div class="apmnt-tm">{{item.patAppDate | date:\'dd/MM/yyyy\'}} {{item.patAppTimeTo | date:\'shortTime\'}}</div>\n              <div class="apmnt-status">{{item.patAppStatus}}</div>\n            </ion-item>\n            <ion-item-options *ngIf="item.patAppStatus == \'Pending\'">\n                <button ion-button (click)="Approved(item)">Approve</button>\n                <button ion-button color="danger" (click)="Rejected(item)">Reject</button>\n                <button ion-button color="danger" (click)="Canceled(item)">Cancel</button>\n            </ion-item-options>\n  \n            <ion-item-options *ngIf="item.patAppStatus == \'Approved\'">\n                <button ion-button (click)="Addvisit(item)">Add Visit</button>\n                <button ion-button color="danger" (click)="Canceled(item)">Cancel</button>\n            </ion-item-options>  \n  \n          </ion-item-sliding>\n      </ion-list>\n  \n    </div>\n    <ion-fab bottom right  *ngIf="selectRole == \'Patient\'">\n      <button style="background-color:#4633BE;" ion-fab (click)="addItem()"><ion-icon name="add"></ion-icon></button>\n   </ion-fab> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/appointmentlist/appointmentlist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_7__angular_common__["d" /* DatePipe */]])
    ], AppointmentlistPage);
    return AppointmentlistPage;
}());

//# sourceMappingURL=appointmentlist.js.map

/***/ }),

/***/ 138:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DoctorvisitlistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__doctorvisitlistview_doctorvisitlistview__ = __webpack_require__(234);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__doctor_add_or_edit_visit_doctor_add_or_edit_visit__ = __webpack_require__(235);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






//import { DoctorvisitdetailPage } from '../doctorvisitdetail/doctorvisitdetail';
/**
 * Generated class for the DoctorvisitlistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DoctorvisitlistPage = /** @class */ (function () {
    function DoctorvisitlistPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.visitlist = [];
        this.diagnosisMaster = [];
    }
    DoctorvisitlistPage.prototype.openItem = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__doctorvisitlistview_doctorvisitlistview__["a" /* DoctorvisitlistviewPage */], { item: item });
    };
    DoctorvisitlistPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        console.log('ionViewDidLoad DoctorvisitlistPage');
        //    alert("resp::--- ");
        //console.log("APIName.getAppointmentPatient>>> "+APIName.getAppointmentPatient);
        // this.api.wsPostHeader(APIName.getDoctorVisitlist, '').then((resp:any) => {
        //   //this.ViewAppointment=resp;
        //   console.log('getDoctorVisitlist : >>', JSON.stringify(resp.data));
        //   this.diagnosisMaster = resp.data;
        //   console.log(this.diagnosisMaster);
        //   this.visitlist = resp.data;
        // });
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getDoctorVisitlist, '').then(function (resp) {
            console.log('getDoctorVisitlist : >>', JSON.stringify(resp.data));
            _this.diagnosisMaster = resp.data.patVisitNotePojo;
            console.log(_this.diagnosisMaster);
            _this.visitlist = resp.data.patVisitNotePojo;
        });
    };
    DoctorvisitlistPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__doctor_add_or_edit_visit_doctor_add_or_edit_visit__["a" /* DoctorAddOrEditVisitPage */]);
    };
    DoctorvisitlistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-doctorvisitlist',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorvisitlist/doctorvisitlist.html"*/'<!--\n  Generated template for the AppointmentlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Doctor Visit List</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="cmn-list">\n    <div\n      class="cmn-apmnt-row clearfix"\n      (click)="openItem(item)"\n      *ngFor="let item of visitlist"\n    >\n      <div class="apmn-lft">\n        <div class="dr-name">{{ item.patVisitDate }}</div>\n        <div class="dr-adrs">Patient Id : {{ item.patientID }}</div>\n        <div class="dr-adrs">Name: {{ item.name }}</div>\n        <div class="dr-adrs">\n          Possible Disease :\n          <b *ngFor="let d of item.diagnosisMaster">{{ d.diagnosiseName }},</b>\n        </div>\n      </div>\n      <div class="view-dtl">\n        <a href="javascript:;">View Details</a>\n      </div>\n    </div>\n  </div>\n\n  <ion-fab bottom right>\n    <button class="cmn-create-btn" ion-fab (click)="addItem()">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n</ion-content>\n\n<!-- <ion-list>\n  <ion-item *ngFor="let item of visitlist" (click)="openItem(item)">\n    <h2>{{ item.patVisitDate }}</h2>\n    <p>\n      Patient Id : <b>{{ item.patientID }}</b>\n    </p>\n    <p>\n      Name: <b>{{ item.name }}</b>\n    </p>\n    <p>\n      Possible Disease :\n      <b *ngFor="let d of item.diagnosisMaster">{{ d.diagnosiseName }},</b>\n    </p>\n  </ion-item>\n</ion-list> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorvisitlist/doctorvisitlist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */]])
    ], DoctorvisitlistPage);
    return DoctorvisitlistPage;
}());

//# sourceMappingURL=doctorvisitlist.js.map

/***/ }),

/***/ 139:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientreportsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__patient_editappointment_editappointment__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__patient_viewappointment_viewappointment__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__patient_rebookappointment_rebookappointment__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the PatientreportsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientreportsPage = /** @class */ (function () {
    function PatientreportsPage(navCtrl, navParams, api, alertCtrl, datepipe) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.datepipe = datepipe;
        this.appointmentTodayItemes = [];
        this.currentAppointlist = [];
        this.patintreportslist = [];
        this.currentAppointlist = this.appointmentTodayItemes;
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        // if (localStorage.getItem(selectedRole) == "Patient") {
        //   this.api.wsGet(APIName.getpatientreports, "").then((resp: any) => {
        //     // this.appointmentTodayItemes=resp.data.patAppointmentPojo;
        //     // this.currentAppointlist=resp.data.patAppointmentPojo;
        //    // this.pharmadeliveredlist = resp.data.pharmapojolist;
        //   });
        // } else if (localStorage.getItem(selectedRole) == "Doctor") {
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getpatientreports, "").then(function (resp) {
            // this.appointmentTodayItemes = resp.data.patAppointmentPojo;
            // this.currentAppointlist = resp.data.patAppointmentPojo;
            _this.patintreportslist = resp.data.labReportPojo;
        });
        // }
    }
    PatientreportsPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad patintrepotspage");
    };
    PatientreportsPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__["a" /* AddappointmentPage */]);
    };
    PatientreportsPage.prototype.editItem = function (id) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__patient_editappointment_editappointment__["a" /* EditappointmentPage */], { patAppointmentID: id });
    };
    PatientreportsPage.prototype.changeItem = function (stateInt) {
        switch (stateInt) {
            case 1:
                this.currentAppointlist = this.appointmentTodayItemes;
                break;
            default:
        }
    };
    PatientreportsPage.prototype.openItem = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__patient_viewappointment_viewappointment__["a" /* ViewappointmentPage */], { item: item });
    };
    PatientreportsPage.prototype.Canceled = function (data) {
        var _this = this;
        console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to cancel?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            patientAppointmentStatus: "Cancel",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                            }
                            else {
                                _this.api
                                    .wsGetBG(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, "")
                                    .then(function (resp) {
                                    _this.appointmentTodayItemes =
                                        resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PatientreportsPage.prototype.checkNulldata = function (data) {
        if (data.fclProviderMapID === null) {
            data.fclProviderMapID = "";
        }
        if (data.specialityID === null) {
            data.specialityID = "";
        }
        if (data.patAppDate === null) {
            data.patAppDate = 1524123001;
        }
        if (data.patAppTimeFrom === null) {
            data.patAppTimeFrom = 1524123001;
        }
        if (data.patAppTimeTo === null) {
            data.patAppTimeTo = 1524123001;
        }
        if (data.patAppType === null) {
            data.patAppType = "New";
        }
        if (data.patAppReason === null) {
            data.patAppReason = "BP";
        }
        if (data.patAppDescription === null) {
            data.patAppDescription = "dsfdsfdf";
        }
        return data;
    };
    PatientreportsPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to reject?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            patientAppointmentStatus: "Rejected",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                            }
                            else {
                                _this.api
                                    .wsGetBG(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, "")
                                    .then(function (resp) {
                                    _this.appointmentTodayItemes =
                                        resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PatientreportsPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to approve?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () { }
                },
                {
                    text: "Ok",
                    handler: function () {
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            patientAppointmentStatus: "Approved",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                            }
                            else {
                                _this.api
                                    .wsGetBG(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, "")
                                    .then(function (resp) {
                                    _this.appointmentTodayItemes =
                                        resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PatientreportsPage.prototype.Edit = function (data) {
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to edit?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                    }
                }
            ]
        });
        alert.present();
    };
    PatientreportsPage.prototype.Cancel = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to cancel?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            patientAppointmentStatus: "Cancel",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                            }
                            else {
                                _this.api
                                    .wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, "")
                                    .then(function (resp) {
                                    _this.appointmentTodayItemes =
                                        resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PatientreportsPage.prototype.ReBook = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to re-book?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () { }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var id = d.patAppointmentID;
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__patient_rebookappointment_rebookappointment__["a" /* RebookappointmentPage */], { patAppointmentID: id });
                    }
                }
            ]
        });
        alert.present();
    };
    PatientreportsPage.prototype.changeStringToDate = function (dateString, format) {
        if (format) {
            console.log("StringToDate==>", this.changeDateFormat(new Date(dateString), format));
            return this.changeDateFormat(new Date(dateString), format);
        }
        else {
            console.log("completeString=>>>>>>", dateString);
            console.log("StringToDate==>", new Date(dateString).toISOString());
            return new Date(dateString).toISOString();
        }
    };
    //date to any format
    PatientreportsPage.prototype.changeDateFormat = function (date, formate) {
        var latest_date = this.datepipe.transform(date, formate);
        console.log("ChangeDateFormat", latest_date);
        return latest_date;
    };
    PatientreportsPage.prototype.downloadFile = function (item) {
        var path = __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].downloadfilepationteport + item;
        var exits = __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].existspationreport + item;
        this.api.wsGet(exits, "").then(function (resp) {
            if (resp.status === 500) {
                alert("error");
            }
            else {
                console.log("Resp= ", resp);
                window.open(path, '_blank');
            }
        }).catch(function (err) {
            alert("error");
        });
    };
    PatientreportsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patientreports',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patientreports/patientreports.html"*/'<!--\n  Generated template for the AppointmentlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Patient Reports</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="cmn-list-page">\n    <div *ngIf="selectRole == \'Patient\'">\n      <div\n        class="cmn-apmnt-row w-100 clearfix"\n        #slidingItem\n        *ngFor="let item of pharmadeliveredlist"\n      >\n        <div>\n          <div class="apmn-lft">\n            <div class="dr-name">{{ item.providerName }}</div>\n            <div class="dr-adrs">\n              <img src="assets/images/location.png" />\n              {{ item.facilityCenterName }} {{ item.facilityCenterType }} - {{\n              item.fcLocationName }}\n            </div>\n            <div class="apmnt-dt-tm">\n              <img src="assets/images/cal.png" />\n              <span class="apmn-time"\n                >{{ item.apptdate | date: "dd/MM/yyyy" }} {{ item.patAppTimeTo |\n                date: "shortTime" }}</span\n              >\n            </div>\n            <div class="apmnt-medicinename">{{ item.medname }}</div>\n            <div class="pharma-visit">{{ item.visittype }}</div>\n          </div>\n          <div class="apmn-rgt">\n            <span class="apmnt-lbl accepted">\n              {{ item.patAppStatus }}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div *ngIf="selectRole == \'Doctor\'">\n      <div\n        class="cmn-apmnt-row w-100 clearfix"\n        #slidingItem\n        *ngFor="let item of patintreportslist"\n      >\n        <div>\n          <div class="apmn-lft">\n            <div class="dr-name">{{ item.patientName }}</div>\n            <div class="dr-adrs">{{ item.reportDetail }}</div>\n\n            <div\n              class="ptnt-lab"\n              *ngFor="let report of item.reportLapdata"\n              (click)="downloadFile(report.reportPath)"\n            >\n              {{ report.reportPath | trimPath }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <div class="cmn-list-page">\n  <div class="cmn-tab-dsgn"></div>\n\n  <ion-list class="cmn-tb-cntnt" *ngIf="selectRole == \'Patient\'">\n    <ion-item-sliding #slidingItem *ngFor="let item of pharmadeliveredlist">\n      <ion-item>\n        <div class="ptnt-name">{{ item.providerName }}</div>\n        <div class="rson-fr-meet">\n          {{ item.facilityCenterName }} {{ item.facilityCenterType }} -\n          {{ item.fcLocationName }}\n        </div>\n        <div class="apmnt-tm">\n          {{ item.apptdate | date: "dd/MM/yyyy" }}\n          {{ item.patAppTimeTo | date: "shortTime" }}\n        </div>\n        <div class="apmnt-status">{{ item.status }}</div>\n        <div class="apmnt-medicinename">{{ item.medname }}</div>\n        <div class="pharma-visit">{{ item.visittype }}</div>\n      </ion-item>\n    </ion-item-sliding>\n  </ion-list>\n\n  <ion-list class="cmn-tb-cntnt" *ngIf="selectRole == \'Doctor\'">\n    <ion-item-sliding #slidingItem *ngFor="let item of patintreportslist">\n      <ion-item>\n        <div class="ptnt-name">{{ item.patientName }}</div>\n        <div class="ptnt-lab">{{ item.reportDetail }}</div>\n\n        <div\n          class="ptnt-lab"\n          *ngFor="let report of item.reportLapdata"\n          (click)="downloadFile(report.reportPath)"\n        >\n          {{ report.reportPath | trimPath }}\n        </div>\n      </ion-item>\n    </ion-item-sliding>\n  </ion-list>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patientreports/patientreports.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_8__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_2__angular_common__["d" /* DatePipe */]])
    ], PatientreportsPage);
    return PatientreportsPage;
}());

//# sourceMappingURL=patientreports.js.map

/***/ }),

/***/ 140:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TransactionhistoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the TransactionhistoryPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var TransactionhistoryPage = /** @class */ (function () {
    function TransactionhistoryPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.transactionMaster = [];
    }
    TransactionhistoryPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        console.log("ionViewDidLoad TransactionhistoryPage");
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getTransactionHistory, "").then(function (resp) {
            console.log("getDoctorVisitlist : >>", JSON.stringify(resp.data));
            _this.transactionMaster = resp.data.patAppointmentPojo;
            console.log(_this.transactionMaster);
            _this.transactionlist = resp.data.patAppointmentPojo;
        });
    };
    TransactionhistoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-transactionhistory",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/transactionhistory/transactionhistory.html"*/'<!--\n  Generated template for the TransactionhistoryPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Transaction History List</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="cmn-list">\n    <div class="cmn-apmnt-row clearfix" *ngFor="let item of transactionlist">\n      <div class="apmn-lft">\n        <div class="dr-name">{{item.name}}</div>\n        <div class="dr-adrs">{{item.patAppDate}}</div>\n        <div class="dr-adrs">{{item.fees}}</div>\n        <div class="dr-adrs">Appointment Status : {{item.patAppStatus}}</div>\n      </div>\n\n      <div *ngIf="item.txnStatus == \'TXN_FAILURE\'" class="apmn-rgt">\n        <span class="apmnt-lbl rejected">\n          {{ item.txnStatus }}\n        </span>\n      </div>\n      <div *ngIf="item.txnStatus == \'Pending\'" class="apmn-rgt">\n        <span class="apmnt-lbl pending">\n          {{ item.txnStatus }}\n        </span>\n      </div>\n\n      <div *ngIf="item.txnStatus == \'TXN_SUCCESS\'" class="apmn-rgt">\n        <span class="apmnt-lbl accepted">\n          {{ item.txnStatus }}\n        </span>\n      </div>\n\n      <!-- <div class="apmn-rgt">\n        <span class="apmnt-lbl accepted">\n          Transaction Status : {{ item.txnStatus }}\n        </span>\n      </div> -->\n\n      <!-- <div class="apmnt-date">\n        On {{ item.patAppDate | date: "dd/MM/yyyy" }}\n      </div> -->\n    </div>\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/transactionhistory/transactionhistory.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */]])
    ], TransactionhistoryPage);
    return TransactionhistoryPage;
}());

//# sourceMappingURL=transactionhistory.js.map

/***/ }),

/***/ 141:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientdoctorvisitlistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patientdoctorvisitlistview_patientdoctorvisitlistview__ = __webpack_require__(236);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the PatientdoctorvisitlistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientdoctorvisitlistPage = /** @class */ (function () {
    function PatientdoctorvisitlistPage(navCtrl, navParams, api) {
        // this.api.wsPostHeader(APIName.getAllDoctorVisitPatient,'').then((resp) => {
        //   //console.log('doctorVisitList : >>',JSON.stringify(resp));
        //   let doctorVisitList : any = resp;
        //   this.doctorVisitList=doctorVisitList.data; 
        // });
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.doctorVisitList = [];
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDoctorVisitPatient, '').then(function (resp) {
            var doctorVisitList = resp;
            _this.doctorVisitList = doctorVisitList.data.patVisitNotePojo;
        });
    }
    PatientdoctorvisitlistPage.prototype.ionViewDidLoad = function () {
    };
    PatientdoctorvisitlistPage.prototype.viewVisitList = function (data) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patientdoctorvisitlistview_patientdoctorvisitlistview__["a" /* PatientdoctorvisitlistviewPage */], { item: data });
    };
    PatientdoctorvisitlistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patientdoctorvisitlist',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientdoctorvisitlist/patientdoctorvisitlist.html"*/'<!--\n  Generated template for the PatientdoctorvisitlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Doctor Visit List</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="cmn-list">\n    <div\n      class="cmn-apmnt-row clearfix"\n      (click)="viewVisitList(doctorVisitLists)"\n      *ngFor="let doctorVisitLists of doctorVisitList"\n    >\n      <div class="apmn-lft">\n        <div class="dr-name">{{ doctorVisitLists.providerName }}</div>\n        <div class="dr-adrs">\n          <img src="assets/images/location.png" />\n          {{ doctorVisitLists.fcLocationName }} -\n          {{ doctorVisitLists.facilityCenterType }}\n        </div>\n        <div\n          class="dctr-vst-typ"\n          *ngFor="let d of doctorVisitLists.diagnosisMaster"\n        >\n          <img src="assets/images/dis-ic.png" />\n          {{ d.diagnosiseName }}\n        </div>\n      </div>\n      <div class="apmn-rgt pt0">\n        <div class="dctr-vst-dt">\n          {{ doctorVisitLists.patVisitDate\n          }}<span class="apmn-time">{{ doctorVisitLists.times }}</span>\n        </div>\n        <div class="view-dtl">\n          <a href="javascript:;">View Details</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <div class="cmn-list-page">\n   <div class="cmn-tab-dsgn">\n       <ul>\n         <li class="first" (click)="changeItem(1)"><button type="button" class="tab-btn">Today</button></li>\n         <li (click)="changeItem(2)"><button type="button" class="tab-btn">Tomorrow</button></li>\n         <li class="last" (click)="changeItem(3)"><button type="button" class="tab-btn">View All</button></li>\n       </ul>\n   </div>\n   <ion-list class="cmn-tb-cntnt">\n       <ion-item (click)="viewVisitList(doctorVisitLists)" *ngFor="let doctorVisitLists of doctorVisitList">\n             <div class="ptnt-name">{{doctorVisitLists.providerName}}</div>\n             <div class="rson-fr-meet">{{doctorVisitLists.fcLocationName}} - {{doctorVisitLists.facilityCenterType}}</div>\n             <div class="apmnt-tm">{{doctorVisitLists.patVisitDate}} {{doctorVisitLists.times}}</div>\n             <div class="apmnt-status">{{doctorVisitLists.patVisitType}}</div>\n             <div class="apmnt-tm" *ngFor="let d of doctorVisitLists.diagnosisMaster">{{d.diagnosiseName}}</div>\n           </ion-item>\n   </ion-list>\n </div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientdoctorvisitlist/patientdoctorvisitlist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], PatientdoctorvisitlistPage);
    return PatientdoctorvisitlistPage;
}());

//# sourceMappingURL=patientdoctorvisitlist.js.map

/***/ }),

/***/ 142:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientlabreportlistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patientlabreportlistview_patientlabreportlistview__ = __webpack_require__(237);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__addappointment_addappointment__ = __webpack_require__(35);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the PatientlabreportlistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientlabreportlistPage = /** @class */ (function () {
    function PatientlabreportlistPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.labReportList = [];
        this.labReportListData = [];
        this.labReportNames = [];
    }
    PatientlabreportlistPage.prototype.ionViewDidLoad = function () {
        //   this.api.wsPostHeader(APIName.getAllLabReport,'').then((resp:any) => {
        //   console.log('labReportList : >>',resp);
        //   this.labReportListData=resp; 
        //   this.labReportList = this.labReportListData.data;
        // });
        var _this = this;
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLabReport, '').then(function (resp) {
            // let doctorVisitList : any = resp;
            _this.labReportListData = resp;
            _this.labReportList = _this.labReportListData.data.labReportPojo;
            var element = '';
            // for (let index = 0; index < this.labReportList.length; index++) {
            //   element = '';
            //   for (let index1 = 0; index1 <  this.labReportList[index].reportLapdata.length; index1++) {
            //     console.log('arpit=======>',this.labReportList[index].reportLapdata[index1].labReportsLevel1Pojo.lrl1Name);
            //     element = element + this.labReportList[index].reportLapdata[index1].labReportsLevel1Pojo.lrl1Name;
            //   }
            //   console.log('<=======>',element);
            //  this.labReportNames.push(element)
            // }
            console.log("this.labReportNames" + JSON.stringify(_this.labReportNames));
        });
    };
    // removeDuplicates(myArr, prop) {
    //   return myArr.filter((obj, pos, arr) => {
    //     return arr.map(mapObj => mapObj[prop]).indexOf(obj[prop]) === pos;
    //   });
    // } 
    PatientlabreportlistPage.prototype.viewReportList = function (data) {
        console.log(data);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patientlabreportlistview_patientlabreportlistview__["a" /* PatientlabreportlistviewPage */], { item: data });
    };
    PatientlabreportlistPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__addappointment_addappointment__["a" /* AddappointmentPage */]);
        // this.navCtrl.push(AddbooklabPage,{flagType:2});
    };
    PatientlabreportlistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patientlabreportlist',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientlabreportlist/patientlabreportlist.html"*/'<!--\n  Generated template for the PatientlabreportlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Patient Lab Report List</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="cmn-list">\n    <div\n      class="cmn-apmnt-row clearfix"\n      (click)="viewReportList(obj)"\n      *ngFor="let obj of labReportList; let idx = index"\n    >\n      <div class="apmn-lft">\n        <div class="dr-name">Lab Name - {{ obj.providerName }}</div>\n\n        <!-- <div class="dr-name">Patient Name - {{ obj.patientName }}</div> -->\n        <div class="dr-adrs">\n          <img src="assets/images/dis-ic.png" />\n          Report - {{ obj.reportDetail }}\n        </div>\n        <div class="apmnt-dt-tm">\n          <img src="assets/images/cal.png" />\n          {{ obj.date }}<span class="apmn-time">{{ obj.time }}</span>\n        </div>\n      </div>\n      <div class="apmn-rgt pt0">\n        <div class="view-dtl">\n          <a href="javascript:;">View Details</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <div class="cmn-list-page">\n  <ion-list class="cmn-tb-cntnt">\n    <ion-item\n      (click)="viewReportList(obj)"\n      *ngFor="let obj of labReportList; let idx = index"\n    >\n      <div class="ptnt-name">Lab Name - {{ obj.providerName }}</div>\n      <div class="ptnt-name">Report - {{ labReportNames[idx] }}</div>\n      <div class="apmnt-tm">{{ obj.date }} {{ obj.time }}</div>\n    </ion-item>\n  </ion-list>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientlabreportlist/patientlabreportlist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], PatientlabreportlistPage);
    return PatientlabreportlistPage;
}());

//# sourceMappingURL=patientlabreportlist.js.map

/***/ }),

/***/ 143:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LabreportPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__labviewreport_labviewreport__ = __webpack_require__(238);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__labaddreport_labaddreport__ = __webpack_require__(100);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var LabreportPage = /** @class */ (function () {
    function LabreportPage(navCtrl, navParams, api, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.appointmentTodayItems = [];
        this.currentLabReportList = [];
        this.storeReportData = [];
    }
    LabreportPage.prototype.ionViewDidLoad = function () {
        // this.api.wsPostHeader(APIName.getAllLabReportWithoutBook,'').then((resp:any) => {         
        //   this.appointmentTodayItems = resp.data;
        //   this.currentLabReportList = resp.data;       
        // });
        var _this = this;
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLabReportWithoutBook, '').then(function (resp) {
            _this.appointmentTodayItems = resp.data.labReportPojo;
            _this.currentLabReportList = resp.data.labReportPojo;
        });
    };
    LabreportPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__labaddreport_labaddreport__["a" /* LabaddreportPage */]);
    };
    LabreportPage.prototype.changeItem = function (stateInt) {
        switch (stateInt) {
            case 1:
                this.currentLabReportList = this.appointmentTodayItems;
                break;
            default:
        }
    };
    LabreportPage.prototype.openItem = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__labviewreport_labviewreport__["a" /* LabviewreportPage */], { item: item });
    };
    LabreportPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-labreport',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labreport/labreport.html"*/'<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Laboratory Report List</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="cmn-list">\n    <div\n      class="cmn-apmnt-row clearfix"\n      (click)="openItem(item)"\n      *ngFor="let item of currentLabReportList"\n    >\n      <div class="apmn-lft">\n        <div class="dr-name">Patient Name - {{ item.patientName }}</div>\n        <div class="rson-fr-meet">\n          <p *ngFor="let rep of item.reportLapdata">\n            <span>{{ rep.labReportsLevel1Pojo.lrl1Name }}</span>\n          </p>\n        </div>\n        <div class="dr-adrs">\n          Disease Associated :\n          <p *ngFor="let d of item.reportLapdata">\n            <span *ngFor="let ds of d.diagnosisMasterdata">{{\n              ds.diagnosiseName\n            }}</span>\n          </p>\n        </div>\n        <div class="dr-adrs">{{ item.date }} {{ item.time }}</div>\n      </div>\n      <div class="view-dtl">\n        <a href="javascript:;">View Details</a>\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <div class="cmn-list-page">\n  <div class="cmn-tab-dsgn"></div>\n  <ion-list class="cmn-tb-cntnt">\n    <ion-item-sliding #slidingItem *ngFor="let item of currentLabReportList">\n      <ion-item (click)="openItem(item)" text-wrap>\n        <div class="ptnt-name">Patient Name - {{ item.patientName }}</div>\n        <div class="rson-fr-meet">\n          <p *ngFor="let rep of item.reportLapdata">\n            <span>{{ rep.labReportsLevel1Pojo.lrl1Name }}</span>\n          </p>\n        </div>\n        <div class="apmnt-tm">\n          Disease Associated :\n          <p *ngFor="let d of item.reportLapdata">\n            <span *ngFor="let ds of d.diagnosisMasterdata">{{\n              ds.diagnosiseName\n            }}</span>\n          </p>\n        </div>\n        <div class="apmnt-status">{{ item.date }} {{ item.time }}</div>\n      </ion-item>\n    </ion-item-sliding>\n  </ion-list>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labreport/labreport.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], LabreportPage);
    return LabreportPage;
}());

//# sourceMappingURL=labreport.js.map

/***/ }),

/***/ 178:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var crypt = __webpack_require__(591);
var util = __webpack_require__(390);
var crypto = __webpack_require__(352);

//mandatory flag: when it set, only mandatory parameters are added to checksum

function paramsToString(params, mandatoryflag) {
  var data = '';
  var tempKeys = Object.keys(params);
  tempKeys.sort();
  tempKeys.forEach(function (key) {
  var n = params[key].toString().includes("REFUND"); 
   var m = params[key].toString().includes("|");  
        if(n == true )
        {
          params[key] = "";
        }
          if(m == true)
        {
          params[key] = "";
        }  
    if (key !== 'CHECKSUMHASH' ) {
      if (params[key].toString().toLowerCase() === 'null') 
            params[key] = '';
      if (!mandatoryflag || mandatoryParams.indexOf(key) !== -1) {
        data += (params[key].toString() + '');
      }
    }
});
  return data;
}


function genchecksum(params, key, cb) {
  var data = paramsToString(params);
crypt.gen_salt(4, function (err, salt) {
    var sha256 = crypto.createHash('sha256').update(data + salt).digest('hex');
    var check_sum = sha256 + salt;
    var encrypted = crypt.encrypt(check_sum, key);
    // if(cb != undefined)
    cb(undefined, encrypted);
  });
}
 function genchecksumbystring(params, key, cb) {

  crypt.gen_salt(4, function (err, salt) {
    var sha256 = crypto.createHash('sha256').update(params + '|' + salt).digest('hex');
    var check_sum = sha256 + salt;
    var encrypted = crypt.encrypt(check_sum, key);

     var CHECKSUMHASH = encodeURIComponent(encrypted);
     CHECKSUMHASH = encrypted;
    //  if(cb != undefined)
    cb(undefined, CHECKSUMHASH);
  });
}

function verifychecksum(params, key, checksumhash) {
  var data = paramsToString(params, false);

  //TODO: after PG fix on thier side remove below two lines
  if (typeof checksumhash !== "undefined") {
    checksumhash = checksumhash.toString().replace('\n', '');
    checksumhash = checksumhash.toString().replace('\r', '');
    var temp = decodeURIComponent(checksumhash);
    var checksum = crypt.decrypt(temp, key);
    var salt = checksum.toString().substr(checksum.length - 4);
    var sha256 = checksum.toString().substr(0, checksum.length - 4);
    var hash = crypto.createHash('sha256').update(data + salt).digest('hex');
    if (hash === sha256) {
      util.log("checksum is ok");
      return true;
    } else {
      util.log("checksum is wrong");
      return false;
    }
  } else {
    util.log("checksum not found");
    return false;
  }
}

function verifychecksumbystring(params, key,checksumhash) {

    var checksum = crypt.decrypt(checksumhash, key);
    var salt = checksum.substr(checksum.length - 4);
    var sha256 = checksum.substr(0, checksum.length - 4);
    var hash = crypto.createHash('sha256').update(params + '|' + salt).digest('hex');
    if (hash === sha256) {
      return true;
    } else {
      util.log("checksum is wrong");
      return false;
    }
  } 

function genchecksumforrefund(params, key, cb) {
  var data = paramsToStringrefund(params);
crypt.gen_salt(4, function (err, salt) {
    var sha256 = crypto.createHash('sha256').update(data + salt).digest('hex');
    var check_sum = sha256 + salt;
    var encrypted = crypt.encrypt(check_sum, key);
      params.CHECKSUM = encodeURIComponent(encrypted);
    cb(undefined, params);
  });
}

function paramsToStringrefund(params, mandatoryflag) {
  var data = '';
  var tempKeys = Object.keys(params);
  tempKeys.sort();
  tempKeys.forEach(function (key) {
   var m = params[key].toString().includes("|");  
          if(m == true)
        {
          params[key] = "";
        }  
    if (key !== 'CHECKSUMHASH' ) {
      if (params[key].toString().toLowerCase() === 'null') params[key] = '';
      if (!mandatoryflag || mandatoryParams.indexOf(key) !== -1) {
        data += (params[key].toString() + '|');
      }
    }
});
  return data;
}

module.exports.genchecksum = genchecksum;
module.exports.verifychecksum = verifychecksum;
module.exports.verifychecksumbystring = verifychecksumbystring;
module.exports.genchecksumbystring = genchecksumbystring;
module.exports.genchecksumforrefund = genchecksumforrefund;


/***/ }),

/***/ 230:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddreportPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the AddreportPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddreportPage = /** @class */ (function () {
    function AddreportPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    AddreportPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddreportPage');
    };
    AddreportPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-addreport',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/addreport/addreport.html"*/'<!--\n  Generated template for the AddreportPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>addreport</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/addreport/addreport.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], AddreportPage);
    return AddreportPage;
}());

//# sourceMappingURL=addreport.js.map

/***/ }),

/***/ 231:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ForgotpasswordPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__login_login__ = __webpack_require__(136);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the ForgotpasswordPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ForgotpasswordPage = /** @class */ (function () {
    function ForgotpasswordPage(navCtrl, navParams, toastCtrl, api, menuController) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.toastCtrl = toastCtrl;
        this.api = api;
        this.menuController = menuController;
        this.account = {
            userEmail: ''
        };
    }
    ForgotpasswordPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ForgotpasswordPage');
        this.menuController.swipeEnable(false);
    };
    ForgotpasswordPage.prototype.sendemail = function () {
        var _this = this;
        var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        if (this.account.userEmail.length == 0) {
            this.showError("Please Enter Email Address");
            return;
        }
        else if (!re.test(this.account.userEmail)) {
            this.showError("Please Enter valid Email Address");
            return;
        }
        this.api.http.post(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].forgotpassword, this.account).subscribe(function (resp) {
            console.log("status", resp.status);
            var alert = _this.toastCtrl.create({
                message: resp.message,
                duration: 3000,
                position: "bottom"
            });
            alert.present();
            console.log("status", resp.message);
            console.log("status", resp.data);
            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__login_login__["a" /* LoginPage */]);
        });
    };
    ForgotpasswordPage.prototype.goToLogin = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__login_login__["a" /* LoginPage */]);
    };
    ForgotpasswordPage.prototype.showError = function (msg) {
        var toast = this.toastCtrl.create({
            message: msg,
            duration: 3000,
            position: 'top'
        });
        toast.present();
    };
    ForgotpasswordPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-forgotpassword',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/commonpages/forgotpassword/forgotpassword.html"*/'<ion-content padding class="loginpage">\n  <div class="">\n    <div class="dis-tbl">\n      <div class="dis-tbl-cl">\n        <div class="lgn-cntnt">\n          <div class="lgn-lgo text-center">\n            <a href="javascript:;"\n              ><img\n                class="img-responsive"\n                src="assets/images/logo.png"\n                alt="Logo"\n            /></a>\n          </div>\n\n          <div class="lgn-frm-box">\n            <div class="login-form">\n              <div class="lgn-ttl text-center">Reset your password?</div>\n\n              <form class="cmn-form mt-10">\n                <div class="row">\n                  <div class="col-md-12">\n                    <div class="form-group">\n                      <ion-label class="bmd-label-floating"\n                        >Email Address</ion-label\n                      >\n                      <input\n                        type="email"\n                        [(ngModel)]="account.userEmail"\n                        name="Username"\n                        class="form-control"\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div class="row">\n                  <div class="ml-auto mr-auto text-center">\n                    <button class="btn lgn-btn thm-btn" (click)="sendemail()">\n                      Send Email\n                      <i class="fa fa-send send-icon"></i>\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- </ion-list>\n        </form> -->\n  <!-- <div class="alredayHave-hc" text-center>\n            Don\'t have account? <a (click)="gotosignup()" href="#">Signup</a>\n          </div>  -->\n\n  <div class="signup-link">\n    <span class="opacity-6" f>Already have account?</span>\n    <a (click)="goToLogin()" href="javascript:;">Login</a>\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/commonpages/forgotpassword/forgotpassword.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* MenuController */]])
    ], ForgotpasswordPage);
    return ForgotpasswordPage;
}());

//# sourceMappingURL=forgotpassword.js.map

/***/ }),

/***/ 232:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SignupPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the SignupPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var SignupPage = /** @class */ (function () {
    function SignupPage(navCtrl, navParams, toastCtrl, api, menuController) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.toastCtrl = toastCtrl;
        this.api = api;
        this.menuController = menuController;
        this.ordertype = "Home";
        this.account = {
            userName: "",
            userPassword: "",
            confirmPassword: "",
            roleId: "",
            perFname: "",
            perLname: "",
            userEmail: "",
            perContactNumber: "",
            otp: "",
            unique_ID: "",
            deviceToken: "12345678902",
            deviceID: "12345678902",
            deviceType: "Android"
        };
    }
    SignupPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad SigninPage");
        this.menuController.swipeEnable(false);
    };
    SignupPage.prototype.doSignup = function () {
        var emailValidation = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\",this.toastCtrl);)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        if (this.account.userName.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter User name", this.toastCtrl);
            return;
        }
        else if (this.account.userPassword.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Password", this.toastCtrl);
            return;
        }
        else if (this.account.confirmPassword.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Confirm your Password", this.toastCtrl);
            return;
        }
        else if (this.account.roleId.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Select UserType", this.toastCtrl);
            return;
        }
        else if (this.account.confirmPassword != this.account.userPassword) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Password does not match", this.toastCtrl);
            return;
        }
        else if (this.account.perFname.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter First Name", this.toastCtrl);
            return;
        }
        else if (this.account.perLname.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Last Name", this.toastCtrl);
            return;
        }
        else if (this.account.userEmail.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Email Address", this.toastCtrl);
            return;
        }
        else if (!emailValidation.test(this.account.userEmail)) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Email Address", this.toastCtrl);
            return;
        }
        else if (this.account.perContactNumber.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Phone Number", this.toastCtrl);
            return;
        }
        else if (this.account.otp.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter correct otp", this.toastCtrl);
            return;
        }
        this.callWebserviceSignup();
        // this.api.wsPostHeader(APIName.signup, this.account).then(resp => {
        //   console.log("Respomse : " + resp);
        //   const myObjStr = JSON.stringify(resp);
        //   console.log("response:" + myObjStr);
        //   console.log("response:" + resp.status);
        //   if (resp.status === "Success") {
        //     showToast("User Ragistation Is Succesfull", this.toastCtrl);
        //     console.log("sucess" + resp.message);
        //     //this.navCtrl.push(LoginPage);
        //   }
        //   //  else if(resp.status=="Error")
        //   //  {
        //   //    console.log("error message call");
        //   //    console.log(resp.message);
        //   //      showToast( resp.message, this.toastCtrl)
        //   //   }
        //   else {
        //     console.log(resp.message);
        //   }
        // });
    };
    SignupPage.prototype.getOtp = function () {
        var _this = this;
        console.log("Get otp method called");
        var data1 = JSON.stringify({
            perContactNumber: this.account.perContactNumber
        });
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].otpuser, data1).then(function (resp) {
            console.log("Phone Number" + _this.account.perContactNumber);
            if (resp.status === 500) {
                console.log(resp.error.message);
                // console.log("responseeeee:   " + resp);
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
            }
            else {
                // showToast("" + resp.message, this.toastCtrl);
                console.log("otp message" + resp.message);
                // this.transactionHistorycount = resp.data.totalNumber;
                // this.navCtrl.pop();
            }
        });
    };
    SignupPage.prototype.callWebserviceSignup = function () {
        var _this = this;
        console.log("method called");
        // Attempt to login in through our User service
        this.api.http.post(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].signup, this.account).subscribe(function (resp) {
            // console.log("service:::::::;;")
            // console.log("kukadiya" +resp);
            if (resp.status == "Success") {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("User Ragistation Is Succesfull", _this.toastCtrl);
                //  console.log("sucess"+resp.message)
                //this.navCtrl.push(LoginPage);
            }
            else {
                //  console.log("response:"+resp.message);
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
            }
            // this.navCtrl.pop();
        });
    };
    SignupPage.prototype.doLogin = function () {
        this.navCtrl.pop();
    };
    SignupPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-signup",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/commonpages/signup/signup.html"*/'<ion-content padding class="loginpage">\n  <div class="dis-tbl">\n    <div class="dis-tbl-cl">\n      <div class="lgn-cntnt">\n        <div class="lgn-lgo text-center">\n          <a href="javascript:;"\n            ><img class="img-responsive" src="assets/images/logo.png" alt="Logo"\n          /></a>\n        </div>\n        <div class="lgn-frm-box">\n          <div class="login-form">\n            <div class="lgn-ttl text-center">REGISTER</div>\n            <form class="cmn-form mt-10">\n              <div class="row">\n                  <div class="col-md-12">\n                    <div class="order-radio-main mb-4">\n                        <label class="bmd-label-floating">User Type</label>\n                        <div class="order-type-radio d-flex">\n                            <div class="custom-control custom-radio ml-0">\n                                <input type="radio" \n                                      id="registerInput1" \n                                      name="roleId" \n                                      #roleId="ngModel"\n                                      [(ngModel)]="account.roleId"\n                                      value="3" \n                                      class="custom-control-input">\n                                <label class="custom-control-label" \n                                for="registerInput1">Patient</label>\n                            </div>\n                            <div class="custom-control custom-radio">\n                                <input type="radio" \n                                      id="registerInput2" \n                                      name="roleId" \n                                      #roleId="ngModel"\n                                      [(ngModel)]="account.roleId" \n                                      value="4"\n                                      class="custom-control-input">\n                                <label class="custom-control-label" \n                                      for="registerInput2">Doctor</label>\n                            </div>\n                            <div class="custom-control custom-radio">\n                                <input type="radio" \n                                      id="registerInput3" \n                                      name="roleId" \n                                     #roleId="ngModel"\n                                      [(ngModel)]="account.roleId" \n                                      value="5"\n                                      class="custom-control-input">\n                                <label class="custom-control-label" \n                                      for="registerInput3">Leboratory</label>\n                            </div>\n                            <div class="custom-control custom-radio">\n                                <input type="radio" \n                                      id="registerInput4" \n                                      name="roleId" \n                                      #roleId="ngModel"\n                                      [(ngModel)]="account.roleId" \n                                      value="9"\n                                      class="custom-control-input">\n                                <label class="custom-control-label" \n                                      for="registerInput4">Pharma</label>\n                            </div>\n                        </div>\n                    </div>\n                  </div>\n                <div class="col-md-12">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">User Name</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="account.userName"\n                      name="username"\n                    />\n                  </div>\n                </div>\n                <div class="col-md-12">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Password</label>\n                    <input\n                      type="password"\n                      class="form-control"\n                      [(ngModel)]="account.userPassword"\n                      name="Password"\n                    />\n                  </div>\n                </div>\n                <div class="col-md-12">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Confirm Password</label>\n                    <input\n                      type="password"\n                      class="form-control"\n                      [(ngModel)]="account.confirmPassword"\n                      name="Confirm Password"\n                    />\n                  </div>\n                </div>\n                <!-- <div class="floating-label cmn-select">\n                  <select\n                    class="floating-select form-control"\n                    placeholder=""\n                    [(ngModel)]="account.roleId"\n                    name="roleId"\n                    id="registerInput1"\n                    #roleId="ngModel"\n                  >\n                    <option value="" hidden=""></option>\n                    <option value="3">Patient</option>\n                    <option value="4">Doctor</option>\n                    <option value="5">Laboratory</option>\n                    <option value="9">Pharma</option>\n                  </select>\n                  <label>User Type</label>\n                </div> -->\n                <div\n                  *ngIf="account.roleId != \'3\' && account.roleId != \'\'"\n                  class="w-100"\n                >\n                  <div class="floating-label cmn-select">\n                    <input\n                      class="floating-select form-control"\n                      type="text"\n                      [(ngModel)]="account.unique_ID"\n                      name="Identity"\n                    />\n                    <label>Licenec Id</label>\n                  </div>\n                </div>\n                <div class="col-md-12">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">First Name</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="account.perFname"\n                      name="Firstname"\n                    />\n                  </div>\n                </div>\n                <div class="col-md-12">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Last Name</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="account.perLname"\n                      name="Lasttname"\n                    />\n                  </div>\n                </div>\n                <div class="col-md-12">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Email Address</label>\n                    <input\n                      type="email"\n                      class="form-control"\n                      [(ngModel)]="account.userEmail"\n                      name="Email Address"\n                    />\n                  </div>\n                </div>\n                <div class="col-md-12">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Phone Number</label>\n                    <input\n                      type="tel"\n                      class="form-control"\n                      [(ngModel)]="account.perContactNumber"\n                      name="Phone number"\n                      maxlength="10"\n                    />\n                  </div>\n                </div>\n\n                <div class="col-md-12">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">OTP</label>\n                    <input\n                      type="tel"\n                      class="form-control"\n                      [(ngModel)]="account.otp"\n                      name="otp"\n                    />\n                  </div>\n                </div>\n\n                <div class="col-md-12">\n                  <div class="ml-auto mr-auto text-center">\n                    <button\n                      class="btn lgn-btn thm-btn otp-btn"\n                      size="small"\n                      (click)="getOtp()"\n                    >\n                      OTP\n                    </button>\n                  </div>\n                </div>\n                <br />\n                <br />\n                <br />\n\n                <!-- <button\n                  size="small"\n              color="primary"\n                  class="ml-auto mr-auto text-center"\n                  (click)="getOtp()"\n                >\n                  Get Otp\n                </button>  -->\n              </div>\n              <div class="row">\n                <div class="ml-auto mr-auto text-center">\n                  <button class="btn lgn-btn thm-btn" (click)="doSignup()">\n                    Join Now <img src="assets/images/arwrgt.png" />\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div class="signup-link">\n          <span class="opacity-6">Already have an account?</span>\n          <a (click)="doLogin()" href="javascript:;">Sign In</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n\n<!-- <form text-center class="login-inner-hc">\n    <ion-list>\n      <ion-img\n        width="112"\n        height="120"\n        src="assets/imgs/health-chain-logo.png"\n      ></ion-img>\n      <div class="login-signin-hc">\n        <div class="login-head-hc">\n          <h5>Create an Account</h5>\n        </div>\n\n\n        <ion-item>\n          <ion-label color="" floating>User Name</ion-label>\n          <ion-input\n            type="text"\n            [(ngModel)]="account.userName"\n            name="username"\n          ></ion-input>\n        </ion-item>\n\n        <ion-item>\n          <ion-label color="" floating>Password</ion-label>\n          <ion-input\n            type="password"\n            [(ngModel)]="account.userPassword"\n            name="Password"\n          ></ion-input>\n        </ion-item>\n\n        <ion-item>\n          <ion-label color="" floating>Confirm Password</ion-label>\n          <ion-input\n            type="password"\n            [(ngModel)]="account.confirmpassword"\n            name="Confirm Password"\n          ></ion-input>\n        </ion-item>\n\n        <ion-item>\n          <ion-label floating>User Type</ion-label>\n          <ion-select\n            placeholder=""\n            [(ngModel)]="account.userType"\n            name="roleId"\n            id="registerInput1"\n            #roleId="ngModel"\n          >\n            <ion-option value="3">Patient</ion-option>\n            <ion-option value="4">Doctor</ion-option>\n            <ion-option value="5">Laboratory</ion-option>\n            <ion-option value="9">Pharma</ion-option>\n          </ion-select>\n        </ion-item>\n        <ion-item *ngIf="account.userType != \'3\' && account.userType != \'\'"> \n          <ion-label color="" floating>Unique Identity</ion-label>\n          <ion-input\n            type="text"\n            [(ngModel)]="account.unique_ID"\n            name="Identity"\n          ></ion-input>\n        </ion-item>\n        \n        <ion-item>\n          <ion-label color="" floating>First Name</ion-label>\n          <ion-input\n            type="text"\n            [(ngModel)]="account.perFname"\n            name="Firstname"\n          ></ion-input>\n        </ion-item>\n\n        <ion-item>\n          <ion-label color="" floating>Last Name</ion-label>\n          <ion-input\n            type="text"\n            [(ngModel)]="account.perLname"\n            name="Lastname"\n          ></ion-input>\n        </ion-item>\n\n        <ion-item>\n          <ion-label color="" floating>Email Address</ion-label>\n          <ion-input\n            type="email"\n            [(ngModel)]="account.userEmail"\n            name="Email Address"\n          ></ion-input>\n        </ion-item>\n\n        <ion-item>\n          <ion-label color="" floating>Phone Number</ion-label>\n          <ion-input\n            type="tel"\n            [(ngModel)]="account.perContactNumber"\n            name="Phone number"\n            maxlength="10"\n          ></ion-input>\n        </ion-item>\n\n        <div padding>\n          <button (click)="doSignup()" ion-button class="" block>\n            Register\n          </button>\n        </div>\n      </div>\n    </ion-list>\n  </form>\n  <div class="alredayHave-hc" text-center>\n    Already have account? <a (click)="doLogin()" href="#">Login</a>\n  </div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/commonpages/signup/signup.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* MenuController */]])
    ], SignupPage);
    return SignupPage;
}());

//# sourceMappingURL=signup.js.map

/***/ }),

/***/ 233:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientOrderDetailsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_image_picker__ = __webpack_require__(119);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_photo_viewer__ = __webpack_require__(51);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the PatientOrderDetailsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientOrderDetailsPage = /** @class */ (function () {
    function PatientOrderDetailsPage(navCtrl, navParams, api, actionSheetCrtl, camera, imagePicker, file, photoViewer) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.actionSheetCrtl = actionSheetCrtl;
        this.camera = camera;
        this.imagePicker = imagePicker;
        this.file = file;
        this.photoViewer = photoViewer;
        this.ordertype = "Home";
        this.paymenttype = "COD";
        this.checkpres = "No";
        this.addresses = [];
        this.arrcertificates = [];
        this.formData = new FormData();
    }
    PatientOrderDetailsPage.prototype.ionViewDidLoad = function () {
        this.selectedRole = this.navParams.get("selectedMeds");
        this.finalcost = this.navParams.get("finalcost");
        console.log("New Role= ", this.selectedRole);
        console.log('ionViewDidLoad PatientOrderDetailsPage');
        this.getpatientmedlocation();
    };
    PatientOrderDetailsPage.prototype.getpatientmedlocation = function () {
        var _this = this;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].postordermedicinelocation, "")
            .then(function (resp) {
            console.log(resp);
            _this.addresses = resp.data.patAddressPojo;
        });
    };
    PatientOrderDetailsPage.prototype.checkpresmethod = function () {
        if (this.checkpres == "Yes") {
            this.showForm = false;
        }
        else {
            this.showForm = true;
        }
    };
    PatientOrderDetailsPage.prototype.buttonClickForChooseIDs = function () {
        var _this = this;
        Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["g" /* showActionSheetPhoto */])(this.actionSheetCrtl).then(function (seletedIndex) {
            _this.choosePhotoFromCameraOrGallery(seletedIndex);
        });
    };
    PatientOrderDetailsPage.prototype.choosePhotoFromCameraOrGallery = function (sourceType) {
        var _this = this;
        var options = {
            quality: 100,
            destinationType: __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__["b" /* DestinationType */].FILE_URL,
            sourceType: sourceType,
            saveToPhotoAlbum: true,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            correctOrientation: true
        };
        // this.camera.getPicture(options).then(
        this.imagePicker.getPictures(options).then(function (imagePath) {
            console.log("getPicture >> ", imagePath);
            console.log("getPicture  normalizeURL(imagePath) >> ", Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            for (var i = 0; i < imagePath.length; i++) {
                console.log('Image URI: ' + imagePath[i]);
                _this.saveImage(Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath[i]));
                // this.extendedProfile.perCertificate = imagePath[i];
            }
            _this.arrcertificates = imagePath;
        }, function (err) {
            alert(err);
        });
    };
    PatientOrderDetailsPage.prototype.saveImage = function (imageFileUri) {
        var _this = this;
        this.file
            .resolveLocalFilesystemUrl(imageFileUri)
            .then(function (entry) {
            return entry.file(function (file) {
                _this.readFile(file);
            });
        })
            .catch(function (err) { return console.log(err); });
    };
    PatientOrderDetailsPage.prototype.readFile = function (file) {
        var _this = this;
        var reader = new FileReader();
        reader.onloadend = function () {
            var imgBlob = new Blob([reader.result], { type: file.type });
            // console.log("readFile() : file.type >> ", file.type);
            // console.log("readFile() : file >> ", file);
            _this.formData.append("perCertificate", imgBlob, file.name);
        };
        reader.readAsArrayBuffer(file);
    };
    PatientOrderDetailsPage.prototype.showPhoto = function (imagePath) {
        console.log("showPhoto clicked");
        this.photoViewer.show(imagePath);
    };
    PatientOrderDetailsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patient-order-details',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient-order-details/patient-order-details.html"*/'<!--\n  Generated template for the PatientOrderDetailsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>PatientOrderDetails</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content>\n\n  <div class="mt-10 clearfix odr-dtl-header">\n    <div class="apmn-lft">Medicines</div>\n    <div class="apmn-rgt pt-0">Total Medicines Cost : <span><i>₹</i>{{finalcost}}</span></div>\n  </div>  \n  <div class="cmn-list">  \n    <div class="cmn-apmnt-row clearfix" *ngFor="let pharmaID of selectedRole">\n      <div class="apmn-lft">\n        <img src="assets/images/drugs-icon.png" alt="" width="20" class="apmn-lft">\n        <div class="mdcin-dtl">\n          <div class="dr-name">{{pharmaID.medname}}</div>\n          <!-- <div class="mdcin-cmpny">By ZYDUS CADILA HEALTHCARE LTD </div> -->\n          <div class="mdcin-price"> Cost Per Medicine:&nbsp;<strong><i>₹</i>&nbsp;{{ pharmaID.costpermedicine }}</strong></div>\n          <div class="mdcin-qty-dtl">  \n              Medicine Quantity:&nbsp;<input type="number" id="medqua" name="pharmaID.medqua" [(ngModel)]="pharmaID.medqua" min="0" required>\n          </div>\n        </div>\n      </div>    \n    </div>\n\n    <div class="cmn-apmnt-row order-details-section border-0">                                    \n        <div class="order-radio-main mb-4">\n            <h5>Order Type</h5>\n            <div class="order-type-radio d-flex">\n                <div class="custom-control custom-radio ml-0">\n                    <input type="radio" \n                          id="customRadio1" \n                          name="customRadio" \n                          [(ngModel)]="ordertype"\n                          value="Pick Up" \n                          class="custom-control-input"\n                          >\n                    <label class="custom-control-label" \n                    for="customRadio1">Pick up</label>\n                </div>\n                <div class="custom-control custom-radio">\n                    <input type="radio" \n                           id="customRadio2" \n                           name="customRadio" \n                           [(ngModel)]="ordertype" \n                           value="Home"\n                           class="custom-control-input">\n                    <label class="custom-control-label" \n                           for="customRadio2">Home Delivery</label>\n                </div>\n            </div>\n        </div>\n\n         <div class="order-radio-main">\n            <h5>Payment Type</h5>\n            <div class="order-type-radio d-flex">\n                <div class="custom-control custom-radio ml-0">\n                    <input type="radio" \n                           id="customRadio3" \n                           name="customRadio4" \n                           [(ngModel)]="paymenttype" \n                           value="COD"\n                           class="custom-control-input">\n                    <label class="custom-control-label" \n                    for="customRadio3">COD</label>\n                </div>\n                <div class="custom-control custom-radio">\n                    <input type="radio" \n                           id="customRadio4" \n                           name="customRadio4" \n                           [(ngModel)]="paymenttype" \n                           value="Paytm"\n                           class="custom-control-input">\n                    <label class="custom-control-label" \n                    for="customRadio4">Paytm</label>\n                </div>\n            </div>\n        </div>\n\n        <div class="order-radio-main">\n            <h5>Have Prescription ?</h5>\n            <div class="order-type-radio d-flex">\n                <div class="custom-control custom-radio ml-0">\n                    <input class="custom-control-input" id="customRadio6" type="radio" name="discounttype" [(ngModel)]="checkpres" value="Yes" (click)="checkpresmethod()">       \n                    <label class="custom-control-label" for="customRadio6">Yes</label>\n                </div>\n                <div class="custom-control custom-radio">\n                    <input class="custom-control-input" id="customRadio7" type="radio" name="discounttype" [(ngModel)]="checkpres" value="No"  (click)="checkpresmethod()">                           \n                    <label class="custom-control-label" for="customRadio7">No</label>\n                </div>\n            </div>\n        </div>\n\n    </div>\n    \n\n          <div\n         *ngIf="checkpres != \'No\' && checkpres != \'\'"\n         class="w-100"\n       >\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <div class="pr15 form-bb">\n              <div class="form-group cmn-file-upld mb-0">\n                <div class="filename"></div>\n                <input\n                  id="license-upld"\n                  type="file"\n                  class="form-control cmn-fl-input custom-file-input"\n                  value=""\n                />\n                <label\n                  (click)="buttonClickForChooseIDs(3)"\n                  class="custom-file-label bmd-label-floating"\n                  ><span class="lbl-txt">Upload File</span></label\n                >\n              </div>\n            </div>\n            <div class="preview-thumb pl15 pr15">\n              <div class="prvw-doc"  *ngFor="let item of arrcertificates">\n                <img\n                  src="{{item}}"\n                  (click)="showPhoto(item)"\n                  class="prvw-doc"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n         </div>\n\n    <div class="cmn-apmnt-row order-details-section border-0 pt-0">              \n        <h5>Address</h5>                 \n        <div>\n            <div class="address-type-radio" *ngFor="let address of addresses">\n                <div class="custom-control custom-radio p-0">\n                    <input type="radio" id="customRadio10" name="address-radio" class="custom-control-input">\n                    <label class="custom-control-label" for="customRadio10">\n                        <div class="area-name">{{address.addressLine1}}</div>\n                        <div class="area-dtl">{{address.addressLine2}}</div>\n                    </label>\n                </div>\n            </div>\n        </div>\n\n        \n    </div>\n    \n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient-order-details/patient-order-details.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_image_picker__["a" /* ImagePicker */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_photo_viewer__["a" /* PhotoViewer */]])
    ], PatientOrderDetailsPage);
    return PatientOrderDetailsPage;
}());

//# sourceMappingURL=patient-order-details.js.map

/***/ }),

/***/ 234:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DoctorvisitlistviewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the DoctorvisitlistviewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DoctorvisitlistviewPage = /** @class */ (function () {
    function DoctorvisitlistviewPage(navCtrl, navParams, api) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.item = [];
        this.PatientDoctorVisitlistView = [];
        this.DiseaseData = [];
        this.TempDisease = [];
        this.Medicine = [];
        this.TempMedicine = [];
        this.Report = [];
        this.Report1 = [];
        this.refferedDoctor = [];
        this.lrl1Name = [];
        this.TempReport = [];
        this.TempReport1 = [];
        this.item = this.navParams.get("item");
        var Id = { patVisitNoteID: this.item.patVisitNoteID };
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditDoctorVisit, Id)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log(resp);
                var response = resp;
                _this.PatientDoctorVisitlistView = response.data;
                var jdiagnosisMasterData = _this.PatientDoctorVisitlistView
                    .diagnosisMaster;
                if (jdiagnosisMasterData.length > 0) {
                    for (var i = 0; i < jdiagnosisMasterData.length; i++) {
                        _this.TempDisease.push(jdiagnosisMasterData[i].diagnosiseName);
                    }
                    _this.DiseaseData = _this.TempDisease;
                }
                else {
                    _this.DiseaseData = [];
                }
                var drugCompoundMasterData = _this.PatientDoctorVisitlistView
                    .drugCompoundMaster;
                if (drugCompoundMasterData.length > 0) {
                    for (var i = 0; i < drugCompoundMasterData.length; i++) {
                        _this.TempMedicine.push(drugCompoundMasterData[i].drugCompoundName);
                    }
                    _this.Medicine = _this.TempMedicine;
                }
                else {
                    _this.Medicine = [];
                }
                var labReportsLevelData = _this.PatientDoctorVisitlistView
                    .labReportsLevel1;
                if (labReportsLevelData.length > 0) {
                    for (var i = 0; i < labReportsLevelData.length; i++) {
                        _this.TempReport.push(labReportsLevelData[i].labReportType);
                        _this.TempReport1.push(labReportsLevelData[i].lrl1Name);
                    }
                    _this.Report = _this.TempReport;
                    _this.Report1 = _this.TempReport1;
                }
                else {
                    _this.Report = [];
                    _this.Report1 = [];
                }
                //this.ViewAppointment=resp;
            }
        });
    }
    DoctorvisitlistviewPage.prototype.ionViewDidLoad = function () { };
    DoctorvisitlistviewPage.prototype.bookLab = function () {
        //this.navCtrl.push(PatientdoctorvisitlistviewPage);
    };
    DoctorvisitlistviewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-doctorvisitlistview",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorvisitlistview/doctorvisitlistview.html"*/'<!--\n  Generated template for the DoctorvisitlistviewPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Doctor Visit List View</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="view-list">\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Visit Date\n      </div>\n      <div class="view-list-val pull-right">\n        {{ PatientDoctorVisitlistView.patVisitDate }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Visit Time\n      </div>\n      <div class="view-list-val pull-right">\n        {{ PatientDoctorVisitlistView.times }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Patient Name\n      </div>\n      <div class="view-list-val pull-right">\n        {{ PatientDoctorVisitlistView.name }}\n      </div>\n    </div>\n    <!-- <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Patient Id\n      </div>\n      <div class="view-list-val pull-right">\n        {{ PatientDoctorVisitlistView.patientID }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Purpose\n      </div>\n      <div class="view-list-val pull-right">\n        {{ PatientDoctorVisitlistView.patVisitType }}\n      </div>\n    </div> -->\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Symptoms Found\n      </div>\n      <div class="view-list-val pull-right">\n        {{ PatientDoctorVisitlistView.patSymptoms }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Treatment Provided\n      </div>\n      <div class="view-list-val pull-right">\n        {{ PatientDoctorVisitlistView.treatmentProvided }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Disease Name\n      </div>\n      <div class="view-list-val pull-right">\n        {{ DiseaseData }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Side Effects\n      </div>\n      <div class="view-list-val pull-right">\n        {{ PatientDoctorVisitlistView.patSideEffect }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Extra Detail\n      </div>\n      <div class="view-list-val pull-right">\n        {{ PatientDoctorVisitlistView.patExtraDetails }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Medicine Required\n      </div>\n      <div class="view-list-val pull-right">\n        {{ Medicine }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Report Required\n      </div>\n      <div class="view-list-val pull-right">\n        {{ Report +" - "+ Report1 }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Reffered Doctor\n      </div>\n      <div class="view-list-val pull-right">\n        {{ refferedDoctor }}\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <form text-center class="login-inner-hc" style="height: 50%;">\n    <ion-list >\n      <div class="login-signin-hc">  \n        <div class="login-head-hc">\n          <h5>Doctor Visit List View</h5>\n        </div>     \n      \n        <ion-item>\n          <ion-label color="">Visit Date :</ion-label>\n          <ion-input type="text" [(ngModel)]="PatientDoctorVisitlistView.patVisitDate" name="patVisitDate" disabled="true"></ion-input>\n        </ion-item>\n\n        <ion-item>\n            <ion-label color="">Visit Time :</ion-label>\n            <ion-input type="text" [(ngModel)]="PatientDoctorVisitlistView.times" name="times" disabled="true"></ion-input>\n        </ion-item>\n        \n        <ion-item>\n            <ion-label color="">Patient Name :</ion-label>\n            <ion-input type="text" [(ngModel)]="PatientDoctorVisitlistView.name" name="name" disabled="true"></ion-input>\n        </ion-item>\n\n        <ion-item>\n            <ion-label color="">Patient Id :</ion-label>\n            <ion-input type="text" [(ngModel)]="PatientDoctorVisitlistView.patientID" name="patientID" disabled="true"></ion-input>\n        </ion-item>\n        \n        <ion-item>\n            <ion-label color="">Purpose :</ion-label>\n            <ion-input type="text"  name="Purpose" [(ngModel)]="PatientDoctorVisitlistView.patVisitType" disabled="true"></ion-input>\n        </ion-item>\n\n        <ion-item>\n            <ion-label color="">Symptoms Found :</ion-label>\n            <ion-input type="text" [(ngModel)]="PatientDoctorVisitlistView.patSymptoms" name="Symptoms" disabled="true"></ion-input>\n        </ion-item>\n\n        <ion-item>\n            <ion-label color="">Treatment Provided :</ion-label>\n            <ion-input type="text" [(ngModel)]="PatientDoctorVisitlistView.treatmentProvided"  name="Treatment" disabled="true"></ion-input>\n        </ion-item>\n\n        <ion-item>\n            <ion-label color="">Disease Name :</ion-label>\n            <ion-input type="text" [(ngModel)]="DiseaseData"  name="Disease" disabled="true"></ion-input>\n        </ion-item>\n\n        <ion-item>\n            <ion-label color="">Side Effects :</ion-label>\n            <ion-input type="text" [(ngModel)]="PatientDoctorVisitlistView.patSideEffect" name="Side" disabled="true"></ion-input>\n        </ion-item>\n\n        <ion-item>\n            <ion-label color="">Extra Detail :</ion-label>\n            <ion-input type="text" [(ngModel)]="PatientDoctorVisitlistView.patExtraDetails"  name="Extra" disabled="true"></ion-input>\n        </ion-item>\n\n        <ion-item>\n            <ion-label color="">Medicine Required :</ion-label>\n            <ion-input type="text" [(ngModel)]="Medicine" name="Medicine" disabled="true"></ion-input>\n        </ion-item>\n\n        <ion-item>\n            <ion-label color="">Report Required :</ion-label>\n            <ion-input type="text" [(ngModel)]="Report" name="Report" disabled="true"></ion-input>\n        </ion-item>\n      </div>       \n    </ion-list>\n  </form> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorvisitlistview/doctorvisitlistview.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], DoctorvisitlistviewPage);
    return DoctorvisitlistviewPage;
}());

//# sourceMappingURL=doctorvisitlistview.js.map

/***/ }),

/***/ 235:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DoctorAddOrEditVisitPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the DoctorAddOrEditVisitPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DoctorAddOrEditVisitPage = /** @class */ (function () {
    function DoctorAddOrEditVisitPage(navCtrl, navParams, api, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.toastCtrl = toastCtrl;
        this.Facilities = [];
        this.PatientNames = [];
        this.arrMedicineRequired = [];
        this.arrReportRequired = [];
        this.arrDoctorReference = [];
        this.objectdata = [];
        this.objectdataForLocation = [
            "high blood pressure",
            "high cholesterol",
            "diabetes",
            "Meningitis"
        ];
        this.Locations = [];
        this.PossibleDiseaseNames = [];
        this.requestAutocompleteItems = [];
        this.DoctorVisit = {
            Facility: {},
            Location: {},
            Patient: {},
            Symptoms: "",
            TreatmentProvided: "",
            PossibleDiseaseName: [],
            SideEffect: "",
            ExtraDetails: "",
            MedicineRequired: [],
            ReportRequired: [],
            DoctorReference: []
        };
        this.ParamForLocation = {
            facilityCenterID: ""
        };
        this.ParamForVisit = {
            patientMaster: {},
            fcLocationMap: [{}],
            diagnosisMaster: [{}],
            labReportsLevel1: [{}],
            drugCompoundMaster: [{}],
            patSymptoms: "",
            treatmentProvided: "",
            patSideEffect: "",
            patExtraDetails: ""
        };
        this.requestAutocompleteItems = [];
        console.log("facilities");
        //   TagInputModule.withDefaults({
        //     tagInput: {
        //         placeholder: '',
        //         // add here other default values for tag-input
        //     },
        // });
    }
    DoctorAddOrEditVisitPage.prototype.ionViewDidLoad = function () {
        //   TagInputModule.withDefaults({
        //     tagInput: {
        //         placeholder: 'Possible Disease Name',
        //         // add here other default values for tag-input
        //     },
        // });
        this.Facilities = [];
        this.Locations = [];
        this.PatientNames = [];
        this.PossibleDiseaseNames = [];
        this.arrMedicineRequired = [];
        this.arrReportRequired = [];
        this.arrDoctorReference = [];
        this.WsGetAllFacilities();
        this.WsGetAllPatient();
        this.WsGetAllDiagnosis();
        this.WsGetAllMedicine();
        this.WsGetAllLab1Report();
        this.WsGetDoctorsForRefference();
    };
    DoctorAddOrEditVisitPage.prototype.onTextChange = function (event) {
        var body = {
            diagnosiseName: event
        };
    };
    DoctorAddOrEditVisitPage.prototype.WsGetAllFacilities = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllFacilityDoctor, {}).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                var TempForFacility = resp;
                _this.Facilities = TempForFacility.data;
                _this.DoctorVisit.Facility = _this.Facilities[0];
                _this.onSelectChange(_this.Facilities);
                console.log(_this.Facilities);
                console.log("ionViewDidLoad DoctorAddOrEditVisitPage");
            }
        });
    };
    DoctorAddOrEditVisitPage.prototype.onSelectChange = function (selectedValue) {
        console.log("Selected" + selectedValue);
        this.WsGetAllLocation(selectedValue);
    };
    DoctorAddOrEditVisitPage.prototype.WsGetAllLocation = function (strSelectedValue) {
        var _this = this;
        this.ParamForLocation.facilityCenterID = this.DoctorVisit.Facility.facilityCenterID;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLocationByFacilityAndDoctor, this.ParamForLocation)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                var Temparray = resp;
                _this.Locations = Temparray.data;
                _this.DoctorVisit.Location = _this.Locations[0];
            }
        });
    };
    DoctorAddOrEditVisitPage.prototype.WsGetAllPatient = function () {
        var _this = this;
        this.api.wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllPatient, {}).then(function (resp) {
            var Temparray = resp;
            _this.PatientNames = Temparray.data;
            console.log(_this.PatientNames[0]);
            _this.DoctorVisit.Patient = _this.PatientNames[0];
        });
    };
    DoctorAddOrEditVisitPage.prototype.WsGetAllDiagnosis = function () {
        var _this = this;
        this.api.wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDiagnosis, {}).then(function (resp) {
            var Temparray = resp;
            _this.PossibleDiseaseNames = Temparray.data;
        });
    };
    DoctorAddOrEditVisitPage.prototype.WsGetAllMedicine = function () {
        var _this = this;
        this.api.wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllMedicine, {}).then(function (resp) {
            var Temparray = resp;
            _this.arrMedicineRequired = Temparray.data;
        });
    };
    DoctorAddOrEditVisitPage.prototype.WsGetAllLab1Report = function () {
        var _this = this;
        this.api.wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLab1Report, {}).then(function (resp) {
            var Temparray = resp;
            _this.arrReportRequired = Temparray.data;
        });
    };
    DoctorAddOrEditVisitPage.prototype.WsGetDoctorsForRefference = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getDoctorsForRefference, {})
            .then(function (resp) {
            var Temparray = resp;
            _this.arrDoctorReference = Temparray.data;
        });
    };
    DoctorAddOrEditVisitPage.prototype.WsGetaddOrEditVisit = function () {
        this.ParamForVisit.patSymptoms = this.DoctorVisit.Symptoms;
        this.ParamForVisit.treatmentProvided = this.DoctorVisit.TreatmentProvided;
        this.ParamForVisit.patSideEffect = this.DoctorVisit.SideEffect;
        this.ParamForVisit.patExtraDetails = this.DoctorVisit.ExtraDetails;
        this.ParamForVisit.patientMaster = {
            patientID: this.DoctorVisit.Patient.patientID
        };
        this.ParamForVisit.fcLocationMap = {
            fcLocationMapID: this.DoctorVisit.Location.fcLocationMapID
        };
        var tempforDisease = [];
        for (var index = 0; index < this.DoctorVisit.PossibleDiseaseName.length; index++) {
            tempforDisease.push({
                diagnosisID: this.DoctorVisit.PossibleDiseaseName[index].diagnosisID
            });
        }
        this.ParamForVisit.diagnosisMaster = tempforDisease;
        var tempforlabReports = [];
        for (var index = 0; index < this.DoctorVisit.ReportRequired.length; index++) {
            tempforlabReports.push({
                labReportLevel1ID: this.DoctorVisit.ReportRequired[index]
                    .labReportLevel1ID
            });
        }
        this.ParamForVisit.labReportsLevel1 = tempforlabReports;
        var tempforMedicine = [];
        for (var index = 0; index < this.DoctorVisit.MedicineRequired.length; index++) {
            tempforMedicine.push({
                drugCompoundID: this.DoctorVisit.MedicineRequired[index].drugCompoundID
            });
        }
        this.ParamForVisit.drugCompoundMaster = tempforMedicine;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditDoctorVisit, this.ParamForVisit)
            .then(function (resp) {
            // this.Locations = resp
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("Submit resp = " + resp);
            }
        });
    };
    DoctorAddOrEditVisitPage.prototype.SubmitClicked = function () {
        var IsValid = this.Validation();
        if (IsValid) {
            this.WsGetaddOrEditVisit();
        }
        console.log("SubmitClicked DoctorAddOrEditVisitPage");
    };
    DoctorAddOrEditVisitPage.prototype.CancelClicked = function () {
        console.log("CancelClicked DoctorAddOrEditVisitPage");
        this.navCtrl.pop();
    };
    // delete(chip: Element) {
    //   chip.remove();
    // }
    // addTodo(){
    //   this.newItem = "<ion-item>test</ion-item>";
    // }
    DoctorAddOrEditVisitPage.prototype.Validation = function () {
        console.log("this.DoctorVisit.Facility ========= " +
            this.DoctorVisit.Patient.patientName);
        console.log("JSON.stringify(this.DoctorVisit) ===== = = = =  = " +
            JSON.stringify(this.DoctorVisit));
        if (this.DoctorVisit.Facility == "" || this.DoctorVisit.Facility == null) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Facility", this.toastCtrl);
        }
        else if (this.DoctorVisit.Location.fcLocationName == "" ||
            this.DoctorVisit.Location.fcLocationName == null) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Location", this.toastCtrl);
        }
        else if (this.DoctorVisit.Patient.patientName == "" ||
            this.DoctorVisit.Patient.patientName == null) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Patient Name", this.toastCtrl);
        }
        else if (this.DoctorVisit.Symptoms == "" ||
            this.DoctorVisit.Symptoms == null) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Symptoms", this.toastCtrl);
        }
        else if (this.DoctorVisit.TreatmentProvided == "" ||
            this.DoctorVisit.TreatmentProvided == null) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Treatment Provided", this.toastCtrl);
        }
        else if (this.DoctorVisit.PossibleDiseaseName.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Possible Disease Name", this.toastCtrl);
        }
        else if (this.DoctorVisit.SideEffect == "" ||
            this.DoctorVisit.SideEffect == null) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter SideEffect", this.toastCtrl);
        }
        else if (this.DoctorVisit.ExtraDetails == "" ||
            this.DoctorVisit.ExtraDetails == null) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter ExtraDetails", this.toastCtrl);
        }
        else if (this.DoctorVisit.MedicineRequired.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Medicine Required", this.toastCtrl);
        }
        else if (this.DoctorVisit.ReportRequired.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Report Required", this.toastCtrl);
        }
        else if (this.DoctorVisit.DoctorReference.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Doctor Refrence", this.toastCtrl);
        }
        else {
            return true;
        }
    };
    DoctorAddOrEditVisitPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-doctor-add-or-edit-visit",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctor-add-or-edit-visit/doctor-add-or-edit-visit.html"*/'<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Add Visit</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="book-apmnt pt-20 bg-fff">\n    <form class="cmn-form no-input-efct mb-20">\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="DoctorVisit.Facility"\n          [(ngModel)]="DoctorVisit.Facility"\n          (change)="onSelectChange($event)"\n        >\n          <option *ngFor="let f of Facilities" [value]="f"\n            >{{ f.facilityCenterName }}</option\n          >\n        </select>\n        <label>Facility</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="DoctorVisit.Location"\n          [(ngModel)]="DoctorVisit.Location"\n        >\n          <option *ngFor="let L of Locations" [value]="L"\n            >{{ L.fcLocationName }}</option\n          >\n        </select>\n        <label>Locations</label>\n      </div>\n\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="DoctorVisit.Patient"\n          [(ngModel)]="DoctorVisit.Patient"\n        >\n          <option *ngFor="let P of PatientNames" [value]="P"\n            >{{ P.patientName }}</option\n          >\n        </select>\n        <label>Patient Name</label>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="floating-label cmn-inpt">\n          <textarea\n            class="floating-input cmn-txtarea"\n            name="DoctorVisit.Symptoms"\n            [(ngModel)]="DoctorVisit.Symptoms"\n          ></textarea>\n          <label>Symptoms</label>\n        </div>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="floating-label cmn-inpt">\n          <textarea\n            class="floating-input cmn-txtarea"\n            name="DoctorVisit.TreatmentProvided"\n            [(ngModel)]="DoctorVisit.TreatmentProvided"\n          ></textarea>\n          <label>Treatment Provided</label>\n        </div>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="DoctorVisit.PossibleDiseaseName"\n          [(ngModel)]="DoctorVisit.PossibleDiseaseName"\n        >\n          <option *ngFor="let D of PossibleDiseaseNames" [value]="D"\n            >{{ D.diagnosiseName }}</option\n          >\n        </select>\n        <label>Possible Disease Name</label>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="floating-label cmn-inpt">\n          <textarea\n            class="floating-input cmn-txtarea"\n            name="DoctorVisit.SideEffect"\n            [(ngModel)]="DoctorVisit.SideEffect"\n          ></textarea>\n          <label>Side Effect</label>\n        </div>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="floating-label cmn-inpt">\n          <textarea\n            class="floating-input cmn-txtarea"\n            name="DoctorVisit.ExtraDetails"\n            [(ngModel)]="DoctorVisit.ExtraDetails"\n          ></textarea>\n          <label>Extra Details</label>\n        </div>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="DoctorVisit.MedicineRequired"\n          [(ngModel)]="DoctorVisit.MedicineRequired"\n        >\n          <option *ngFor="let M of arrMedicineRequired" [value]="M"\n            >{{ M.drugCompoundName }}</option\n          >\n        </select>\n        <label>Medicine Required</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="DoctorVisit.ReportRequired"\n          [(ngModel)]="DoctorVisit.ReportRequired"\n        >\n          <option *ngFor="let R of arrReportRequired" [value]="R"\n            >{{ R.lrl1Name }}</option\n          >\n        </select>\n        <label>Report Required</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="DoctorVisit.ReportRequired"\n          [(ngModel)]="DoctorVisit.ReportRequired"\n        >\n          <option *ngFor="let R of arrDoctorReference" [value]="R"\n            >{{ R.providerName }}</option\n          >\n        </select>\n        <label>Refer a doctor</label>\n      </div>\n\n      <!-- <div class="floating-label cmn-select">\n        <ion-label>Have Prescription ?</ion-label>\n        <div class="col-md-5">\n          <input\n            type="radio"\n            name="discounttype"\n            [(ngModel)]="checkpres"\n            value="Yes"\n            (click)="checkpresmethod()"\n          />\n          Yes &nbsp;\n          <input\n            type="radio"\n            name="discounttype"\n            [(ngModel)]="checkpres"\n            value="No"\n            (click)="checkpresmethod()"\n          />\n          No <br />\n        </div>\n      </div> -->\n      <div class="form-button bg-gray pt-25 text-center">\n        <button\n          type="button"\n          class="cmn-thm-btn mr-25"\n          (click)="SubmitClicked()"\n        >\n          SAVE\n        </button>\n        <button type="button" class="cmn-wht-btn" (click)="CancelClicked()">\n          CANCEL\n        </button>\n      </div>\n    </form>\n  </div>\n</ion-content>\n<!-- <form text-center class="login-inner-hc">\n        <ion-list>\n          <div class="login-signin-hc">\n            <ion-item>\n              <ion-label>Facility</ion-label>\n              <ion-select\n                [(ngModel)]="DoctorVisit.Facility"\n                name="DoctorVisit.Facility"\n                (ionChange)="onSelectChange($event)"\n              >\n                <ion-option *ngFor="let f of Facilities" [value]="f">\n                  {{ f.facilityCenterName }}\n                </ion-option>\n              </ion-select>\n            </ion-item>\n    \n            <ion-item>\n              <ion-label>Locations</ion-label>\n              <ion-select\n                [(ngModel)]="DoctorVisit.Location"\n                name="DoctorVisit.Location"\n              >\n                <ion-option *ngFor="let L of Locations" [value]="L">\n                  {{ L.fcLocationName }}\n                </ion-option>\n              </ion-select>\n            </ion-item>\n    \n            <ion-item>\n              <ion-label>Patient Name</ion-label>\n              <ion-select\n                [(ngModel)]="DoctorVisit.Patient"\n                name="DoctorVisit.Patient"\n              >\n                <ion-option *ngFor="let P of PatientNames" [value]="P">\n                  {{ P.patientName }}\n                </ion-option>\n              </ion-select>\n            </ion-item>\n    \n            <ion-item>\n              <ion-label color="" floating>Symptoms</ion-label>\n              <ion-textarea\n                type="text"\n                [(ngModel)]="DoctorVisit.Symptoms"\n                name="DoctorVisit.Symptoms"\n              ></ion-textarea>\n            </ion-item>\n    \n            <ion-item>\n              <ion-label color="" floating>Treatment Provided</ion-label>\n              <ion-textarea\n                type="text"\n                [(ngModel)]="DoctorVisit.TreatmentProvided"\n                name="DoctorVisit.TreatmentProvided"\n              ></ion-textarea>\n            </ion-item>\n    \n            <ion-item>\n              <ion-label>Possible Disease Name</ion-label>\n              <ion-select\n                [(ngModel)]="DoctorVisit.PossibleDiseaseName"\n                name="DoctorVisit.PossibleDiseaseName"\n                multiple="true"\n              >\n                <ion-option *ngFor="let D of PossibleDiseaseNames" [value]="D">\n                  {{ D.diagnosiseName }}\n                </ion-option>\n              </ion-select>\n            </ion-item>\n    \n            <ion-item>\n              <ion-label color="" floating>Side Effect</ion-label>\n              <ion-textarea\n                type="text"\n                [(ngModel)]="DoctorVisit.SideEffect"\n                name="DoctorVisit.SideEffect"\n              ></ion-textarea>\n            </ion-item>\n    \n            <ion-item>\n              <ion-label color="" floating>Extra Details</ion-label>\n              <ion-textarea\n                [(ngModel)]="DoctorVisit.ExtraDetails"\n                name="DoctorVisit.ExtraDetails"\n              ></ion-textarea>\n            </ion-item>\n    \n            <ion-item>\n              <ion-label>Medicine Required</ion-label>\n              <ion-select\n                [(ngModel)]="DoctorVisit.MedicineRequired"\n                name="DoctorVisit.MedicineRequired"\n                multiple="true"\n              >\n                <ion-option *ngFor="let M of arrMedicineRequired" [value]="M">\n                  {{ M.drugCompoundName }}\n                </ion-option>\n              </ion-select>\n            </ion-item>\n    \n            <ion-item>\n              <ion-label>Report Required</ion-label>\n              <ion-select\n                [(ngModel)]="DoctorVisit.ReportRequired"\n                name="DoctorVisit.ReportRequired"\n                multiple="true"\n              >\n                <ion-option *ngFor="let R of arrReportRequired" [value]="R">\n                  {{ R.lrl1Name }}\n                </ion-option>\n              </ion-select>\n            </ion-item>\n    \n            <div padding>\n              <button\n                (click)="SubmitClicked()"\n                ion-button\n                class=""\n                color="secondary"\n                light\n              >\n                Submit\n              </button>\n    \n              <button (click)="CancelClicked()" ion-button class="" light>\n                Cancel\n              </button>\n            </div>\n          </div>\n        </ion-list>\n      </form> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctor-add-or-edit-visit/doctor-add-or-edit-visit.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], DoctorAddOrEditVisitPage);
    return DoctorAddOrEditVisitPage;
}());

//# sourceMappingURL=doctor-add-or-edit-visit.js.map

/***/ }),

/***/ 236:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientdoctorvisitlistviewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__addbooklab_addbooklab__ = __webpack_require__(74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__addpharmaappointment_addpharmaappointment__ = __webpack_require__(68);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the PatientdoctorvisitlistviewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientdoctorvisitlistviewPage = /** @class */ (function () {
    function PatientdoctorvisitlistviewPage(navCtrl, navParams, api, toastCtrl) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.toastCtrl = toastCtrl;
        this.item = [];
        this.PatientDoctorVisitlist = [];
        this.doctorVisitList = [];
        this.DiseaseData = [];
        this.TempDisease = [];
        this.patVisitNoteID = [];
        this.Medicine = [];
        this.TempMedicine = [];
        this.Report = [];
        this.TempReport = [];
        this.priviousIndex = 0;
        this.item = this.navParams.get("item");
        var Id = { patVisitNoteID: this.item.patVisitNoteID };
        console.log("Let ID:::", Id);
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditDoctorVisitPatient, Id)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                var response = resp;
                _this.PatientDoctorVisitlist = response.data;
                var jdiagnosisMasterData = _this.PatientDoctorVisitlist
                    .diagnosisMaster;
                if (jdiagnosisMasterData.length > 0) {
                    for (var i = 0; i < jdiagnosisMasterData.length; i++) {
                        _this.TempDisease.push(jdiagnosisMasterData[i].diagnosiseName);
                    }
                    _this.DiseaseData = _this.TempDisease;
                }
                else {
                    _this.DiseaseData = [];
                }
                var drugCompoundMasterData = _this.PatientDoctorVisitlist
                    .drugCompoundMaster;
                if (drugCompoundMasterData.length > 0) {
                    for (var i = 0; i < drugCompoundMasterData.length; i++) {
                        _this.TempMedicine.push(drugCompoundMasterData[i].drugCompoundName);
                    }
                    _this.Medicine = _this.TempMedicine;
                }
                else {
                    _this.Medicine = [];
                }
                var labReportsLevelData = _this.PatientDoctorVisitlist
                    .labReportsLevel1;
                if (labReportsLevelData.length > 0) {
                    for (var i = 0; i < labReportsLevelData.length; i++) {
                        _this.TempReport.push(labReportsLevelData[i].labReportType);
                    }
                    _this.Report = _this.TempReport;
                }
                else {
                    _this.Report = [];
                }
                //this.ViewAppointment=resp;
            }
        });
    }
    PatientdoctorvisitlistviewPage.prototype.ionViewDidLoad = function () {
        this.getAllDrList();
    };
    PatientdoctorvisitlistviewPage.prototype.bookLab = function () {
        console.log("helloooo111111=>", this.PatientDoctorVisitlist.labReportsLevel1);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__addbooklab_addbooklab__["a" /* AddbooklabPage */], {
            obj: this.PatientDoctorVisitlist,
            patvisitnoteid: this.item.patVisitNoteID,
            flagType: 2
        });
    };
    PatientdoctorvisitlistviewPage.prototype.bookpharma = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__addpharmaappointment_addpharmaappointment__["a" /* AddPharmaAppointmentPage */]);
    };
    PatientdoctorvisitlistviewPage.prototype.getAllDrList = function () {
        var _this = this;
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDoctorVisitPatient, "").then(function (resp) {
            var doctorVisitList = resp;
            _this.doctorVisitList = doctorVisitList.data.patVisitNotePojo;
            for (var _i = 0, _a = _this.doctorVisitList; _i < _a.length; _i++) {
                var i = _a[_i];
                console.log("i.index:::", i.index);
            }
            _this.patVisitNoteID =
                doctorVisitList.data.patVisitNotePojo[0].patVisitNoteID;
            console.log("Patient Visit Note Id", _this.patVisitNoteID);
            // this.priviousIndex =
        });
    };
    PatientdoctorvisitlistviewPage.prototype.getDataforIndex = function (index) {
        console.log("Index:::::::::", index);
        for (var _i = 0, _a = this.doctorVisitList; _i < _a.length; _i++) {
            var sample = _a[_i];
            console.log("data:" + sample);
            if (this.patVisitNoteID == sample.patVisitNoteID) {
                console.log("Current index is:" + sample.index);
                this.priviousIndex = sample.index;
            }
        }
        if (index == 0) {
            this.priviousIndex = this.priviousIndex - 1;
            console.log("previous index:" + this.priviousIndex);
        }
        else {
            this.priviousIndex = this.priviousIndex + 1;
            console.log("next index:" + this.priviousIndex);
        }
        for (var _b = 0, _c = this.doctorVisitList; _b < _c.length; _b++) {
            var samp = _c[_b];
            if (this.priviousIndex == samp.index) {
                this.patVisitNoteID = samp.patVisitNoteID;
                this.previous();
            }
        }
    };
    PatientdoctorvisitlistviewPage.prototype.previous = function () {
        var _this = this;
        var data1 = {
            patVisitNoteID: this.patVisitNoteID
        };
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditDoctorVisitPatient, data1)
            .then(function (resp) {
            if (resp.status === 500) {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
            }
            else {
                _this.PatientDoctorVisitlist = resp.data;
                console.log("Patient Visit Note Id", _this.patVisitNoteID);
            }
        });
    };
    PatientdoctorvisitlistviewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-patientdoctorvisitlistview",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientdoctorvisitlistview/patientdoctorvisitlistview.html"*/'<!--\n  Generated template for the PatientdoctorvisitlistviewPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<!-- <ion-header>\n  <ion-navbar>\n    <ion-title>Doctor Visit View</ion-title>\n  </ion-navbar>\n</ion-header> -->\n\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Doctor Visit View</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="view-list">\n    <!-- <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Visit Date\n      </div>\n      <div class="view-list-val pull-right">\n        {{ PatientDoctorVisitlist.patVisitDate }}\n      </div>\n    </div> -->\n\n    <div class="app-title-main">\n      <h3 _ngcontent-c2="" class="app-title">\n        {{ PatientDoctorVisitlist.providerName }}\n      </h3>\n      <div class="d-flex">\n        <ul class="nav align-items-center">\n          <li class="nav-item">\n            <i class="fa fa-calendar"></i>\n            <span>{{ PatientDoctorVisitlist.patVisitDate }}</span>\n          </li>\n          <li class="nav-item ml-3">\n            <i class="fa fa-clock-o"></i>\n            <span> {{ PatientDoctorVisitlist.times }}</span>\n          </li>\n        </ul>\n        <div class="vw-app-pagination d-flex ml-auto">\n          <a class="previous" href="#" (click)="getDataforIndex(0)">Previous</a>\n          <a class="next" href="#" (click)="getDataforIndex(1)">Next</a>\n          <!-- <a class="previous" href="#" (click)="getIndex(0);">Previous</a>\n          <a class="next" href="#"  (click)="getIndex(1);">Next</a> -->\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Visit Time\n      </div>\n      <div class="view-list-val  pull-right">\n        {{ PatientDoctorVisitlist.times }}\n      </div>\n    </div> -->\n\n    <!-- <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Consulting Doctor\n      </div>\n      <div class="view-list-val  pull-right">\n        {{ PatientDoctorVisitlist.providerName }}\n      </div>\n    </div> -->\n\n    <!-- <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Patient Id\n      </div>\n      <div class="view-list-val  pull-right">\n        {{ PatientDoctorVisitlist.patientID }}\n      </div>\n    </div> -->\n    <!-- <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Purpose\n      </div>\n      <div class="view-list-val  pull-right">\n        {{ PatientDoctorVisitlist.patVisitType }}\n      </div>\n    </div> -->\n    <!-- <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Symptoms Found\n      </div>\n      <div class="view-list-val  pull-right">\n        {{ PatientDoctorVisitlist.patSymptoms }}\n      </div>\n    </div> -->\n\n    <div class="view-lst-row doc-vis-view border-0">\n      <div class="vis-detail">\n        <div class="body">\n          <h6 class="title mt-0 mb-0">Symptoms Found</h6>\n          <ul class="mb-0">\n            <li>{{ PatientDoctorVisitlist.patSymptoms }}</li>\n          </ul>\n        </div>\n        <div class="vis-icon">\n          <img src="assets/images/symptoms-found-icon.png" />\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Treatment Provided\n      </div>\n      <div class="view-list-val  pull-right">\n        {{ PatientDoctorVisitlist.treatmentProvided }}\n      </div>\n    </div> -->\n\n    <div class="view-lst-row doc-vis-view border-0">\n      <div class="vis-detail">\n        <div class="body">\n          <h6 class="title mt-0 mb-0">Treatment Provided</h6>\n          <ul class="mb-0">\n            <li>{{ PatientDoctorVisitlist.treatmentProvided }}</li>\n          </ul>\n        </div>\n        <div class="vis-icon">\n          <img src="assets/images/speciality-icon.png" />\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Disease Name\n      </div>\n      <div class="view-list-val  pull-right">\n        {{ DiseaseData }}\n      </div>\n    </div> -->\n    <div class="view-lst-row doc-vis-view border-0">\n      <div class="vis-detail">\n        <div class="body">\n          <h6 class="title mt-0 mb-0">Disease Name</h6>\n          <ul class="mb-0">\n            <li>{{ DiseaseData }}</li>\n          </ul>\n        </div>\n        <div class="vis-icon">\n          <img src="assets/images/visit-icon.png" />\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Side Effects\n      </div>\n      <div class="view-list-val  pull-right">\n        {{ PatientDoctorVisitlist.patSideEffect }}\n      </div>\n    </div> -->\n    <div class="view-lst-row doc-vis-view border-0">\n      <div class="vis-detail">\n        <div class="body">\n          <h6 class="title mt-0 mb-0">Side Effects</h6>\n          <ul class="mb-0">\n            <li>{{ PatientDoctorVisitlist.patSideEffect }}</li>\n          </ul>\n        </div>\n        <div class="vis-icon">\n          <img src="assets/images/side-effect-icon.png" />\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Extra Detail\n      </div>\n      <div class="view-list-val  pull-right">\n        {{ PatientDoctorVisitlist.patExtraDetails }}\n      </div>\n    </div> -->\n\n    <div class="view-lst-row doc-vis-view border-0">\n      <div class="vis-detail">\n        <div class="body">\n          <h6 class="title mt-0 mb-0">Extra Detail</h6>\n          <ul class="mb-0">\n            <li>{{ PatientDoctorVisitlist.patExtraDetails }}</li>\n          </ul>\n        </div>\n        <div class="vis-icon">\n          <img src="assets/images/extra-details-icon.png" />\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Medicine Required\n      </div>\n      <div class="view-list-val  pull-right">\n        {{ Medicine }}\n      </div>\n    </div> -->\n    <div class="view-lst-row doc-vis-view border-0">\n      <div class="vis-detail">\n        <div class="body">\n          <h6 class="title mt-0 mb-0">Medicine Required</h6>\n          <ul class="mb-0">\n            <li>{{ Medicine }}</li>\n          </ul>\n        </div>\n        <div class="vis-icon">\n          <img src="assets/images/medicine-icon.png" />\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Report Required\n      </div>\n      <div class="view-list-val  pull-right">\n        {{ Report }}\n      </div>\n    </div> -->\n\n    <div class="view-lst-row doc-vis-view border-0">\n      <div class="vis-detail">\n        <div class="body">\n          <h6 class="title mt-0 mb-0">Report Required</h6>\n          <ul class="mb-0">\n            <li>{{ Report }}</li>\n          </ul>\n        </div>\n        <div class="vis-icon">\n          <img src="assets/images/report-required-icon.png" />\n        </div>\n      </div>\n    </div>\n\n    <div class="form-button bg-gray pt-25 mb-20 text-center">\n      <button type="button" class="cmn-thm-btn mr-25" (click)="bookLab()">\n        Book Laboratory\n      </button>\n      <button type="button" class="cmn-thm-btn mr-25" (click)="bookpharma()">\n        Book Pharmacy\n      </button>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <form text-center class="login-inner-hc" style="height: 50%;">\n  <ion-list>\n    <div class="login-signin-hc">\n      <div class="login-head-hc">\n        <h5>Patient Doctor Visit View</h5>\n      </div>\n\n      <ion-item>\n        <ion-label color="">Visit Date :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="PatientDoctorVisitlist.patVisitDate"\n          name="patVisitDate"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Visit Time :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="PatientDoctorVisitlist.times"\n          name="times"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Patient Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="PatientDoctorVisitlist.name"\n          name="name"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Patient Id :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="PatientDoctorVisitlist.patientID"\n          name="patientID"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Purpose :</ion-label>\n        <ion-input\n          type="text"\n          name="Purpose"\n          [(ngModel)]="PatientDoctorVisitlist.patVisitType"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Symptoms Found :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="PatientDoctorVisitlist.patSymptoms"\n          name="Symptoms"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Treatment Provided :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="PatientDoctorVisitlist.treatmentProvided"\n          name="Treatment"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Disease Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="DiseaseData"\n          name="Disease"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Side Effects :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="PatientDoctorVisitlist.patSideEffect"\n          name="Side"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Extra Detail :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="PatientDoctorVisitlist.patExtraDetails"\n          name="Extra"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Medicine Required :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="Medicine"\n          name="Medicine"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Report Required :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="Report"\n          name="Report"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <button ion-button (click)="bookLab()" style="float: right;">\n          Book Laboratory\n        </button>\n      </ion-item>\n    </div>\n  </ion-list>\n</form> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientdoctorvisitlistview/patientdoctorvisitlistview.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], PatientdoctorvisitlistviewPage);
    return PatientdoctorvisitlistviewPage;
}());

//# sourceMappingURL=patientdoctorvisitlistview.js.map

/***/ }),

/***/ 237:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientlabreportlistviewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_photo_viewer__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__addpharmaappointment_addpharmaappointment__ = __webpack_require__(68);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the PatientlabreportlistviewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientlabreportlistviewPage = /** @class */ (function () {
    function PatientlabreportlistviewPage(navCtrl, navParams, photoViewer, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.photoViewer = photoViewer;
        this.api = api;
        this.item = [];
        this.PatientLabReportListView = [];
        this.DiseaseData = [];
        this.TempDisease = [];
        this.Medicine = [];
        this.TempMedicine = [];
        this.Report = [];
        this.TempReport = [];
        this.item = this.navParams.get("item");
    }
    PatientlabreportlistviewPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        var Id = { reportPatLapAppId: this.item.reportPatLapAppId };
        // let Id={reportPatLapAppId:22};
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].ViewLabReport, Id).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                //this.ViewAppointment=resp;
                console.log("ViewLabReportView : >>", resp);
                _this.PatientLabReportListView = resp.data;
                //  let jdiagnosisMasterData=this.PatientLabReportListView.diagnosisMaster;
                //  for(let i=0;i<jdiagnosisMasterData.length;i++)
                //  {
                //   this.TempDisease.push(jdiagnosisMasterData[i].diagnosiseName);
                //  }
                //  this.DiseaseData=this.TempDisease;
                //  let drugCompoundMasterData=this.PatientLabReportListView.drugCompoundMaster;
                //  for(let i=0;i<drugCompoundMasterData.length;i++)
                //  {
                //   this.TempMedicine.push(drugCompoundMasterData[i].drugCompoundName);
                //  }
                //  this.Medicine=this.TempMedicine;
                //  let labReportsLevelData=this.PatientLabReportListView.labReportsLevel1;
                //  for(let i=0;i<labReportsLevelData.length;i++)
                //  {
                //   this.TempReport.push(labReportsLevelData[i].labReportType);
                //  }
                //  this.Report=this.TempReport;
                // this.ViewAppointment=resp;
            }
        });
    };
    PatientlabreportlistviewPage.prototype.showPhoto = function (imagePath) {
        console.log("showPhoto clicked...", imagePath);
        this.photoViewer.show(imagePath);
    };
    PatientlabreportlistviewPage.prototype.bookPharma = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__addpharmaappointment_addpharmaappointment__["a" /* AddPharmaAppointmentPage */]);
    };
    PatientlabreportlistviewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-patientlabreportlistview",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientlabreportlistview/patientlabreportlistview.html"*/'<!--\n  Generated template for the PatientlabreportlistviewPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>Patient Lab Report List View</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="view-list">\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Patient Name\n      </div>\n      <div class="view-list-val  pull-right">\n        {{ PatientLabReportListView.patientName }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Report Date\n      </div>\n      <div class="view-list-val pull-right">\n        {{ PatientLabReportListView.date }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Report Time\n      </div>\n      <div class="view-list-val  pull-right">\n        {{ PatientLabReportListView.time }}\n      </div>\n    </div>\n\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Report Detail\n      </div>\n      <div\n        class="view-list-val  pull-right"\n        *ngFor="let item of PatientLabReportListView.reportLapdata"\n      >\n        {{item.labReportsLevel1Pojo.lrl1Name }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Disease Associated\n      </div>\n\n      <div class="view-list-val  pull-right">\n        <span\n          *ngFor="let reportDetails of PatientLabReportListView.reportLapdata"\n        >\n          <span *ngFor="let diagnosis of reportDetails.diagnosisMasterdata">\n            {{diagnosis.diagnosiseName}}\n          </span>\n        </span>\n        <!-- {{ item.diagnosiseName }} -->\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Attached Report\n      </div>\n      <div\n        class="view-list-val  pull-right"\n        *ngFor="let item of PatientLabReportListView.reportLapdata"\n      >\n        <img\n          src="{{ item.reportfullPath }}"\n          height="75px"\n          width="100px"\n          data-toggle="modal"\n          data-target="#myModal"\n          (click)="showPhoto(item.reportfullPath)"\n        />\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Attached Video Report\n      </div>\n      <div\n        class="view-list-val  pull-right"\n        *ngFor="let item of PatientLabReportListView.reportLapdata"\n      >\n        <img\n          src="{{ item.vidreportPath }}"\n          height="75px"\n          width="100px"\n          data-toggle="modal"\n          data-target="#myModal"\n          (click)="showPhoto(item.vidreportPath)"\n        />\n      </div>\n    </div>\n    <div class="form-button bg-gray pt-25 text-center">\n      <button type="button" class="cmn-thm-btn mr-25" (click)="bookPharma()">\n        Book Pharma\n      </button>\n      <!-- <button type="button" class="cmn-wht-btn" (click)="bookLab()">\n        Book Laboratory\n      </button> -->\n    </div>\n  </div>\n</ion-content>\n\n<!-- <ion-item>\n  <ion-label color="">Date :</ion-label>\n  <ion-input\n    type="text"\n    [(ngModel)]="PatientLabReportListView.date"\n    name="date"\n    disabled="true"\n  ></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label color="">Time:</ion-label>\n  <ion-input\n    type="text"\n    [(ngModel)]="PatientLabReportListView.time"\n    name="time"\n    disabled="true"\n  ></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label color="">Lab Name :</ion-label>\n  <ion-input\n    type="text"\n    [(ngModel)]="PatientLabReportListView.patientName"\n    name="labName"\n    disabled="true"\n  ></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label color="">Disease Name :</ion-label>\n  <ion-input\n    type="text"\n    [(ngModel)]="PatientLabReportListView.patientID"\n    name="disease"\n    disabled="true"\n  ></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label color="">Report Detail :</ion-label>\n  <ion-input\n    type="text"\n    name="reportDetail"\n    [(ngModel)]="PatientLabReportListView.reportDetail"\n    disabled="true"\n  ></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label color="">Attached Report :</ion-label>\n  <ion-input\n    type="text"\n    [(ngModel)]="PatientLabReportListView.additionalDetail"\n    name="Attachedreport"\n    disabled="true"\n  ></ion-input>\n</ion-item> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientlabreportlistview/patientlabreportlistview.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_photo_viewer__["a" /* PhotoViewer */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], PatientlabreportlistviewPage);
    return PatientlabreportlistviewPage;
}());

//# sourceMappingURL=patientlabreportlistview.js.map

/***/ }),

/***/ 238:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LabviewreportPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the LabviewreportPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LabviewreportPage = /** @class */ (function () {
    function LabviewreportPage(navCtrl, navParams, api, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.viewReportDetails = [];
        this.item = [];
        this.storeReportData = [];
        this.storeDisease = [];
        this.reportName = [];
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        this.item = this.navParams.get('item');
    }
    LabviewreportPage.prototype.goBack = function () {
        this.navCtrl.pop();
    };
    LabviewreportPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        var patientId = { reportPatLapAppId: this.item.reportPatLapAppId };
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].LabViewLabReport, patientId).then(function (resp) {
            //this.ViewAppointment=resp;
            // console.log('wsPostHeader : >>',resp);
            _this.viewReportDetails = resp.data;
            //this.viewReportDetails = this.item
            // console.log('Amit : >>', this.viewReportDetails);
            if (resp.data.reportLapdata.length > 0) {
                console.log("here 1");
                for (var i = 0; resp.data.reportLapdata.length > i; i++) {
                    var report = { extraDetail: resp.data.reportLapdata[i].extraDetail, reportPath: resp.data.reportLapdata[i].reportPath };
                    _this.storeReportData.push(report);
                    _this.reportName.push(resp.data.reportLapdata[i].labReportsLevel1Pojo.lrl1Name);
                    //console.log(resp.data.reportLapdata[i].labReportsLevel1Pojo.lrl1Name);
                    for (var j = 0; resp.data.reportLapdata[i].diagnosisMasterdata.length > j; j++) {
                        // let Dise={diagnosisID:resp.data.reportLapdata[i].diagnosisMasterdata[j].diagnosisID,diagnosiseName:resp.data.reportLapdata[i].diagnosisMasterdata[j].diagnosiseName}
                        _this.storeDisease.push(resp.data.reportLapdata[i].diagnosisMasterdata[j].diagnosiseName);
                    }
                }
                // console.log(this.storeReportData);
                // console.log(this.storeDisease);
                // console.log(this.reportName);
            }
            _this.allDiseaseName = _this.storeDisease;
            _this.allReportlist = _this.reportName;
        }, function (err) {
            _this.viewReportDetails = _this.item;
            //console.log('Amit : >>', this.viewReportDetails);
        });
    };
    LabviewreportPage.prototype.downloadFile = function (item) {
        var path = __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].downloadfilepationteport + item;
        var exits = __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].existspationreport + item;
        this.api.wsGet(exits, "").then(function (resp) {
            if (resp.status === 500) {
                alert("error");
            }
            else {
                console.log("Resp= ", resp);
                window.open(path, '_blank');
            }
        }).catch(function (err) {
            alert("error");
        });
    };
    LabviewreportPage.prototype.clickOnAssociatedVisitButton = function (data) {
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to Add visit?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    LabviewreportPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-labviewreport',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labviewreport/labviewreport.html"*/'<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Laboratory Report View</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="view-list">\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Report Date\n      </div>\n      <div class="view-list-val pull-right">\n        {{ viewReportDetails.date }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Report Time\n      </div>\n      <div class="view-list-val pull-right">\n        {{ viewReportDetails.time }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Patient Name\n      </div>\n      <div class="view-list-val pull-right">\n        {{ viewReportDetails.patientName }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Report Name\n      </div>\n      <div class="view-list-val pull-right">\n        {{ allReportlist }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Disease Associated\n      </div>\n      <div class="view-list-val pull-right">\n        {{ allDiseaseName }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Extra Detail\n      </div>\n      <div\n        class="view-list-val pull-right"\n        *ngFor="let item of viewReportDetails.reportLapdata"\n      >\n        {{ item.extraDetail }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Attached Report\n      </div>\n      <div\n        class="view-list-val pull-right"\n        *ngFor="let item of viewReportDetails.reportLapdata"\n      >\n        {{ item.reportPath | trimPath }}\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <form text-center class="login-inner-hc" style="height: 50%;">\n  <ion-list>\n    <div class="login-signin-hc">\n      <ion-item>\n        <ion-label color="">Report Date :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="viewReportDetails.date"\n          name="Date"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Report Time :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="viewReportDetails.time"\n          name="Time"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Patient Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="viewReportDetails.patientName"\n          name="ReportID"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Report Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="allReportlist"\n          name="Name"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Disease Associated :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="allDiseaseName"\n          name="Disease"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Extra Detail :</ion-label>\n        <ion-input\n          *ngFor="let item of viewReportDetails.reportLapdata"\n          type="text"\n          [(ngModel)]="item.extraDetail"\n          name="Detail"\n          disabled="true"\n          wrapping\n        ></ion-input>\n      </ion-item>\n\n      <ion-item text-wrap>\n        <ion-label color="">Attached Report :</ion-label>\n        <ion-input\n          *ngFor="let item of viewReportDetails.reportLapdata"\n          type="text"\n          [(ngModel)]="item.reportPath"\n          name="Detail123"\n          disabled="true"\n          wrapping\n        >\n          {{ item.reportPath | trimPath }}\n        </ion-input>\n      </ion-item>\n    </div>\n  </ion-list>\n</form> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labviewreport/labviewreport.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], LabviewreportPage);
    return LabviewreportPage;
}());

//# sourceMappingURL=labviewreport.js.map

/***/ }),

/***/ 239:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LabtransactionhistoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the LabtransactionhistoryPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LabtransactionhistoryPage = /** @class */ (function () {
    function LabtransactionhistoryPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.transactionMaster = [];
    }
    LabtransactionhistoryPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        console.log("ionViewDidLoad LabtransactionhistoryPage");
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLabTransaction, "").then(function (resp) {
            console.log("getDoctorVisitlist : >>", JSON.stringify(resp.data));
            _this.transactionMaster = resp.data.patLabAppointmentsPojo;
            console.log(_this.transactionMaster);
            _this.transactionlist = resp.data.patLabAppointmentsPojo;
        });
    };
    LabtransactionhistoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-labtransactionhistory",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labtransactionhistory/labtransactionhistory.html"*/'<!--\n  Generated template for the LabtransactionhistoryPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Transaction History List</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="cmn-list">\n    <div class="cmn-apmnt-row clearfix" *ngFor="let item of transactionlist">\n      <div class="apmn-lft">\n        <div class="dr-name">{{item.name}}</div>\n        <div class="dr-adrs">{{item.patAppDate}}</div>\n        <div class="dr-adrs">{{item.fees}}</div>\n        <!-- <div *ngIf="item.patAppStatus == \'Completed\'" class="dr-adrs">\n          <span class="apmnt-lbl accepted">{{item.patAppStatus}}</span>\n        </div>\n        <div *ngIf="item.patAppStatus == \'Approved\'" class="dr-adrs">\n          <span class="apmnt-lbl accepted">{{item.patAppStatus}}</span>\n        </div>\n        <div *ngIf="item.patAppStatus == \'Cancel\'" class="dr-adrs">\n          <span class="apmnt-lbl cancelled">{{item.patAppStatus}}</span>\n        </div>\n        <div *ngIf="item.patAppStatus == \'Rejected\'" class="dr-adrs">\n          <span class="apmnt-lbl rejected">{{item.patAppStatus}}</span>\n        </div>\n        <div *ngIf="item.patAppStatus == \'Pending\'" class="dr-adrs">\n          <span class="apmnt-lbl pending">{{item.patAppStatus}}</span>\n        </div> -->\n        <div class="dr-adrs">Appointment Status : {{item.patAppStatus}}</div>\n      </div>\n\n      <div *ngIf="item.txnStatus == \'TXN_FAILURE\'" class="apmn-rgt">\n        <span class="apmnt-lbl rejected">\n          {{ item.txnStatus }}\n        </span>\n      </div>\n\n      <div *ngIf="item.txnStatus == \'Pending\'" class="apmn-rgt">\n        <span class="apmnt-lbl pending">\n          {{ item.txnStatus }}\n        </span>\n      </div>\n\n      <div *ngIf="item.txnStatus == \'TXN_SUCCESS\'" class="apmn-rgt">\n        <span class="apmnt-lbl accepted">\n          {{ item.txnStatus }}\n        </span>\n      </div>\n\n      <!-- <div class="apmn-rgt">\n        <span class="apmnt-lbl accepted">\n          Transaction Status : {{ item.txnStatus }}\n        </span>\n      </div> -->\n\n      <!-- <div class="apmnt-date">\n          On {{ item.patAppDate | date: "dd/MM/yyyy" }}\n        </div> -->\n    </div>\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labtransactionhistory/labtransactionhistory.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */]])
    ], LabtransactionhistoryPage);
    return LabtransactionhistoryPage;
}());

//# sourceMappingURL=labtransactionhistory.js.map

/***/ }),

/***/ 240:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DeliverablesPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the DeliverablesPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DeliverablesPage = /** @class */ (function () {
    function DeliverablesPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.item = [];
        this.id = "";
        this.patientname = "";
        this.visittype = "";
        this.medicineRequired = "";
    }
    DeliverablesPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        console.log('ionViewDidLoad DeliverablesPage');
        this.id = this.navParams.get("apptid");
        var data1 = {
            apptid: this.id
        };
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].postmedicinesrequestlistview, data1)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.data = resp.data;
                console.log(_this.data);
                _this.patientname = resp.data.patientName;
                _this.visittype = resp.data.visittype;
                _this.medicineRequired = resp.data.medname;
            }
        });
    };
    DeliverablesPage.prototype.test = function (data) {
        this.patientname = data;
    };
    DeliverablesPage.prototype.cancel = function (data) {
        console.log('Cancel clicked');
        this.navCtrl.pop();
    };
    DeliverablesPage.prototype.checkNulldata = function (data) {
        if (data.fclProviderMapID === null) {
            data.fclProviderMapID = "";
        }
        if (data.specialityID === null) {
            data.specialityID = "";
        }
        if (data.patAppDate === null) {
            data.patAppDate = 1524123001;
        }
        if (data.patAppTimeFrom === null) {
            data.patAppTimeFrom = 1524123001;
        }
        if (data.patAppTimeTo === null) {
            data.patAppTimeTo = 1524123001;
        }
        if (data.patAppType === null) {
            data.patAppType = "New";
        }
        if (data.patAppReason === null) {
            data.patAppReason = "BP";
        }
        if (data.patAppDescription === null) {
            data.patAppDescription = "dsfdsfdf";
        }
        return data;
    };
    DeliverablesPage.prototype.save = function () {
        var _this = this;
        console.log("save call");
        var d = this.checkNulldata(this.data);
        var passParam = {
            "status": "Dispatching",
            "apptid": d.apptid
        };
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].postmedicinestracking, passParam)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("call 2");
                // let petId={patAppointmentID:this.item.patAppointmentID};
                _this.navCtrl.pop();
            }
        });
    };
    DeliverablesPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-deliverables',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/deliverables/deliverables.html"*/'<!--\n  Generated template for the DeliverablesPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>Deliverables</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n\n<ion-content padding>\n  <ion-item *ngIf="data != undefined">\n    <ion-label color="" floating>Patient :</ion-label>\n    <ion-select\n   \n      [(ngModel)]="patientname"\n      [disabled]=true\n      \n    >\n      <ion-option      \n        [value]="data.patientName"\n        [selected]="true"\n        >{{ data.patientName }}</ion-option\n      >\n    </ion-select>\n  </ion-item>\n\n  <ion-item *ngIf="data != undefined">\n    <ion-label color="" floating>Visit Type :</ion-label>\n    <ion-select\n   \n      [(ngModel)]="visittype"\n      [disabled]=true\n      \n    >\n      <ion-option      \n        [value]="data.visittype"\n        [selected]="true"\n        >{{ data.visittype }}</ion-option\n      >\n    </ion-select>\n  </ion-item>\n\n  <ion-item *ngIf="data != undefined">\n    <ion-label color="" floating>Medicine Required :</ion-label>\n    <ion-select\n   \n      [(ngModel)]="medicineRequired"\n      [disabled]=true\n      \n    >\n      <ion-option      \n        [value]="data.medname"\n        [selected]="true"\n        >{{ data.medname }}</ion-option\n      >\n    </ion-select>\n  </ion-item>\n  <ion-item *ngIf="data != undefined">\n    <button ion-button  (click)="save(ViewAppointment)">Save</button>\n    <button ion-button  (click)="cancel(ViewAppointment)">Cancel</button>\n    </ion-item>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/deliverables/deliverables.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], DeliverablesPage);
    return DeliverablesPage;
}());

//# sourceMappingURL=deliverables.js.map

/***/ }),

/***/ 241:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DoctorprofilePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__doctorprofilepersonal_doctorprofilepersonal__ = __webpack_require__(242);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__doctorprofileextended_doctorprofileextended__ = __webpack_require__(243);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__doctorprofiledemographic_doctorprofiledemographic__ = __webpack_require__(244);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__doctorprofileprofessionalinfo_doctorprofileprofessionalinfo__ = __webpack_require__(245);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__doctorprofiledocument_doctorprofiledocument__ = __webpack_require__(246);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__commonpages_changepassword_changepassword__ = __webpack_require__(97);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








/**
 * Generated class for the DoctorprofilePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DoctorprofilePage = /** @class */ (function () {
    function DoctorprofilePage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.tabPersonal = __WEBPACK_IMPORTED_MODULE_2__doctorprofilepersonal_doctorprofilepersonal__["a" /* DoctorprofilepersonalPage */];
        this.tabProfessional = __WEBPACK_IMPORTED_MODULE_5__doctorprofileprofessionalinfo_doctorprofileprofessionalinfo__["a" /* DoctorprofileprofessionalinfoPage */];
        this.tabDemographic = __WEBPACK_IMPORTED_MODULE_4__doctorprofiledemographic_doctorprofiledemographic__["a" /* DoctorprofiledemographicPage */];
        this.tabExtendedProfile = __WEBPACK_IMPORTED_MODULE_3__doctorprofileextended_doctorprofileextended__["a" /* DoctorprofileextendedPage */];
        this.tabChangePassoword = __WEBPACK_IMPORTED_MODULE_7__commonpages_changepassword_changepassword__["a" /* ChangepasswordPage */];
        this.tabDocuments = __WEBPACK_IMPORTED_MODULE_6__doctorprofiledocument_doctorprofiledocument__["a" /* DoctorprofiledocumentPage */];
        this.scrollableTabsopts = {};
        this.mySelectedIndex = navParams.data.tabIndex || 0;
    }
    DoctorprofilePage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad DoctorprofilePage");
    };
    DoctorprofilePage.prototype.refreshScrollbarTabs = function () {
        this.scrollableTabsopts = { refresh: true };
    };
    DoctorprofilePage.prototype.switchTabs = function (pos) {
        this.navCtrl.parent.setlect(pos);
    };
    DoctorprofilePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-doctorprofile",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorprofile/doctorprofile.html"*/'<style>\n  .tabbar::after {\n    content: none;\n  }\n</style>\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Doctor Profile</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <ion-tabs\n    #ionTabs\n    [scrollable-tabs]="ionTabs"\n    [opts]="scrollableTabsopts"\n    selectedIndex="0"\n    color="default"\n    tabsHighlight="true"\n    tabsPlacement="top"\n  >\n    <ion-tab [root]="tabPersonal" tabTitle="Personal"></ion-tab>\n    <ion-tab [root]="tabProfessional" tabTitle="Speciality"></ion-tab>\n    <ion-tab [root]="tabDemographic" tabTitle="Demographic"></ion-tab>\n    <ion-tab [root]="tabExtendedProfile" tabTitle="Extended Profile"></ion-tab>\n    <ion-tab [root]="tabDocuments" tabTitle="Documents"></ion-tab>\n    <ion-tab [root]="tabChangePassoword" tabTitle="Change Passoword"></ion-tab>\n  </ion-tabs>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorprofile/doctorprofile.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], DoctorprofilePage);
    return DoctorprofilePage;
}());

//# sourceMappingURL=doctorprofile.js.map

/***/ }),

/***/ 242:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DoctorprofilepersonalPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_file_path__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_common__ = __webpack_require__(14);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








/**
 * Generated class for the DoctorprofilepersonalPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DoctorprofilepersonalPage = /** @class */ (function () {
    function DoctorprofilepersonalPage(navCtrl, navParams, toastCtrl, api, actionSheetCrtl, camera, datepipe, alertCtrl, filePath, file) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.toastCtrl = toastCtrl;
        this.api = api;
        this.actionSheetCrtl = actionSheetCrtl;
        this.camera = camera;
        this.datepipe = datepipe;
        this.alertCtrl = alertCtrl;
        this.filePath = filePath;
        this.file = file;
        this.emailValidation = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\",this.toastCtrl);)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        this.nameValidation = /[^a-zA-Z]/;
        this.formData = new FormData();
        this.patAppTimeFrom = "";
        this.patAppDate = "";
        this.patAppTimeTo = "";
        this.profilePersonal = {
            perEmailList: [],
            perProfile: "",
            personID: "",
            perFname: "",
            perLName: "",
            perEmailPrimary: ""
        };
    }
    DoctorprofilepersonalPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad DoctorprofilepersonalPage");
        this.getPersonalData();
    };
    DoctorprofilepersonalPage.prototype.submitDetails = function () {
        // if (this.profilePersonal.username.length == 0) {
        //   showToast("Please Enter User name", this.toastCtrl);
        //   return
        // }
        // else if (nameValidation.test(this.profilePersonal.username)) {
        //   showToast("Please Enter valid username", this.toastCtrl);
        //   return
        // }
        if (this.profilePersonal.perFname.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter firstname", this.toastCtrl);
            return;
        }
        else if (this.nameValidation.test(this.profilePersonal.perFname)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid firstname", this.toastCtrl);
            return;
        }
        else if (this.profilePersonal.perLName.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter lastname", this.toastCtrl);
            return;
        }
        else if (this.nameValidation.test(this.profilePersonal.perLName)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid lastname", this.toastCtrl);
            return;
        }
        else if (this.profilePersonal.perEmailPrimary.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter email", this.toastCtrl);
            return;
        }
        else if (!this.emailValidation.test(this.profilePersonal.perEmailPrimary)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Email Address", this.toastCtrl);
            return;
        }
        //  else if (this.patAppTimeFrom.length == 0) {
        //   showToast("Please select Appointment start time", this.toastCtrl);
        //   return;
        // } else if (this.patAppTimeTo.length == 0) {
        //   showToast("Please select Appointment end time", this.toastCtrl);
        //   return;
        // }
        var date = new Date(this.patAppDate);
        var datetopass = date.getTime();
        var date1 = date.getUTCDate();
        console.log("datebefore", "" + datetopass);
        var timefrom = new Date(this.patAppDate + " " + this.patAppTimeFrom);
        var timefromtopass = timefrom.getTime();
        console.log("timebefrm", "" + timefromtopass);
        var timeto = new Date(this.patAppDate + " " + this.patAppTimeTo);
        var timetopass = timeto.getTime();
        console.log("timeto", "" + timetopass);
        this.callWebserviceUpdatePersonalDetails();
    };
    DoctorprofilepersonalPage.prototype.changeDateFormat = function (date, formate) {
        var latest_date = this.datepipe.transform(date, formate);
        console.log("ChangeDateFormat", latest_date);
        return latest_date;
    };
    DoctorprofilepersonalPage.prototype.getPersonalData = function () {
        var _this = this;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getPersonalDoctorProfile, "")
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                localStorage.setItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["e" /* perProfile */], resp.data.perProfile);
                _this.profilePersonal.personID = resp.data.personID;
                _this.profilePersonal.perProfile = resp.data.perProfile;
                _this.profilePersonal.perFname = resp.data.perFname;
                _this.profilePersonal.perLName = resp.data.perLName;
                _this.profilePersonal.perEmailPrimary = resp.data.perEmailPrimary;
                if (resp.data.perEmailList.length > 0) {
                    for (var i = 0; i < resp.data.perEmailList.length; i++) {
                        _this.profilePersonal.perEmailList.push(resp.data.perEmailList[i].value);
                    }
                }
            }
        });
    };
    DoctorprofilepersonalPage.prototype.callWebserviceUpdatePersonalDetails = function () {
        var _this = this;
        this.formData.append("personID", this.profilePersonal.personID);
        this.formData.append("perFname", this.profilePersonal.perFname);
        this.formData.append("perLName", this.profilePersonal.perLName);
        this.formData.append("perEmailPrimary", this.profilePersonal.perEmailPrimary);
        this.formData.append("perProfile", this.profilePersonal.perProfile);
        var emails = "";
        for (var _i = 0, _a = this.profilePersonal.perEmailList; _i < _a.length; _i++) {
            var emailItem = _a[_i];
            emails = emails + "," + emailItem;
        }
        while (emails.charAt(0) === ",") {
            emails = emails.substr(1);
        }
        this.formData.append("perEmailList", emails);
        this.api
            .wsPostMutlipartHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].updatePersonalDoctorProfile, this.formData)
            .then(function (resp) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
            localStorage.setItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["e" /* perProfile */], resp.data.perProfile);
        });
    };
    DoctorprofilepersonalPage.prototype.addtoList = function () {
        if (!this.emailValidation.test(this.secondaryEmail)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Email Address", this.toastCtrl);
            return;
        }
        this.profilePersonal.perEmailList.push(this.secondaryEmail);
        this.secondaryEmail = "";
    };
    DoctorprofilepersonalPage.prototype.deleteelement = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: "Confirm Delete",
            message: "Are you sure, you want to delete this email?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "OK",
                    handler: function () {
                        var index = _this.profilePersonal.perEmailList.indexOf(list);
                        if (index > -1) {
                            _this.profilePersonal.perEmailList.splice(index, 1);
                        }
                        console.log("Item deleted");
                    }
                }
            ]
        });
        alert.present();
    };
    DoctorprofilepersonalPage.prototype.buttonClickForChooseIDs = function () {
        var _this = this;
        Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["g" /* showActionSheetPhoto */])(this.actionSheetCrtl).then(function (seletedIndex) {
            _this.choosePhotoFromCameraOrGallery(seletedIndex);
        });
    };
    DoctorprofilepersonalPage.prototype.choosePhotoFromCameraOrGallery = function (sourceType) {
        var _this = this;
        console.log("111111111");
        var options = {
            quality: 100,
            destinationType: __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__["b" /* DestinationType */].FILE_URL,
            sourceType: sourceType,
            saveToPhotoAlbum: true,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            correctOrientation: true,
            allowEdit: true
        };
        console.log("22222222");
        this.camera.getPicture(options).then(function (imagePath) {
            console.log("3333333");
            console.log("getPicture >> ", imagePath);
            console.log("4444444444");
            console.log("getPicture  normalizeURL(imagePath) >> ", Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            console.log("5555555555");
            _this.saveImage(Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            console.log("6666666666");
            _this.profilePersonal.perProfile = imagePath;
            console.log("777777777");
        }, function (err) {
            alert(err);
            console.log("88888888");
        });
    };
    DoctorprofilepersonalPage.prototype.saveImage = function (imageFileUri) {
        var _this = this;
        console.log("99999999");
        this.file
            .resolveLocalFilesystemUrl(imageFileUri)
            .then(function (entry) {
            return entry.file(function (file) {
                console.log("aaaaaaaaa");
                _this.readFile(file);
                console.log("bbbbbb");
            });
        })
            .catch(function (err) { return console.log(err); });
        console.log("ccccccccc");
    };
    DoctorprofilepersonalPage.prototype.readFile = function (file) {
        var _this = this;
        console.log("dddddddddd");
        var reader = new FileReader();
        reader.onloadend = function () {
            console.log("eeeeeeeeee");
            var imgBlob = new Blob([reader.result], { type: file.type });
            // console.log("readFile() : file.type >> ", file.type);
            // console.log("readFile() : file >> ", file);
            console.log("fffffff");
            _this.formData.append("perProfile", imgBlob, file.name);
            console.log("gggggggggg");
        };
        reader.readAsArrayBuffer(file);
        console.log("hhhhhhh");
    };
    DoctorprofilepersonalPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-doctorprofilepersonal",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorprofilepersonal/doctorprofilepersonal.html"*/'<!--\n  Generated template for the PatientprofilepersonalPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-content>\n  <div class="profile-page">\n    <!-- profile top -->\n    <div class="">\n      <div class="cmn-tabs">\n        <div class="nav-tabs-navigation">\n          <div class="nav-tabs-wrapper"></div>\n        </div>\n        <!-- tabs content start -->\n        <div class="tab-content">\n          <!-- personal tab -->\n          <div class="tab-pane active" id="Personal">\n            <div class="personal-cntnt">\n              <!-- profile top part -->\n              <div class="profile-detail">\n                <div class="profile-img">\n                  <div class="usr-img">\n                    <img src="{{profilePersonal.perProfile}}" class="usr-pic" />\n                    <span class="img-upld-btn">\n                      <img\n                        src="assets/images/cam.png"\n                        (click)="buttonClickForChooseIDs()"\n                      />\n                      \n                    </span>\n                  </div>\n                </div>\n                <div class="prfl-dtl-rw clearfix">\n                  <div class="prfl-dtl-lbl pull-left">\n                    First Name\n                  </div>\n                  <div class="prfl-dtl-val pull-right">\n                    {{profilePersonal.perFname}}\n                  </div>\n                </div>\n                <div class="prfl-dtl-rw clearfix">\n                  <div class="prfl-dtl-lbl pull-left">\n                    Email\n                  </div>\n                  <div class="prfl-dtl-val pull-right">\n                    {{profilePersonal.perEmailPrimary}}\n                  </div>\n                </div>\n                <div class="prfl-dtl-rw clearfix">\n                  <div class="prfl-dtl-lbl pull-left">\n                    Phone No\n                  </div>\n                  <div class="prfl-dtl-val pull-right">\n                    1234567890\n                  </div>\n                </div>\n              </div>\n              <!-- profile top part end-->\n              <!-- form sec 1 -->\n              <div class="cmn-form no-input-efct bg-fff mt5">\n                <div class="pl15 pr15 form-bb">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">First Name</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="profilePersonal.perFname"\n                    />\n                  </div>\n                </div>\n                <div class="pl15 pr15 form-bb">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Last Name</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="profilePersonal.perLName"\n                    />\n                  </div>\n                </div>\n                <div class="pl15 pr15 form-bb">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Email</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="profilePersonal.perEmailPrimary"\n                      [readonly]="true"\n                    />\n                  </div>\n                </div>\n                <div class="pl15 pr15 form-bb">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Secondary Email</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="secondaryEmail"\n                    />\n                  </div>\n                </div>\n                <button class="btn cmn-thm-btn mr-25" (click)="addtoList()">\n                  Add\n                </button>\n              </div>\n              <ion-item>\n                <ion-list class="cmn-tb-cntnt">\n                  <ion-item-sliding\n                    #slidingItem\n                    *ngFor="let item of profilePersonal.perEmailList"\n                  >\n                    <ion-item>\n                      <div class="ptnt-name">{{item}}</div>\n                      <ion-icon\n                        class="trashicon"\n                        (click)="deleteelement(item)"\n                        name="trash"\n                        data-ng-if="(profilePersonal.perEmailList.length > 0)"\n                      ></ion-icon>\n                    </ion-item>\n                  </ion-item-sliding>\n                </ion-list>\n              </ion-item>\n              <div class="avl-schdl">\n                <div class="scdl-ttl">Timing</div>\n                <div class="scdl-row clearfix">\n                  <div class="scdl-day pull-left">Monday</div>\n                  <div class="scdl-time pull-right">12:00 PM to 04:00 PM</div>\n                </div>\n                <div class="scdl-row clearfix">\n                  <div class="scdl-day pull-left">Wednesday</div>\n                  <div class="scdl-time pull-right">12:00 PM to 04:00 PM</div>\n                </div>\n                <div class="scdl-row clearfix">\n                  <div class="scdl-day pull-left">Saturday</div>\n                  <div class="scdl-time pull-right">06:00 PM to 08:00 PM</div>\n                </div>\n                <div class="scdl-row clearfix">\n                  <div class="scdl-day pull-left">Sunday</div>\n                  <div class="scdl-time pull-right">06:00 PM to 08:00 PM</div>\n                </div>\n              </div>\n              <div class="pl15 pr15 form-bb">\n                <div class="form-group">\n                  <label class="bmd-label-floating">Time From</label>\n                  <ion-datetime\n                    displayFormat="hh:mm a"\n                    pickerFormat="hh:mm a"\n                    [(ngModel)]="patAppTimeFrom"\n                    name="timeFrom"\n                  ></ion-datetime>\n                  <span class="input-icon"\n                    ><img src="assets/images/time.png"\n                  /></span>\n                </div>\n              </div>\n              <div class="pl15 pr15 form-bb">\n                <div class="form-group">\n                  <label class="bmd-label-floating">Time To</label>\n                  <ion-datetime\n                    displayFormat="hh:mm a"\n                    pickerFormat="hh:mm a"\n                    [(ngModel)]="patAppTimeTo"\n                    name="timeTo"\n                  ></ion-datetime>\n                  <span class="input-icon"\n                    ><img src="assets/images/time.png"\n                  /></span>\n                </div>\n              </div>\n\n              <div class="form-button bg-gray pt-25 mb-20 text-center">\n                <button class="btn cmn-thm-btn mr-25" (click)="submitDetails()">\n                  SAVE\n                </button>\n                <button type="button" class="cmn-wht-btn">\n                  CANCEL\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ion-content>\n<!-- <ion-item no-lines>\n      <ion-label>Upload Picture</ion-label>\n    </ion-item>\n    <ion-item no-lines>\n      <button ion-button small (click)="buttonClickForChooseIDs()">Choose File</button>\n    </ion-item>\n  \n    <ion-item>\n      <ion-label floating>First name</ion-label>\n      <ion-input [(ngModel)]="profilePersonal.perFname" type="text"></ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-label floating>Last name</ion-label>\n      <ion-input [(ngModel)]="profilePersonal.perLName" type="text"></ion-input>\n    </ion-item>\n  \n    <ion-item>\n      <ion-label floating>Email</ion-label>\n      <ion-input [(ngModel)]="profilePersonal.perEmailPrimary" type="text" [readonly]="true"></ion-input>\n    </ion-item>\n  \n  \n    <div class="avl-schdl">\n        <div class="scdl-ttl">Timing</div>\n        <div class="scdl-row clearfix">\n          <div class="scdl-day pull-left">Monday</div>\n          <div class="scdl-time pull-right">12:00 PM to 04:00 PM</div>\n        </div>\n        <div class="scdl-row clearfix">\n          <div class="scdl-day pull-left">Wednesday</div>\n          <div class="scdl-time pull-right">12:00 PM to 04:00 PM</div>\n        </div>\n        <div class="scdl-row clearfix">\n          <div class="scdl-day pull-left">Saturday</div>\n          <div class="scdl-time pull-right">06:00 PM to 08:00 PM</div>\n        </div>\n        <div class="scdl-row clearfix">\n          <div class="scdl-day pull-left">Sunday</div>\n          <div class="scdl-time pull-right">06:00 PM to 08:00 PM</div>\n        </div>\n      </div>\n  \n      <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="scdl-ttl">Time From</label>\n            <ion-datetime\n              displayFormat="hh:mm a"\n              pickerFormat="hh:mm a"\n              [(ngModel)]="patAppTimeFrom"\n              name="timeFrom"\n            ></ion-datetime>\n            <span class="input-icon"><img src="assets/images/time.png"/></span>\n          </div>\n        </div>\n  \n        <div class="pl15 pr15 form-bb">\n            <div class="form-group">\n              <label class="scdl-ttl">Time To</label>\n              <ion-datetime\n                displayFormat="hh:mm a"\n                pickerFormat="hh:mm a"\n                [(ngModel)]="patAppTimeTo"\n                name="timeTo"\n              ></ion-datetime>\n              <span class="input-icon"><img src="assets/images/time.png"/></span>\n            </div>\n          </div>\n  \n    <ion-item>\n      <ion-label floating>Secondary Email</ion-label>\n      <ion-input type="text" [(ngModel)]="secondaryEmail"></ion-input>\n    </ion-item>\n  \n    <button ion-button (click)="addtoList()">Add</button>\n  \n    <ion-item>\n      <ion-list class="cmn-tb-cntnt">\n        <ion-item-sliding #slidingItem *ngFor="let item of profilePersonal.perEmailList">\n          <ion-item>\n            <div class="ptnt-name">{{item}}</div>\n          </ion-item>\n  \n          <ion-item-options>\n            <button ion-button color="danger" (click)="deleteelement(item)">Delete</button>\n          </ion-item-options>\n        </ion-item-sliding>\n      </ion-list>\n    </ion-item>\n  \n    <div padding align="center">\n      <div padding>\n        <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n        <button ion-button type="Cancel">Cancel</button>\n      </div>\n    </div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorprofilepersonal/doctorprofilepersonal.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_7__angular_common__["d" /* DatePipe */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_file_path__["a" /* FilePath */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__["a" /* File */]])
    ], DoctorprofilepersonalPage);
    return DoctorprofilepersonalPage;
}());

//# sourceMappingURL=doctorprofilepersonal.js.map

/***/ }),

/***/ 243:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DoctorprofileextendedPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_file_path__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_photo_viewer__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_image_picker__ = __webpack_require__(119);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











/**
 * Generated class for the DoctorprofileextendedPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DoctorprofileextendedPage = /** @class */ (function () {
    function DoctorprofileextendedPage(datepipe, navCtrl, navParams, toastCtrl, api, actionSheetCrtl, camera, alertCtrl, filePath, photoViewer, file, imagePicker) {
        this.datepipe = datepipe;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.toastCtrl = toastCtrl;
        this.api = api;
        this.actionSheetCrtl = actionSheetCrtl;
        this.camera = camera;
        this.alertCtrl = alertCtrl;
        this.filePath = filePath;
        this.photoViewer = photoViewer;
        this.file = file;
        this.imagePicker = imagePicker;
        // public designations: any[] = [];
        // public degreeArray: any[] = [];
        this.genderArray = [];
        this.formData = new FormData();
        // public selectedgenderID;
        // public selecteddegreeID;
        // public selectedDesignation;
        // public selectedDOB;
        this.arrcertificates = [];
        this.extendedProfile = {
            personID: "",
            perDOB: "",
            gender: "",
            perDegree: "",
            perDesignation: "",
            fees: "",
            oldAptFees: "",
            description: "",
            perCertificate: ""
        };
    }
    DoctorprofileextendedPage.prototype.ionViewDidLoad = function () {
        this.getExtendedData();
    };
    // selectedDesignation = this.designations[0];
    // selectedMaritalStatus = this.allMaritalStatus[0];
    DoctorprofileextendedPage.prototype.submitDetails = function () {
        var emailValidation = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\",this.toastCtrl);)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        var nameValidation = /[^a-zA-Z]/;
        var time = new Date(this.extendedProfile.perDOB);
        console.log("time >> ", time.getTime());
        this.extendedProfile.perDOB = time.getTime().toString();
        if (this.extendedProfile.perDOB.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter dob", this.toastCtrl);
            return;
        }
        else if (this.extendedProfile.gender.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select gender", this.toastCtrl);
            return;
        }
        else if (this.extendedProfile.perDegree.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter degree", this.toastCtrl);
            return;
        }
        else if (this.extendedProfile.perDesignation.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter designation", this.toastCtrl);
            return;
        }
        this.callWebserviceUpdateExtendedData();
    };
    DoctorprofileextendedPage.prototype.getExtendedData = function () {
        var _this = this;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getExtendedDoctorProfile, "")
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.extendedProfile = resp.data;
                localStorage.setItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["e" /* perProfile */], resp.data.perCertificate);
                // showToast(resp.message, this.toastCtrl)
                _this.getGenderList();
                _this.extendedProfile.fees = resp.data.fees;
                _this.extendedProfile.oldAptFees = resp.data.oldAptFees;
                _this.extendedProfile.perDegree = resp.data.perDegree;
                _this.extendedProfile.perDesignation = resp.data.perDesignation;
                _this.extendedProfile.gender = resp.data.gender;
                _this.extendedProfile.description = resp.data.description;
                _this.extendedProfile.perCertificate = resp.data.perCertificate;
                _this.extendedProfile.perDOB = resp.data.perDOB
                    ? _this.changeStringToDate(resp.data.perDOB)
                    : "";
                _this.arrcertificates = resp.data.certificates;
                console.log("response====>", JSON.stringify(resp));
            }
        });
    };
    DoctorprofileextendedPage.prototype.getGenderList = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].gender, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.genderArray = resp.data;
            }
        });
    };
    DoctorprofileextendedPage.prototype.radioClicked = function (val) {
        this.extendedProfile.gender = val;
        console.log("radioselected", this.extendedProfile.gender);
    };
    DoctorprofileextendedPage.prototype.callWebserviceUpdateExtendedData = function () {
        var _this = this;
        this.formData.append("perProfile", this.extendedProfile.perCertificate);
        console.log("submit===>", JSON.stringify(this.extendedProfile));
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].updateExtendedDoctorProfile, this.extendedProfile)
            .then(function (resp) {
            if (resp.status === 500) {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
                // localStorage.setItem(perProfile, resp.data.perCertificate);
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
            }
        });
    };
    ///to convert date and time////
    DoctorprofileextendedPage.prototype.changeStringToDate = function (dateString, format //date
    ) {
        if (format) {
            return this.changeDateFormat(new Date(new Date(dateString).getTime() -
                new Date(dateString).getTimezoneOffset() * 60000), format);
        }
        else {
            return new Date(new Date(dateString).getTime() -
                new Date(dateString).getTimezoneOffset() * 60000).toISOString();
        }
    };
    DoctorprofileextendedPage.prototype.changeDateFormat = function (date, formate //date to any format
    ) {
        var latest_date = this.datepipe.transform(date, formate);
        return latest_date;
    };
    //add viral code
    DoctorprofileextendedPage.prototype.buttonClickForChooseIDs = function () {
        var _this = this;
        Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["g" /* showActionSheetPhoto */])(this.actionSheetCrtl).then(function (seletedIndex) {
            _this.choosePhotoFromCameraOrGallery(seletedIndex);
        });
    };
    DoctorprofileextendedPage.prototype.choosePhotoFromCameraOrGallery = function (sourceType) {
        var _this = this;
        var options = {
            quality: 100,
            destinationType: __WEBPACK_IMPORTED_MODULE_8__ionic_native_camera__["b" /* DestinationType */].FILE_URL,
            sourceType: sourceType,
            saveToPhotoAlbum: true,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            correctOrientation: true
        };
        // this.camera.getPicture(options).then(
        this.imagePicker.getPictures(options).then(function (imagePath) {
            console.log("getPicture >> ", imagePath);
            console.log("getPicture  normalizeURL(imagePath) >> ", Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            for (var i = 0; i < imagePath.length; i++) {
                console.log('Image URI: ' + imagePath[i]);
                _this.saveImage(Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath[i]));
                // this.extendedProfile.perCertificate = imagePath[i];
            }
            _this.arrcertificates = imagePath;
        }, function (err) {
            alert(err);
        });
    };
    DoctorprofileextendedPage.prototype.showPhoto = function (imagePath) {
        console.log("showPhoto clicked");
        this.photoViewer.show(imagePath);
    };
    DoctorprofileextendedPage.prototype.saveImage = function (imageFileUri) {
        var _this = this;
        this.file
            .resolveLocalFilesystemUrl(imageFileUri)
            .then(function (entry) {
            return entry.file(function (file) {
                _this.readFile(file);
            });
        })
            .catch(function (err) { return console.log(err); });
    };
    DoctorprofileextendedPage.prototype.readFile = function (file) {
        var _this = this;
        var reader = new FileReader();
        reader.onloadend = function () {
            var imgBlob = new Blob([reader.result], { type: file.type });
            // console.log("readFile() : file.type >> ", file.type);
            // console.log("readFile() : file >> ", file);
            _this.formData.append("perCertificate", imgBlob, file.name);
        };
        reader.readAsArrayBuffer(file);
    };
    DoctorprofileextendedPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-doctorprofileextended",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorprofileextended/doctorprofileextended.html"*/'<!--\n  Generated template for the ExtendedprofilePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header> </ion-header>\n\n<ion-content>\n  <div class="tab-pane" id="Extended">\n    <div class="extnd-cntnt">\n      <form class="cmn-form no-input-efct mb-20 bg-fff">\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Date of Birth</label>\n            <ion-datetime\n              displayFormat="DD MMMM YYYY"\n              pickerFormat="DD MMMM YYYY"\n              name="date"\n              [(ngModel)]="extendedProfile.perDOB"\n            ></ion-datetime>\n            <span class="input-icon"><img src="assets/images/date.png"/></span>\n          </div>\n        </div>\n        <div class="floating-label cmn-select">\n          <ion-list radio-group>\n            <ion-list-header>\n              Gender\n            </ion-list-header>\n            <ion-item *ngFor="let item of genderArray">\n              <ion-label>{{item.value}}</ion-label>\n              <ion-radio\n                value="{{item.value}}"\n                [checked]="item.value == extendedProfile.gender"\n                (click)="radioClicked(item.value)"\n              >\n              </ion-radio>\n            </ion-item>\n          </ion-list>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">New Appointment Fess</label>\n            <input\n              type="text"\n              name="fees"\n              [(ngModel)]="extendedProfile.fees"\n              class="form-control"\n              [readonly]="false"\n            />\n          </div>\n        </div>\n\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">old Appointment Fess</label>\n            <input\n              type="text"\n              name="oldAptFees"\n              [(ngModel)]="extendedProfile.oldAptFees"\n              class="form-control"\n              [readonly]="false"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Degree</label>\n            <input\n              type="text"\n              name="degree"\n              [(ngModel)]="extendedProfile.perDegree"\n              class="form-control"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Designation</label>\n            <input\n              type="text"\n              name="designation"\n              [(ngModel)]="extendedProfile.perDesignation"\n              class="form-control"\n            />\n          </div>\n        </div>\n\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Addittinal Details</label>\n            <input\n              type="text"\n              name="description"\n              [(ngModel)]="extendedProfile.description"\n              class="form-control"\n              [readonly]="false"\n            />\n          </div>\n        </div>\n\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Attached Cirtificate</label>\n            <!-- <input\n              type="text"\n              name="description"\n              [(ngModel)]="extendedProfile.description"\n              class="form-control"\n              [readonly]="false"\n            /> -->\n\n            <div class="pl15 pr15 form-bb">\n              <div class="form-group cmn-file-upld mb-0 pt-30">\n                <div class="filename"></div>\n                <input\n                  id="license-upld"\n                  type="file"\n                  class="form-control cmn-fl-input custom-file-input"\n                  value=""\n                />\n                <label\n                  (click)="buttonClickForChooseIDs(3)"\n                  class="custom-file-label bmd-label-floating"\n                  ><span class="lbl-txt">Upload File</span></label\n                >\n              </div>\n            </div>\n            <div class="preview-thumb pl15 pr15">\n              <div class="prvw-doc"  *ngFor="let item of arrcertificates">\n                <img\n                  src="{{item}}"\n                  (click)="showPhoto(item)"\n                  class="prvw-doc"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- <div class="usr-img">\n          <label class="bmd-label-floating">Attached Cirtificate</label>\n          <img src="{{extendedProfile.perCertificate}}" class="usr-pic" />\n          <select\n            multiple\n            type="filename"\n            name="extendedProfile.perCertificate"\n            [(ngModel)]="extendedProfile.perCertificate"\n            (change)="onSelectChange($event)"\n          >\n          </select\n          >>\n          <span class="img-upld-btn">\n            <img\n              src="assets/images/cam.png"\n              (click)="buttonClickForChooseIDs()"\n            />\n          </span>\n        </div> -->\n\n        <!-- <div class="pl15 pr15 form-bb">\n              <div class="form-group">\n                <label class="bmd-label-floating">Attached Cirtificate</label>\n                <input\n                  type="filename"\n                  accept="image/*"\n                  name="perCertificate"\n                  [(ngModel)]="extendedProfile.perCertificate"\n                  multiple="true"\n                  class="form-control"\n\n                />\n\n                <span class="img-upld-btn">\n                    <img\n                      src="assets/images/cam.png"\n                      (click)="buttonClickForChooseIDs()"\n                    />\n                  </span>\n              </div>\n            </div> -->\n\n        <div class="form-button bg-gray pt-25 text-center">\n          <button class="btn cmn-thm-btn mr-25" (click)="submitDetails()">\n            Submit\n          </button>\n          <button type="button" class="btn  cmn-wht-btn">\n            CANCEL\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ion-content>\n<!-- <div padding align="center">\n      <div padding>\n        <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n        <button ion-button type="Cancel">Cancel</button>\n      </div>\n    </div> -->\n\n<!-- <ion-item>\n  <ion-label>Date of Birth</ion-label>\n  <ion-datetime\n    displayFormat="DD MMMM YYYY"\n    pickerFormat="DD MMMM YYYY"\n    [(ngModel)]="extendedProfile.perDOB"\n  ></ion-datetime>\n</ion-item>\n\n<ion-list radio-group>\n  <ion-list-header>\n    Gender\n  </ion-list-header>\n  <ion-item *ngFor="let item of genderArray">\n    <ion-label>{{ item.value }}</ion-label>\n    <ion-radio\n      value="{{ item.value }}"\n      [checked]="item.value == extendedProfile.gender"\n      (click)="radioClicked(item.value)"\n    >\n    </ion-radio>\n  </ion-item>\n\n  <ion-item>\n    <ion-label floating>Fees</ion-label>\n    <ion-input\n      [(ngModel)]="extendedProfile.fees"\n      type="text"\n      [readonly]="true"\n    ></ion-input>\n  </ion-item>\n</ion-list>\n\n<ion-item>\n  <ion-label floating>Degree</ion-label>\n  <ion-input [(ngModel)]="extendedProfile.perDegree" type="text"></ion-input>\n</ion-item>\n<ion-item>\n  <ion-label floating>Designation</ion-label>\n  <ion-input\n    [(ngModel)]="extendedProfile.perDesignation"\n    type="text"\n  ></ion-input>\n</ion-item> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorprofileextended/doctorprofileextended.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__angular_common__["d" /* DatePipe */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_file_path__["a" /* FilePath */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_photo_viewer__["a" /* PhotoViewer */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_native_image_picker__["a" /* ImagePicker */]])
    ], DoctorprofileextendedPage);
    return DoctorprofileextendedPage;
}());

//# sourceMappingURL=doctorprofileextended.js.map

/***/ }),

/***/ 244:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DoctorprofiledemographicPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_google_maps__ = __webpack_require__(122);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_geolocation__ = __webpack_require__(123);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__dash_board_for_doctor_dash_board_for_doctor__ = __webpack_require__(73);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the DoctorprofiledemographicPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DoctorprofiledemographicPage = /** @class */ (function () {
    function DoctorprofiledemographicPage(navCtrl, navParams, api, alertCtrl, toastCtrl, _googleMaps, _geoLoc) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.toastCtrl = toastCtrl;
        this._googleMaps = _googleMaps;
        this._geoLoc = _geoLoc;
        this.mobileNumberValidation = /^[0-9]{10}$/;
        this.timeZoneArray = [];
        this.states = [
            {
                title: "States",
                id: 1
            },
            {
                title: "Gujarat",
                id: 2
            }
        ];
        this.selectedState = this.states[0];
        this.countries = [
            {
                title: "Country",
                id: 1
            },
            {
                title: "India",
                id: 2
            },
            {
                title: "Greece",
                id: 3
            },
            {
                title: "Tonga",
                id: 4
            }
        ];
        this.selectedCountry = this.countries[0];
        this.loadAddressObject = {
            // facilityname:"",
            // facilitytype:"",
            addressLine1: "",
            addressLine2: "",
            addressLine3: "",
            area: "",
            city: "",
            state: "",
            zip: "",
            country: "",
            milestone1: "",
            milestone2: "",
            timeZoneMaster: {
                utcTimeZoneId: 10,
                countryCode: "IN",
                countryName: "INDIA",
                timezoneAbbreviation: "IST",
                timezoneName: "Indian Standard Time",
                utcOffset: "+5:30"
            }
        };
        this.timeSlotObject = {
            timeSlotId: 0,
            weekDay: "",
            minPerPatient: "",
            start: "",
            end: ""
        };
        this.addressObject = {
            // facilityname:"",
            // facilitytype:"",
            locationID: null,
            addressLine1: "",
            addressLine2: "",
            addressLine3: "",
            city: "",
            state: "",
            zip: "",
            country: "",
            utcTimeZoneId: 0,
            fcLocationName: "Juhapura",
            facilityCenterID: 0,
            timeSlotArrays: [this.timeSlotObject],
            timeZoneMaster: {
                utcTimeZoneId: 0
            },
            timeSlot: [this.timeSlotObject]
        };
        this.demographicProfile = {
            personID: "",
            locationMaster: [],
            facilityCenterMaster: {
                facilityCenterID: "",
                facilityCenterName: "",
                facilityCenterType: ""
            },
            perMobileList: [],
            perMobilePrimary: "",
            plmLocationStatus: ""
            // addressLine1: '',
            // addressLine2: '',
            // addressLine3: '',
            // zipcode: '',
            // state: '',
            // country: ''
        };
        this.addressData = {
            personID: "",
            locationMasterdata: [],
            facilityCenterMaster: {
                facilityCenterID: "",
                facilityCenterName: "",
                facilityCenterType: ""
            },
            perMobileList: [],
            perMobilePrimary: "",
            plmLocationStatus: ""
            // addressLine1: '',
            // addressLine2: '',
            // addressLine3: '',
            // zipcode: '',
            // state: '',
            // country: ''
        };
    }
    DoctorprofiledemographicPage.prototype.cancel = function () {
        this.navCtrl.parent.parent.push(__WEBPACK_IMPORTED_MODULE_6__dash_board_for_doctor_dash_board_for_doctor__["a" /* DashBoardForDoctorPage */]);
    };
    DoctorprofiledemographicPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad ProfiledemographicPage");
        this.getAllTimeZone();
        this.getDemographicData();
        // this.initMpa();
    };
    /**
     * get list of cities
     */
    DoctorprofiledemographicPage.prototype.getAllTimeZone = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllTimeZone, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.timeZoneArray = resp.data;
                _this.selectedTimeZone = _this.timeZoneArray[0].utcTimeZoneId;
                _this.showTimeZone(_this.selectedTimeZone);
                console.log("location array 0 item", _this.timeZoneArray[0].utcTimeZoneId);
            }
        });
    };
    DoctorprofiledemographicPage.prototype.showTimeZone = function (TimeZoneID) {
        console.log("locationid >> " + TimeZoneID);
        this.selectedTimeZone = TimeZoneID;
    };
    DoctorprofiledemographicPage.prototype.getDemographicData = function () {
        // var data1 = {
        //   // addressLine1: this.addressObject.addressLine1,
        //   // addressLine2: this.addressObject.addressLine2,
        //   // addressLine3: this.addressObject.addressLine3,
        //   // timeZoneMaster: this.addressObject.timeZoneMaster,
        //   // city: this.addressObject.city,
        //   // state: this.addressObject.state,
        //   // zip: this.addressObject.zip,
        //   // country: this.addressObject.country
        var _this = this;
        //   addressLine1: "",
        //   addressLine2: "",
        //   addressLine3: "",
        //   city: "",
        //   state: "",
        //   zip: "",
        //   country: "",
        //   timeZoneMaster: {
        //     utcTimeZoneId: 10,
        //     countryCode: "IN",
        //     countryName: "INDIA",
        //     timezoneAbbreviation: "IST",
        //     timezoneName: "Indian Standard Time",
        //     utcOffset: "+5:30"
        //   },
        //   timeSlot: {
        //     timeSlotId: "",
        //     weekDay: "",
        //     minPerPatient: "",
        //     start: "",
        //     end: ""
        //   }
        // };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getDemographicData, "")
            .then(function (resp) {
            console.log("response" + resp);
            console.log("locationMaster >> ", resp.data.locationMaster.length);
            if (resp.data.locationMaster.length > 0) {
                _this.demographicProfile.locationMaster = resp.data.locationMaster;
            }
            _this.demographicProfile.facilityCenterMaster =
                resp.data.facilityCenterMaster;
            if (resp.data.perMobileList.length > 0) {
                for (var i = 0; i < resp.data.perMobileList.length; i++) {
                    _this.demographicProfile.perMobileList.push(resp.data.perMobileList[i].value);
                }
            }
            for (var _i = 0, _a = resp.data.locationMaster; _i < _a.length; _i++) {
                var address = _a[_i];
                _this.loadAddressObject.addressLine1 = address.addressLine1;
                _this.loadAddressObject.addressLine2 = address.addressLine2;
                _this.loadAddressObject.addressLine3 = address.addressLine3;
                _this.loadAddressObject.city = address.city;
                console.log("city: " + address.city);
                _this.loadAddressObject.timeZoneMaster =
                    address.timeZoneMaster.countryName;
                console.log("timeZoneMaster: " + address.timeZoneMaster.countryName);
                _this.loadAddressObject.state = address.state;
                _this.loadAddressObject.zip = address.zip;
                _this.loadAddressObject.country = address.country;
            }
            // this.addressObject.addressLine1 =resp.data.locationMaster[0].addressLine1;
            _this.demographicProfile.personID = resp.data.personID;
            _this.demographicProfile.plmLocationStatus = resp.data.plmLocationStatus;
            _this.demographicProfile.perMobilePrimary = resp.data.perMobilePrimary;
        });
    };
    DoctorprofiledemographicPage.prototype.addAddress = function () {
        console.log("addAddress >> ", JSON.stringify(this.addressObject));
        if (this.addressObject.addressLine1.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid addressline 1", this.toastCtrl);
        }
        else if (this.addressObject.addressLine2.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid addressline 2", this.toastCtrl);
        }
        else if (this.addressObject.addressLine3.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid addressline 3", this.toastCtrl);
        }
        else if (this.addressObject.zip.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid zip", this.toastCtrl);
        }
        else if (this.addressObject.city.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid city", this.toastCtrl);
        }
        else if (this.addressObject.state.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid state", this.toastCtrl);
        }
        else if (this.addressObject.country.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid country", this.toastCtrl);
        }
        else {
            console.log(this.addressObject);
            console.log(this.timeSlotObject);
            // this.addressObject.timeSlot.push(this.timeSlotObject);
            this.demographicProfile.locationMaster.push(this.addressObject);
            // this.updatePatientDemographicProfile();
            this.timeSlotObject = {
                timeSlotId: 0,
                weekDay: "",
                minPerPatient: "",
                start: "",
                end: ""
            };
            this.addressObject = {
                // facilityname:"",
                // facilitytype:"",
                locationID: null,
                addressLine1: "",
                addressLine2: "",
                addressLine3: "",
                city: "",
                state: "",
                zip: "",
                country: "",
                utcTimeZoneId: 0,
                fcLocationName: "Juhapura",
                facilityCenterID: 0,
                timeSlotArrays: [this.timeSlotObject],
                timeZoneMaster: {
                    utcTimeZoneId: 0
                },
                timeSlot: [this.timeSlotObject]
            };
        }
    };
    DoctorprofiledemographicPage.prototype.submitDetails = function () {
        console.log("submitDetails >> ", JSON.stringify(this.demographicProfile));
        if (this.demographicProfile.perMobilePrimary.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid phone number", this.toastCtrl);
        }
        else {
            this.updatePatientDemographicProfile();
        }
    };
    DoctorprofiledemographicPage.prototype.addtoList = function () {
        if (!this.mobileNumberValidation.test(this.secondaryPhone)) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid phone number", this.toastCtrl);
            return;
        }
        this.demographicProfile.perMobileList.push(this.secondaryPhone);
        this.secondaryPhone = "";
    };
    DoctorprofiledemographicPage.prototype.deleteelement = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: "Confirm Delete",
            message: "Are you sure, you want to delete this phone number?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "OK",
                    handler: function () {
                        var index = _this.demographicProfile.perMobileList.indexOf(list);
                        if (index > -1) {
                            _this.demographicProfile.perMobileList.splice(index, 1);
                        }
                        console.log("Item deleted");
                    }
                }
            ]
        });
        alert.present();
    };
    DoctorprofiledemographicPage.prototype.deleteAddress = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: "Confirm Delete",
            message: "Are you sure, you want to delete this address?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "OK",
                    handler: function () {
                        var index = _this.demographicProfile.locationMaster.indexOf(list);
                        if (index > -1) {
                            _this.demographicProfile.locationMaster.splice(index, 1);
                        }
                        console.log("Item deleted");
                    }
                }
            ]
        });
        alert.present();
    };
    DoctorprofiledemographicPage.prototype.updatePatientDemographicProfile = function () {
        var _this = this;
        console.log("DAta==========", this.demographicProfile);
        this.addressData.locationMasterdata = this.demographicProfile.locationMaster;
        this.addressData.perMobileList = this.demographicProfile.perMobileList;
        this.addressData.perMobilePrimary = this.demographicProfile.perMobilePrimary;
        this.addressData.personID = this.demographicProfile.personID;
        this.addressData.plmLocationStatus = this.demographicProfile.plmLocationStatus;
        this.addressData.facilityCenterMaster.facilityCenterID = this.demographicProfile.facilityCenterMaster.facilityCenterID;
        this.addressData.facilityCenterMaster.facilityCenterName = this.demographicProfile.facilityCenterMaster.facilityCenterName;
        this.addressData.facilityCenterMaster.facilityCenterType = this.demographicProfile.facilityCenterMaster.facilityCenterType;
        var data = {};
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].addfacilityandlocation, this.addressData)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                // this.demographicProfile = resp.data;
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
            }
        });
    };
    //viral code map intigration
    // ngAfterViewInit()
    // {
    //   let loc:LatLng;
    //  this.initMap();
    //  this.map.one(GoogleMapsEvent.MAP_READY).then(() =>
    //    {
    //    this.geoLocation().then( res => {
    //    console.log(res.coords.latitude);
    //    console.log(res.coords.longitude);
    //    loc = new LatLng(res.coords.latitude,res.coords.longitude);
    //    this.moveCamera(loc);
    //    this.createMrker(loc,"Me").then((marker:Marker) => {
    //      marker.showInfoWindow();
    //    }).catch( err =>{
    //      console.log(err);
    //    });
    //   }).catch(err =>{
    //     console.log(err);
    //   });
    //    });
    // }
    DoctorprofiledemographicPage.prototype.initMap = function () {
        var element = this.mapElement.nativeElement;
        this.map = __WEBPACK_IMPORTED_MODULE_4__ionic_native_google_maps__["a" /* GoogleMaps */].create("map_canvas");
    };
    DoctorprofiledemographicPage.prototype.geoLocation = function () {
        return this._geoLoc.getCurrentPosition();
    };
    DoctorprofiledemographicPage.prototype.moveCamera = function (loc) {
        var options = {
            target: loc,
            zoom: 15,
            tilt: 10
        };
        this.map.moveCamera(options);
    };
    DoctorprofiledemographicPage.prototype.createMrker = function (loc, title) {
        var markerOptions = {
            position: loc,
            title: title
        };
        return this.map.addMarker(markerOptions);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("map"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], DoctorprofiledemographicPage.prototype, "mapElement", void 0);
    DoctorprofiledemographicPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-doctorprofiledemographic",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorprofiledemographic/doctorprofiledemographic.html"*/'<!--\n  Generated template for the ProfiledemographicPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header> </ion-header>\n\n<ion-content>\n  <div class="cmn-form no-input-efct bg-fff mt5">\n    <!-- <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Facility Center Name</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.facilityname"\n        />\n      </div>\n    </div> -->\n    <!-- <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        [(ngModel)]="addressObject.facilitytype"\n      >\n        <option value="India">Hospital</option>\n        <option value="Greece">Lab</option>\n        <option value="Tonga">MedicalCenter</option>\n      </select>\n      <label>Facility Center type</label>\n    </div> -->\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Address Line 1</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.addressLine1"\n        />\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Address Line 2</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.addressLine2"\n        />\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Address Line 3</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.addressLine3"\n        />\n      </div>\n    </div>\n\n    <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        [(ngModel)]="addressObject.city"\n      >\n        <option>City </option>\n        <option>ahmedabad </option>\n      </select>\n      <label>City</label>\n    </div>\n    <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        [(ngModel)]="addressObject.state"\n      >\n        <option>State </option>\n        <option>Gujarat </option>\n      </select>\n      <label>State</label>\n    </div>\n    <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        [(ngModel)]="addressObject.country"\n      >\n        <option>Country </option>\n        <option>India </option>\n      </select>\n      <label>Country</label>\n    </div>\n    <!-- <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">city</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.city"\n        />\n      </div>\n    </div> -->\n    <!-- <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">State</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.state"\n        />\n      </div>\n    </div> -->\n\n    <!-- <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Country</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.country"\n        />\n      </div>\n    </div> -->\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">ZipCode</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.zip"\n        />\n      </div>\n    </div>\n    <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        [(ngModel)]="addressObject.timeZoneMaster.utcTimeZoneId"\n        (change)="showTimeZone($event.target.value)"\n      >\n        <option\n          *ngFor="let category of timeZoneArray; let idx = index"\n          [value]="category.utcTimeZoneId"\n          selected="{{ (idx == 0).utcTimeZoneId }}"\n          >{{ category.countryName }}</option\n        >\n      </select>\n      <label>Time Zone</label>\n    </div>\n\n    <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        [(ngModel)]="timeSlotObject.weekDay"\n      >\n        <option>Day of the Week </option>\n        <option>Monday </option>\n        <option>Tuesday</option>\n        <option>Wednesday </option>\n        <option>Thursday</option>\n        <option>Friday </option>\n        <option>Saturday</option>\n        <option>Sunday</option>\n      </select>\n      <label>Day of the Week</label>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Minute per Patient</label>\n        <!-- <ion-datetime displayFormat="h:mm a"></ion-datetime> -->\n        <input\n          type="number"\n          class="form-control"\n          name="mntperpatient"\n          [(ngModel)]="timeSlotObject.minPerPatient"\n          step="1"\n          min="1"\n          max="60"\n        />\n        <span class="input-icon-txt fc-theme">Minute</span>\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Start Time</label>\n        <ion-datetime\n          displayFormat="h:mm A"\n          name="startTime"\n          [(ngModel)]="timeSlotObject.start"\n          minuteValues="0,15,30,45"\n        ></ion-datetime>\n        <!-- <input\n          type="number"\n          class="form-control"\n          name="startTime"\n          displayFormat="HH:mm"\n          [(ngModel)]="addressObject.timeSlot.start"\n          step="1"\n          min="1"\n          max="60"\n        /> -->\n        <!-- <span class="input-icon-txt fc-theme">Minute</span> -->\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">End Time</label>\n        <ion-datetime\n          displayFormat="h:mm A"\n          name="endTime"\n          [(ngModel)]="timeSlotObject.end"\n          minuteValues="0,15,30,45"\n        ></ion-datetime>\n        <!-- <input\n          type="number"\n          class="form-control"\n          name="endTime"\n          displayFormat="HH:mm"\n          [(ngModel)]="addressObject.timeSlot.end"\n          step="1"\n          min="1"\n          max="60"\n        /> -->\n        <!-- <span class="input-icon-txt fc-theme">Minute</span> -->\n      </div>\n    </div>\n\n    <div align="left">\n      <button\n        class="btn cmn-thm-btn mr-25"\n        type="submit"\n        (click)="addAddress()"\n        block\n      >\n        Add New Address\n      </button>\n    </div>\n\n    <!-- <div #map id="map_canvas" style="height:250px">\n      </div> -->\n\n    <ion-item>\n      <ion-list class="cmn-tb-cntnt">\n        <ion-item-sliding\n          #slidingItem\n          *ngFor="let item of demographicProfile.locationMaster"\n        >\n          <ion-item>\n            <div class="dr-name">\n              {{item.addressLine1}}, {{item.addressLine2}},\n              {{item.addressLine3}}\n            </div>\n            <div class="apmnt-tm">\n              {{item.city}}, {{item.state}}, {{item.country}}\n            </div>\n            <div class="rson-fr-meet">{{item.zip}} <br /></div>\n            <span *ngFor="let i of item.timeSlot">\n              <div class="rson-fr-meet">\n                Day : {{i.weekDay}} <br />\n                Time : {{i.start}} To {{i.end}} <br />\n                Per Patient Time : {{i.minPerPatient}} <br />\n              </div>\n            </span>\n\n            <ion-icon\n              class="trashicon"\n              (click)="deleteAddress(item)"\n              name="trash"\n              data-ng-if="(demographicProfile.locationMaster.length > 0)"\n            ></ion-icon>\n          </ion-item>\n        </ion-item-sliding>\n      </ion-list>\n    </ion-item>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Phone</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="demographicProfile.perMobilePrimary"\n        />\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Secondary Phone</label>\n        <input type="text" class="form-control" [(ngModel)]="secondaryPhone" />\n      </div>\n    </div>\n    <button class="btn cmn-thm-btn mr-25" (click)="addtoList()">Add</button>\n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of demographicProfile.perMobileList">\n          {{list}}\n          <ion-icon\n            class="trashicon"\n            (click)="deleteelement(list)"\n            name="trash"\n            data-ng-if="(demographicProfile.perMobileList.length > 0)"\n          ></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n\n    <div padding align="center">\n      <div padding>\n        <button\n          class="btn cmn-thm-btn mr-25"\n          type="submit"\n          (click)="submitDetails()"\n        >\n          Submit\n        </button>\n        <!-- <div #map id="map_canvas" style="height:10%; width:10%"></div> -->\n        <button class="cmn-wht-btn" type="Cancel" (click)="cancel()">\n          Cancel\n        </button>\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <ion-item>\n  <ion-label floating>Facility Center Name</ion-label>\n  <ion-input [(ngModel)]="addressObject.facilityname" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label color="" floating>Facility Center type</ion-label>\n  <ion-select [(ngModel)]="addressObject.facilitytype">\n    <ion-option value="India">Hospital</ion-option>\n    <ion-option value="Greece">Lab</ion-option>\n    <ion-option value="Tonga">MedicalCenter</ion-option>\n  </ion-select>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Address Line 1</ion-label>\n  <ion-input [(ngModel)]="addressObject.addressLine1" type="text"></ion-input>\n</ion-item>\n<ion-item>\n  <ion-label floating>Address Line 2</ion-label>\n  <ion-input [(ngModel)]="addressObject.addressLine2" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Address Line 3</ion-label>\n  <ion-input [(ngModel)]="addressObject.addressLine3" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>ZipCode</ion-label>\n  <ion-input [(ngModel)]="addressObject.zip" type="number"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>area</ion-label>\n  <ion-input [(ngModel)]="addressObject.area" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>city</ion-label>\n  <ion-input [(ngModel)]="addressObject.city" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>State</ion-label>\n  <ion-input [(ngModel)]="addressObject.state" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Country</ion-label>\n  <ion-input [(ngModel)]="addressObject.country" type="text"></ion-input>\n</ion-item>\n\n<div padding align="center">\n  <button ion-button type="submit" (click)="addAddress()" block>\n    Add New Address\n  </button>\n</div>\n\n<ion-item>\n  <ion-list class="cmn-tb-cntnt">\n    <ion-item-sliding\n      #slidingItem\n      *ngFor="let item of demographicProfile.locationMaster"\n    >\n      <ion-item>\n        <div class="ptnt-name">\n          {{item.addressLine1}}, {{item.addressLine2}}, {{item.addressLine3}}\n        </div>\n        <div class="rson-fr-meet">{{item.area}}, {{item.zip}}</div>\n        <div class="apmnt-tm">\n          {{item.city}}, {{item.state}}, {{item.country}}\n        </div>\n        <div class="apmnt-status">{{item.patAppStatus}}</div>\n      </ion-item>\n\n      <ion-item-options>\n        <button ion-button color="danger" (click)="deleteAddress(item)">\n          Delete\n        </button>\n      </ion-item-options>\n    </ion-item-sliding>\n  </ion-list>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Phone</ion-label>\n  <ion-input\n    [(ngModel)]="demographicProfile.perMobilePrimary"\n    type="number"\n  ></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Secondary Phone</ion-label>\n  <ion-input type="number" [(ngModel)]="secondaryPhone"></ion-input>\n</ion-item>\n\n<button ion-button (click)="addtoList()">Add</button>\n\n<ion-item>\n  <ion-list>\n    <ion-item *ngFor="let list of demographicProfile.perMobileList">\n      {{list}}\n      <ion-icon\n        class="trashicon"\n        (click)="deleteelement(list)"\n        name="trash"\n        data-ng-if="(demographicProfile.perMobileList.length > 0)"\n      ></ion-icon>\n    </ion-item>\n  </ion-list>\n</ion-item>\n\n<div padding align="center">\n  <div padding>\n    <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n    <button ion-button type="Cancel">Cancel</button>\n  </div>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorprofiledemographic/doctorprofiledemographic.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_google_maps__["a" /* GoogleMaps */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_geolocation__["a" /* Geolocation */]])
    ], DoctorprofiledemographicPage);
    return DoctorprofiledemographicPage;
}());

//# sourceMappingURL=doctorprofiledemographic.js.map

/***/ }),

/***/ 245:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DoctorprofileprofessionalinfoPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the DoctorprofileprofessionalinfoPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DoctorprofileprofessionalinfoPage = /** @class */ (function () {
    function DoctorprofileprofessionalinfoPage(navCtrl, navParams, api, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.toastCtrl = toastCtrl;
        this.profilePersonal = {
            specialityCode: "",
            specialityID: "",
            specialityName: ""
        };
    }
    DoctorprofileprofessionalinfoPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad DoctorprofileprofessionalinfoPage");
        this.getPersonalData();
    };
    DoctorprofileprofessionalinfoPage.prototype.getPersonalData = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].postgetfclocation, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.profilePersonal.specialityCode = resp.data.specialityCode;
                _this.profilePersonal.specialityID = resp.data.specialityID;
                _this.profilePersonal.specialityName = resp.data.specialityName;
            }
        });
    };
    DoctorprofileprofessionalinfoPage.prototype.submitDetails = function () {
        // if (this.profilePersonal.username.length == 0) {
        // showToast("Please Enter User name", this.toastCtrl);
        // return
        // }
        // else if (nameValidation.test(this.profilePersonal.username)) {
        // showToast("Please Enter valid username", this.toastCtrl);
        // return
        // }
        if (this.profilePersonal.specialityCode.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter specialityCode", this.toastCtrl);
            return;
        }
        else if (this.profilePersonal.specialityID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter specialityID", this.toastCtrl);
            return;
        }
        else if (this.profilePersonal.specialityName.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter specialityName", this.toastCtrl);
            return;
        }
        this.callWebserviceUpdatePersonalDetails();
    };
    DoctorprofileprofessionalinfoPage.prototype.callWebserviceUpdatePersonalDetails = function () {
        var _this = this;
        // this.formData.append("specialityCode", this.profilePersonal.specialityCode)
        // this.formData.append("specialityID", this.profilePersonal.specialityID)
        // this.formData.append("specialityName", this.profilePersonal.specialityName)
        var data = {
            specialityCode: this.profilePersonal.specialityCode,
            specialityID: this.profilePersonal.specialityID,
            specialityName: this.profilePersonal.specialityName
        };
        console.log("adfkjsadf;lksd");
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].postdocspecilality, data)
            .then(function (resp) {
            console.log(resp);
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.profilePersonal.specialityCode = resp.data.specialityCode;
                _this.profilePersonal.specialityID = resp.data.specialityID;
                _this.profilePersonal.specialityName = resp.data.specialityName;
            }
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
        });
    };
    DoctorprofileprofessionalinfoPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-doctorprofileprofessionalinfo",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorprofileprofessionalinfo/doctorprofileprofessionalinfo.html"*/'<!--\n  Generated template for the DoctorprofileprofessionalinfoPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header> </ion-header>\n\n<ion-content>\n  <div class="pl15 pr15 form-bb">\n    <div class="form-group">\n      <label class="bmd-label-floating">Speciality Name</label>\n      <input\n        type="text"\n        class="form-control"\n        [(ngModel)]="profilePersonal.specialityName"\n        name="specialityName"\n      />\n    </div>\n  </div>\n  <div class="floating-label cmn-select">\n    <select\n      class="floating-select form-control"\n      [(ngModel)]="profilePersonal.specialityCode"\n      name="specialityCode"\n    >\n      <option value="specialityCode">specialityCode</option>\n      <option value="GeneralPractice">General Practice</option>\n      <option value="GeneralSurgery">General Surgery</option>\n      <option value="AllErgyorimmunology">All Ergyorimmunolog</option>\n      <option value="LabSpeciality">Lab Speciality</option>\n      <option value="Otolaryngology">Otolaryngology</option>\n    </select>\n    <label>Speciality Code</label>\n  </div>\n\n  <div padding align="center">\n    <div class="form-button bg-gray pt-25 mb-20 text-center">\n      <button class="btn cmn-thm-btn mr-25" (click)="submitDetails()">\n        SAVE\n      </button>\n      <button type="button" class="cmn-wht-btn">\n        CANCEL\n      </button>\n    </div>\n  </div>\n</ion-content>\n\n<!-- \n<ion-item>\n  <ion-label floating>Speciality Name</ion-label>\n  <ion-input\n    [(ngModel)]="profilePersonal.specialityName"\n    type="text"\n    name="specialityName"\n  ></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label color="" floating>Speciality Code</ion-label>\n  <ion-input\n    [(ngModel)]="profilePersonal.specialityCode"\n    type="text"\n    name="specialityCode"\n  ></ion-input>\n  <ion-select>\n    <ion-option value="specialityCode">specialityCode</ion-option>\n    <ion-option value="General Practice">General Practice</ion-option>\n    <ion-option value="General Surgery">General Surgery</ion-option>\n    <ion-option value="All Ergyorimmunolog">All Ergyorimmunolog</ion-option>\n    <ion-option value="Lab Speciality">Lab Speciality</ion-option>\n    <ion-option value="Otolaryngology">Otolaryngology</ion-option>\n  </ion-select>\n</ion-item> \n\n</ion-content> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorprofileprofessionalinfo/doctorprofileprofessionalinfo.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], DoctorprofileprofessionalinfoPage);
    return DoctorprofileprofessionalinfoPage;
}());

//# sourceMappingURL=doctorprofileprofessionalinfo.js.map

/***/ }),

/***/ 246:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DoctorprofiledocumentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_file_path__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_photo_viewer__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__dash_board_for_doctor_dash_board_for_doctor__ = __webpack_require__(73);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the DoctorprofiledocumentPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DoctorprofiledocumentPage = /** @class */ (function () {
    function DoctorprofiledocumentPage(navCtrl, navParams, camera, actionSheetCrtl, tostCrtl, platform, filePath, file, photoViewer, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.camera = camera;
        this.actionSheetCrtl = actionSheetCrtl;
        this.tostCrtl = tostCrtl;
        this.platform = platform;
        this.filePath = filePath;
        this.file = file;
        this.photoViewer = photoViewer;
        this.api = api;
        this.formData = new FormData();
        this.isChkBoxAdharCardActive = false;
        this.isChkBoxPanCardActive = false;
        this.isChkBoxLicenseActive = false;
        // imageAadharCard: string = null
        // imagePancard: string = null
        // imageLicense: string = null
        this.profileDocument = {
            personID: "",
            perAadhaar: "",
            isAadhaarverified: "",
            perPANCard: "",
            isPerPANCardverified: "",
            perDriving: "",
            isPerDrivingLicense: "",
            perSSN: "",
            perSIN: "",
            perPANcardNo: "",
            perDrivingLicenseNo: "",
            perAadhaarCardNo: "",
            perAadhaarCardID: "",
            perPANcardID: "",
            perDrivingLicenseID: ""
        };
    }
    DoctorprofiledocumentPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad DoctorprofiledocumentPage");
        this.getDocumentData();
    };
    DoctorprofiledocumentPage.prototype.clickOnAdharCardChkBox = function () {
        this.isChkBoxAdharCardActive = !this.isChkBoxAdharCardActive;
        console.log("Cucumbers new state:" + this.isChkBoxAdharCardActive);
    };
    DoctorprofiledocumentPage.prototype.buttonClickForChooseIDs = function (type) {
        var _this = this;
        this.selectImageFor = type;
        Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["g" /* showActionSheetPhoto */])(this.actionSheetCrtl).then(function (seletedIndex) {
            _this.choosePhotoFromCameraOrGallery(seletedIndex);
        });
    };
    DoctorprofiledocumentPage.prototype.clickOnButtonSave = function () {
        // if (this.isChkBoxAdharCardActive && (this.profileDocument.perAadhaarCardID == "" || this.profileDocument.perAadhaarCardID == null)) {
        //   showToast("Please enter adhar card number", this.tostCrtl)
        // }
        // else if (this.isChkBoxPanCardActive && (this.profileDocument.perPANcardID == "" || this.profileDocument.perPANcardID == null)) {
        //   showToast("Please enter pan card number", this.tostCrtl)
        // }
        // else if (this.isChkBoxLicenseActive && (this.profileDocument.perDrivingLicenseID == "" || this.profileDocument.perDrivingLicenseID == null)) {
        //   showToast("Please enter license number", this.tostCrtl)
        // }
        console.log("ssn :- " +
            this.profileDocument.perSSN +
            "Sin" +
            this.profileDocument.perSIN);
        if (this.profileDocument.perSSN == "" ||
            this.profileDocument.perSSN == null) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter SSN No", this.tostCrtl);
        }
        else if (this.profileDocument.perSIN == "" ||
            this.profileDocument.perSIN == null) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter SIN No", this.tostCrtl);
        }
        else {
            this.callWebserviceUpdateDocuments();
        }
    };
    DoctorprofiledocumentPage.prototype.choosePhotoFromCameraOrGallery = function (sourceType) {
        var _this = this;
        var options = {
            quality: 100,
            destinationType: __WEBPACK_IMPORTED_MODULE_2__ionic_native_camera__["b" /* DestinationType */].FILE_URL,
            sourceType: sourceType,
            saveToPhotoAlbum: true,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (imagePath) {
            console.log("getPicture >> ", imagePath);
            console.log("getPicture >> ", imagePath);
            console.log("getPicture  normalizeURL(imagePath) >> ", Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            _this.saveImage(Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            if (_this.selectImageFor == 1) {
                _this.profileDocument.perAadhaarCardID = imagePath;
            }
            else if (_this.selectImageFor == 2) {
                _this.profileDocument.perPANcardID = imagePath;
            }
            else if (_this.selectImageFor == 3) {
                _this.profileDocument.perDrivingLicenseID = imagePath;
            }
        }, function (err) {
            // Handle error
            alert(err);
        });
    };
    DoctorprofiledocumentPage.prototype.showPhoto = function (imagePath) {
        console.log("showPhoto clicked");
        this.photoViewer.show(imagePath);
    };
    DoctorprofiledocumentPage.prototype.callWebserviceUpdateDocuments = function () {
        var _this = this;
        this.formData.append("personID", this.profileDocument.personID);
        this.formData.append("isAadhaarverified", this.profileDocument.isAadhaarverified);
        this.formData.append("isPerDrivingLicense", this.profileDocument.isPerDrivingLicense);
        this.formData.append("isPerPANCardverified", this.profileDocument.isPerPANCardverified);
        this.formData.append("perSIN", this.profileDocument.perSIN);
        this.formData.append("perSSN", this.profileDocument.perSSN);
        console.log("perSIN :- " + this.profileDocument.perSIN);
        console.log("perSSN :- " + this.profileDocument.perSSN);
        console.log("Dataaaaaa :- " + JSON.stringify(this.formData));
        this.api
            .wsPostMutlipartHeader(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["a" /* APIName */].updateDocumentsPatientProfile, this.formData)
            .then(function (resp) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.tostCrtl);
        });
    };
    DoctorprofiledocumentPage.prototype.saveImage = function (imageFileUri) {
        var _this = this;
        this.file
            .resolveLocalFilesystemUrl(imageFileUri)
            .then(function (entry) {
            return entry.file(function (file) {
                _this.readFile(file);
            });
        })
            .catch(function (err) { return console.log(err); });
    };
    DoctorprofiledocumentPage.prototype.readFile = function (file) {
        var _this = this;
        var reader = new FileReader();
        reader.onloadend = function () {
            var imgBlob = new Blob([reader.result], { type: file.type });
            console.log("imgBlob >> ", imgBlob);
            if (_this.selectImageFor == 1) {
                _this.formData.append("perAadhaar", imgBlob, file.name);
            }
            else if (_this.selectImageFor == 2) {
                _this.formData.append("perDriving", imgBlob, file.name);
            }
            else {
                _this.formData.append("perPANCard", imgBlob, file.name);
            }
            // this.callWebserviceUpdateDocuments()
        };
        reader.readAsArrayBuffer(file);
    };
    DoctorprofiledocumentPage.prototype.getDocumentData = function () {
        var _this = this;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["a" /* APIName */].getDocumentsPatientProfile, "")
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("getDocumentData >> ", resp);
                // this.profileDocument = resp.data
                _this.profileDocument.personID = resp.data.personID;
                _this.profileDocument.perAadhaarCardNo = resp.data.perAadhaarCardNo;
                _this.profileDocument.perAadhaarCardID = resp.data.perAadhaarCardID;
                _this.profileDocument.perPANcardID = resp.data.perPANcardID;
                _this.profileDocument.perDrivingLicenseID =
                    resp.data.perDrivingLicenseID;
                _this.profileDocument.perDrivingLicenseNo =
                    resp.data.perDrivingLicenseNo;
                _this.profileDocument.perPANcardNo = resp.data.perPANcardNo;
                _this.profileDocument.perAadhaar = resp.data.perAadhaarCardID;
                _this.profileDocument.isAadhaarverified = resp.data.isAadhaarverified;
                _this.profileDocument.perPANCard = resp.data.perPANcardID;
                _this.profileDocument.isPerPANCardverified =
                    resp.data.isPerPANCardverified;
                _this.profileDocument.perDriving = resp.data.perDrivingLicenseID;
                _this.profileDocument.isPerDrivingLicense =
                    resp.data.isPerDrivingLicense;
                _this.profileDocument.perSIN = resp.data.perSIN;
                _this.profileDocument.perSSN = resp.data.perSSN;
                // this.profileDocument.perPANCardNo = resp.data.perAadhaarCardNo
                // this.profileDocument.perDrivingNo = resp.data.perDrivingLicenseNo
                // this.profileDocument.perAadhaarNo = resp.data.perPANcardNo
                /*this.formData.append('personID', this.profileDocument.personID)
              this.formData.append('isAadhaarverified', this.profileDocument.isAadhaarverified)
              this.formData.append('isPerDrivingLicense', this.profileDocument.isPerDrivingLicense)
              this.formData.append('isPerPANCardverified', this.profileDocument.isPerPANCardverified)
              this.formData.append('perSIN', this.profileDocument.perSIN)
              this.formData.append('perSSN', this.profileDocument.perSSN)*/
                // this.formData.append('perAadhaar', this.profileDocument.perAadhaarCardID)
                // this.formData.append('perDriving', this.profileDocument.perDrivingLicenseID)
                // this.formData.append('perPANCard', this.profileDocument.perPANcardID)
            }
        });
    };
    DoctorprofiledocumentPage.prototype.cancel = function () {
        console.log("cancel button clicked");
        this.navCtrl.parent.parent.push(__WEBPACK_IMPORTED_MODULE_8__dash_board_for_doctor_dash_board_for_doctor__["a" /* DashBoardForDoctorPage */]);
    };
    DoctorprofiledocumentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-doctorprofiledocument",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorprofiledocument/doctorprofiledocument.html"*/'<!--\n  Generated template for the DoctorprofiledocumentPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header> </ion-header>\n\n<ion-content>\n  <div class="tab-pane" id="Documents">\n    <div class="documents">\n      <!-- doc no start -->\n      <div class="document-no bg-fff cmn-form no-input-efct">\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">SSN No</label>\n            <input\n              type="number"\n              class="form-control"\n              name="ssnNo"\n              [(ngModel)]="profileDocument.perSSN"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">SIN No</label>\n            <input\n              type="number"\n              class="form-control"\n              name="ssnNo"\n              [(ngModel)]="profileDocument.perSIN"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- doc no end -->\n      <!-- aadhar detail start -->\n      <div class="aadhar-dtl bg-fff cmn-form no-input-efct mt5">\n        <div class="dcmt-se-ttl">Aadhar Card</div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Aadhar No</label>\n            <input\n              type="text"\n              class="form-control"\n              name="aadharCardNumber"\n              [(ngModel)]="profileDocument.perAadhaarCardNo"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group cmn-file-upld mb-0 pt-30">\n            <div class="filename"></div>\n            <input\n              id="file-upld"\n              type="file"\n              class="form-control cmn-fl-input custom-file-input"\n              value=""\n            />\n            <label\n              class="custom-file-label bmd-label-floating"\n              (click)="buttonClickForChooseIDs(1)"\n              ><span class="lbl-txt">Upload File</span></label\n            >\n          </div>\n        </div>\n        <div class="preview-thumb pl15 pr15">\n          <div class="prvw-doc">\n            <img\n              src="{{profileDocument.perAadhaarCardID}}"\n              (click)="showPhoto(profileDocument.perAadhaarCardID)"\n              class="prvw-doc"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- aadhar detail end -->\n      <!-- Pan Card detail start -->\n      <div class="aadhar-dtl bg-fff cmn-form no-input-efct mt5">\n        <div class="dcmt-se-ttl">Pan Card</div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Pan No</label>\n            <input\n              type="text"\n              class="form-control"\n              name="panNumber"\n              [(ngModel)]="profileDocument.perPANcardNo"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group cmn-file-upld mb-0 pt-30">\n            <div class="filename"></div>\n            <input\n              id="pan-upld"\n              type="file"\n              class="form-control cmn-fl-input custom-file-input"\n              value=""\n            />\n            <label\n              (click)="buttonClickForChooseIDs(2)"\n              class="custom-file-label bmd-label-floating"\n              ><span class="lbl-txt">Upload File</span></label\n            >\n          </div>\n        </div>\n        <div class="preview-thumb pl15 pr15">\n          <div class="prvw-doc">\n            <img\n              src="{{profileDocument.perPANcardID}}"\n              (click)="showPhoto(profileDocument.perPANcardID)"\n              class="prvw-doc"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Pan Card detail end -->\n      <!-- License detail start -->\n      <div class="aadhar-dtl bg-fff cmn-form no-input-efct mt5">\n        <div class="dcmt-se-ttl">License</div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">License No</label>\n            <input\n              type="text"\n              class="form-control"\n              name="licenseNumber"\n              [(ngModel)]="profileDocument.perDrivingLicenseNo"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group cmn-file-upld mb-0 pt-30">\n            <div class="filename"></div>\n            <input\n              id="license-upld"\n              type="file"\n              class="form-control cmn-fl-input custom-file-input"\n              value=""\n            />\n            <label\n              (click)="buttonClickForChooseIDs(3)"\n              class="custom-file-label bmd-label-floating"\n              ><span class="lbl-txt">Upload File</span></label\n            >\n          </div>\n        </div>\n        <div class="preview-thumb pl15 pr15">\n          <div class="prvw-doc">\n            <img\n              src="{{profileDocument.perDrivingLicenseID}}"\n              (click)="showPhoto(profileDocument.perDrivingLicenseID)"\n              class="prvw-doc"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- License detail end -->\n      <div class="form-button bg-gray mb-20 pt-25 text-center">\n        <button class="btn cmn-thm-btn mr-25" (click)="clickOnButtonSave()">\n          SAVE\n        </button>\n        <button type="button" class="btn  cmn-wht-btn" (click)="cancel()">\n          CANCEL\n        </button>\n      </div>\n    </div>\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/doctorprofiledocument/doctorprofiledocument.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_file_path__["a" /* FilePath */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_photo_viewer__["a" /* PhotoViewer */],
            __WEBPACK_IMPORTED_MODULE_4__providers_api_api__["a" /* ApiProvider */]])
    ], DoctorprofiledocumentPage);
    return DoctorprofiledocumentPage;
}());

//# sourceMappingURL=doctorprofiledocument.js.map

/***/ }),

/***/ 247:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditemedicineinventoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the EditemedicineinventoryPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditemedicineinventoryPage = /** @class */ (function () {
    function EditemedicineinventoryPage(navCtrl, navParams, api, toastCtrl, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.toastCtrl = toastCtrl;
        this.alertCtrl = alertCtrl;
        this.medicineinventory = [];
        this.item = [];
        this.apptID = "";
    }
    EditemedicineinventoryPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        this.apptID = this.navParams.get("id");
        console.log('ionViewDidLoad EditemedicineinventoryPage');
        var data = this.apptID;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].viewemedicineinventory, data).then(function (resp) {
            // this.medicineinventory = resp.data;
            _this.MedicineRequired = resp.data.medicineName;
            _this.medicinequintity = resp.data.medicineQuantity;
            _this.costpermedicine = resp.data.costpermedicine;
        });
    };
    EditemedicineinventoryPage.prototype.callupdatemedicineapi = function () {
        var _this = this;
        if (this.medicinequintity.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Medicine Quentety", this.toastCtrl);
            return;
        }
        if (this.costpermedicine.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Cost per Medicine", this.toastCtrl);
            return;
        }
        if (this.MedicineRequired.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Medicine Inventory ", this.toastCtrl);
            return;
        }
        var data = JSON.stringify({
            medicineQuantity: this.medicinequintity,
            costpermedicine: this.costpermedicine,
            medicineName: this.MedicineRequired,
            medicineId: this.apptID
        });
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].postaddmedicineinventory, data)
            .then(function (resp) {
            if (resp.status === 500) {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("" + resp.message, _this.toastCtrl);
                _this.navCtrl.pop();
            }
        });
    };
    EditemedicineinventoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-editemedicineinventory',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/editemedicineinventory/editemedicineinventory.html"*/'<!--\n  Generated template for the MedicineinventoryPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title> Edit Medicine Inventory</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-item>\n    <ion-label floating>Medicine Required</ion-label>\n    <ion-select\n      placeholder=""\n      [(ngModel)]="MedicineRequired"\n      name="MedicineRequired"\n      disabled="true"\n    >\n      <ion-option [value]="MedicineRequired" selected="true"\n        >{{ MedicineRequired }}</ion-option\n      >\n    </ion-select>\n  </ion-item>\n\n  <ion-item>\n    <ion-label color="" floating>Medicine quntity</ion-label>\n    <ion-input\n      type="number"\n      [(ngModel)]="medicinequintity"\n      name="Medicinequntity"\n    ></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label color="" floating>costpermedicine</ion-label>\n    <ion-input\n      type="number"\n      [(ngModel)]="costpermedicine"\n      name="costpermedicine"\n    ></ion-input>\n  </ion-item>\n  <br />\n  <button\n    type="button"\n    class="cmn-thm-btn mr-25"\n    (click)="callupdatemedicineapi()"\n  >\n    Update\n  </button>\n  <!-- <button ion-button (click)="callupdatemedicineapi()">Update</button> -->\n\n  <!-- <button ion-button (click)="addnewmedicine()">Add New Medicine</button> -->\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/editemedicineinventory/editemedicineinventory.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], EditemedicineinventoryPage);
    return EditemedicineinventoryPage;
}());

//# sourceMappingURL=editemedicineinventory.js.map

/***/ }),

/***/ 248:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HospitalbasicdetailPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the HospitalbasicdetailPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var HospitalbasicdetailPage = /** @class */ (function () {
    function HospitalbasicdetailPage(navCtrl, navParams, camera, actionSheetCrtl, tostCrtl, api, alertctrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.camera = camera;
        this.actionSheetCrtl = actionSheetCrtl;
        this.tostCrtl = tostCrtl;
        this.api = api;
        this.alertctrl = alertctrl;
        this.secondaryEmail = "";
        this.emailValidation = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\",this.toastCtrl);)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        this.nameValidation = /[^a-zA-Z]/;
        this.profileHospital = {
            HospitalEmailLists: [],
            HospitalID: "",
            HospitalCompanyName: "",
            HospitalEmailPrimary: ""
        };
    }
    HospitalbasicdetailPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad PatientprofileHospitalPage");
        //  this.getPersonalData()
    };
    HospitalbasicdetailPage.prototype.submitDetails = function () {
        if (this.profileHospital.HospitalCompanyName.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Hospital name", this.tostCrtl);
            return;
        }
        else if (this.nameValidation.test(this.profileHospital.HospitalCompanyName)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Hospital name", this.tostCrtl);
            return;
        }
        else if (this.profileHospital.HospitalEmailPrimary.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter email", this.tostCrtl);
            return;
        }
        else if (!this.emailValidation.test(this.profileHospital.HospitalEmailPrimary)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Email Address", this.tostCrtl);
            return;
        }
        //this.callWebserviceUpdatePersonalDetails()
    };
    HospitalbasicdetailPage.prototype.getPersonalData = function () {
        var _this = this;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getPersonalPatientProfile, "")
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("getPersonalData >> ", resp);
                _this.profileHospital.HospitalID = resp.HospitalID;
                _this.profileHospital.HospitalCompanyName = resp.HospitalName;
                _this.profileHospital.HospitalEmailPrimary = resp.HospitalEmailPrimary;
                if (resp.HospitalEmailLists[0] != null &&
                    resp.HospitalEmailLists[0] != "[]") {
                    _this.profileHospital.HospitalEmailLists = resp.HospitalEmailLists;
                }
            }
        });
    };
    HospitalbasicdetailPage.prototype.callWebserviceUpdatePersonalDetails = function () {
        var _this = this;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].updatePersonalPatientProfile, this.profileHospital)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.tostCrtl);
            }
        });
    };
    HospitalbasicdetailPage.prototype.addtoList = function () {
        if (this.secondaryEmail.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Email Address", this.tostCrtl);
            return;
        }
        if (!this.emailValidation.test(this.secondaryEmail)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Email Address", this.tostCrtl);
            return;
        }
        this.profileHospital.HospitalEmailLists.push(this.secondaryEmail);
        this.secondaryEmail = "";
    };
    HospitalbasicdetailPage.prototype.deleteelement = function (list) {
        var _this = this;
        var alert = this.alertctrl.create({
            title: "Confirm Delete",
            message: "Are you sure, you want to delete this email?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "OK",
                    handler: function () {
                        var index = _this.profileHospital.HospitalEmailLists.indexOf(list);
                        if (index > -1) {
                            _this.profileHospital.HospitalEmailLists.splice(index, 1);
                        }
                        console.log("Item deleted");
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalbasicdetailPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-hospitalbasicdetail",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalbasicdetail/hospitalbasicdetail.html"*/'<!--\n  Generated template for the PatientprofilepersonalPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  </ion-header>\n  \n  \n  <ion-content padding>\n  \n    <ion-item>\n      <ion-label floating>Hospital Name</ion-label>\n      <ion-input [(ngModel)]="profileHospital.HospitalCompanyName" type="text"></ion-input>\n    </ion-item>\n   \n  \n    <ion-item>\n      <ion-label floating>Email</ion-label>\n      <ion-input [(ngModel)]="profileHospital.HospitalEmailPrimary" type="text"></ion-input>\n    </ion-item>\n  \n    <ion-item>\n      <ion-label floating>Secondary Email</ion-label>\n      <ion-input type="text" [(ngModel)]="secondaryEmail"></ion-input>\n    </ion-item>\n  \n    <button ion-button (click)="addtoList()">Add</button>\n  \n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of profileHospital.HospitalEmailLists">\n          {{list}}\n          <ion-icon class="trashicon" (click)="deleteelement(list)" name="trash" data-ng-if="(profileHospital.HospitalEmailLists.length > 0)"></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n  \n       \n    <ion-item>\n      <ion-label floating>Additional Information</ion-label>\n      <ion-input [(ngModel)]="profileHospital.additionalInformation" type="text"></ion-input>\n    </ion-item>\n    <div padding align="center">\n      <div padding>\n        <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n        <button ion-button type="Cancel">Cancel</button>\n      </div>\n    </div>\n  \n  </ion-content>'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalbasicdetail/hospitalbasicdetail.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], HospitalbasicdetailPage);
    return HospitalbasicdetailPage;
}());

//# sourceMappingURL=hospitalbasicdetail.js.map

/***/ }),

/***/ 249:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HospitalchangepasswordPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the HospitalchangepasswordPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var HospitalchangepasswordPage = /** @class */ (function () {
    function HospitalchangepasswordPage(navCtrl, toastCtrl, api) {
        this.navCtrl = navCtrl;
        this.toastCtrl = toastCtrl;
        this.api = api;
    }
    HospitalchangepasswordPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ChangepasswordPage');
    };
    HospitalchangepasswordPage.prototype.changePasswordBtn = function () {
        if (this.currentPwd == "" || this.currentPwd == undefined) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter current password", this.toastCtrl);
        }
        else if (this.currentPwd.length < 6) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Current passwords must be at least 6 characters long", this.toastCtrl);
        }
        else if (this.newPwd == "" || this.newPwd == undefined) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter new password", this.toastCtrl);
        }
        else if (this.newPwd.length < 6) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("New passwords must be at least 6 characters long", this.toastCtrl);
        }
        else if (this.newPwd == this.currentPwd) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Current password and New password should not be match", this.toastCtrl);
        }
        else if (this.confirmPwd == "" || this.confirmPwd == undefined) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter confirm password", this.toastCtrl);
        }
        else if (this.confirmPwd.length < 6) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Confirm passwords must be at least 6 characters long", this.toastCtrl);
        }
        else if (this.newPwd != this.confirmPwd) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("New password and Confirm password does not match", this.toastCtrl);
        }
        else {
            var param = {
                "oldPassword": this.currentPwd,
                "userPassword": this.newPwd,
            };
            this.callChangePasswordService(param);
        }
    };
    HospitalchangepasswordPage.prototype.callChangePasswordService = function (param) {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].changePassword, param)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
            }
        });
    };
    HospitalchangepasswordPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-hospitalchangepassword',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalchangepassword/hospitalchangepassword.html"*/'<!--\n  Generated template for the MedicalchangepasswordPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  </ion-header>\n  \n  \n  <ion-content padding>\n     \n        <ion-item>\n          <ion-label floating>Current Password</ion-label>\n          <ion-input [(ngModel)]="currentPwd" type="password" ></ion-input>\n        </ion-item>\n        <ion-item>\n          <ion-label floating>New Password</ion-label>\n          <ion-input [(ngModel)]="newPwd" type="password" ></ion-input>\n        </ion-item>\n        <ion-item>\n          <ion-label floating>Confirm Password</ion-label>\n          <ion-input [(ngModel)]="confirmPwd" type="password" ></ion-input>\n        </ion-item>\n  \n        <div padding>\n          <div padding>\n            <button ion-button type="submit" (click)="changePasswordBtn()" block>Change Password</button>\n          </div>\n        </div>\n    \n  \n  </ion-content>'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalchangepassword/hospitalchangepassword.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */], __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */]])
    ], HospitalchangepasswordPage);
    return HospitalchangepasswordPage;
}());

//# sourceMappingURL=hospitalchangepassword.js.map

/***/ }),

/***/ 250:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HospitalprofiledemographicPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the HospitalprofiledemographicPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var HospitalprofiledemographicPage = /** @class */ (function () {
    function HospitalprofiledemographicPage(navCtrl, navParams, api, alertCtrl, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.toastCtrl = toastCtrl;
        this.mobileNumberValidation = /^[0-9]{10}$/;
        this.locationArray = [];
        this.states = [
            {
                title: 'States',
                id: 1
            },
            {
                title: 'Gujarat',
                id: 2
            }
        ];
        this.selectedState = this.states[0];
        this.countries = [
            {
                title: 'Country',
                id: 1
            },
            {
                title: 'India',
                id: 2
            },
            {
                title: 'Greece',
                id: 3
            },
            {
                title: 'Tonga',
                id: 4
            }
        ];
        this.selectedCountry = this.countries[0];
        this.demographicProfile = {
            perMobileList: [],
            addressLine1: '',
            addressLine2: '',
            addressLine3: '',
            zipcode: '',
            state: '',
            country: '',
            phone: ''
        };
    }
    HospitalprofiledemographicPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ProfiledemographicPage');
        this.getAllLocations();
    };
    /**
     * get list of cities
     */
    HospitalprofiledemographicPage.prototype.getAllLocations = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getLocations, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.locationArray = resp;
                _this.selectedLocation = _this.locationArray[0].locationID;
                console.log("location array 0 item", _this.locationArray[0].locationID);
            }
        });
    };
    HospitalprofiledemographicPage.prototype.getDemographicData = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getDemographicData, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.locationArray = resp;
                _this.selectedLocation = _this.locationArray[0].locationID;
                console.log("location array 0 item", _this.locationArray[0].locationID);
                if (resp.perMobileList[0] != null) {
                    _this.demographicProfile.perMobileList = resp.perMobileList;
                }
            }
        });
    };
    HospitalprofiledemographicPage.prototype.updatePatientDemographicProfile = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].updatePatientDemographicProfile, this.demographicProfile).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.demographicProfile = resp;
                console.log("demographicProfile", resp);
            }
        });
    };
    HospitalprofiledemographicPage.prototype.showlocation = function (locationID) {
        console.log("locationid >> " + locationID);
        this.selectedLocation = locationID;
    };
    HospitalprofiledemographicPage.prototype.addAddress = function () {
    };
    HospitalprofiledemographicPage.prototype.submitDetails = function () {
    };
    HospitalprofiledemographicPage.prototype.addtoList = function () {
        if (!this.mobileNumberValidation.test(this.secondaryPhone)) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid phone number", this.toastCtrl);
            return;
        }
        this.demographicProfile.perMobileList.push(this.secondaryPhone);
        this.secondaryPhone = '';
    };
    HospitalprofiledemographicPage.prototype.deleteelement = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this phone number?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.demographicProfile.perMobileList.indexOf(list);
                        if (index > -1) {
                            _this.demographicProfile.perMobileList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalprofiledemographicPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-hospitalprofiledemographic',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalprofiledemographic/hospitalprofiledemographic.html"*/'<!--\n  Generated template for the ProfiledemographicPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  </ion-header>\n  \n  \n  <ion-content padding>\n  \n    <ion-item>\n      <ion-label floating>Address Line 1</ion-label>\n      <ion-input [(ngModel)]="demographicProfile.addressLine1" type="text"></ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-label floating>Address Line 2</ion-label>\n      <ion-input [(ngModel)]="demographicProfile.addressLine2" type="text"></ion-input>\n    </ion-item>\n  \n    <ion-item>\n      <ion-label floating>Address Line 3</ion-label>\n      <ion-input [(ngModel)]="demographicProfile.addressLine3" type="text"></ion-input>\n    </ion-item>\n  \n    \n  \n    <ion-item>\n      <ion-label floating>ZipCode</ion-label>\n      <ion-input [(ngModel)]="demographicProfile.zipcode" type="text"></ion-input>\n    </ion-item>\n  \n    <ion-item>\n      <ion-select [(ngModel)]="selectedCountry">\n        <ion-label floating>Select Country</ion-label>\n        <ion-option *ngFor="let country of countries;" [value]="country">{{country.title}}</ion-option>\n      </ion-select>\n    </ion-item>\n  \n    <ion-item>\n      <ion-select [(ngModel)]="selectedState">\n        <ion-label floating>Select State</ion-label>\n        <ion-option *ngFor="let state of states;" [value]="state">{{state.title}}</ion-option>\n      </ion-select>\n    </ion-item>\n  \n    <ion-item>\n      <ion-select [(ngModel)]="selectedLocation" (ionChange)="showlocation($event)">\n        <ion-label floating>Select Location</ion-label>\n        <ion-option *ngFor="let location of locationArray; let idx = index" selected="{{(idx==0).locationID}}" [value]="location.locationID">{{location.city}}</ion-option>\n      </ion-select>\n    </ion-item>\n    \n    <div padding align="center">\n      <button ion-button type="submit" (click)="addAddress()" block>Add New Address</button>\n    </div>\n  \n    <ion-item>\n      <ion-label floating>Phone</ion-label>\n      <ion-input [(ngModel)]="demographicProfile.phone" type="number"></ion-input>\n    </ion-item>\n  \n  \n    <ion-item>\n        <ion-label floating>Secondary Phone</ion-label>\n        <ion-input type="number" [(ngModel)]="secondaryPhone"></ion-input>\n      </ion-item>\n    \n      <button ion-button (click)="addtoList()">Add</button>\n    \n      <ion-item>\n        <ion-list>\n          <ion-item *ngFor="let list of demographicProfile.perMobileList">\n            {{list}}\n            <ion-icon class="trashicon" (click)="deleteelement(list)" name="trash" data-ng-if="(demographicProfile.perMobileList.length > 0)"></ion-icon>\n          </ion-item>\n        </ion-list>\n      </ion-item>\n  \n    <div padding align="center">\n      <div padding>\n        <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n        <button ion-button type="Cancel">Cancel</button>\n      </div>\n    </div>\n  </ion-content>'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalprofiledemographic/hospitalprofiledemographic.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], HospitalprofiledemographicPage);
    return HospitalprofiledemographicPage;
}());

//# sourceMappingURL=hospitalprofiledemographic.js.map

/***/ }),

/***/ 251:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HospitalprofileprofessionalPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the HospitalprofileprofessionalPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var HospitalprofileprofessionalPage = /** @class */ (function () {
    function HospitalprofileprofessionalPage(navCtrl, navParams, api, alertCtrl, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.toastCtrl = toastCtrl;
        this.associatedDepartment = "";
        this.associatedLaboratory = "";
        this.associatedDoctor = "";
        this.associatedMedical = "";
        this.associatedDisease = "";
        this.hospitalProfile = {
            associatedDepartmentList: [],
            associatedLaboratoryList: [],
            associatedDoctorList: [],
            associatedMedicalList: [],
            associatedDiseaseList: [],
        };
    }
    HospitalprofileprofessionalPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ProfiledemographicPage');
    };
    HospitalprofileprofessionalPage.prototype.submitDetails = function () {
    };
    HospitalprofileprofessionalPage.prototype.addtoListDepartment = function () {
        if (this.associatedDepartment.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter Department name", this.toastCtrl);
            return;
        }
        this.hospitalProfile.associatedDepartmentList.push(this.associatedDepartment);
        this.associatedDepartment = '';
    };
    HospitalprofileprofessionalPage.prototype.deleteelementDepartment = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Department?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.hospitalProfile.associatedDepartmentList.indexOf(list);
                        if (index > -1) {
                            _this.hospitalProfile.associatedDepartmentList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalprofileprofessionalPage.prototype.addtoListLaboratory = function () {
        if (this.associatedLaboratory.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter Laboratory name", this.toastCtrl);
            return;
        }
        this.hospitalProfile.associatedLaboratoryList.push(this.associatedLaboratory);
        this.associatedLaboratory = '';
    };
    HospitalprofileprofessionalPage.prototype.deleteelementLaboratory = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Laboratory?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.hospitalProfile.associatedLaboratoryList.indexOf(list);
                        if (index > -1) {
                            _this.hospitalProfile.associatedLaboratoryList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalprofileprofessionalPage.prototype.addtoListDisease = function () {
        if (this.associatedDisease.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter Disease name", this.toastCtrl);
            return;
        }
        this.hospitalProfile.associatedDiseaseList.push(this.associatedDisease);
        this.associatedDisease = '';
    };
    HospitalprofileprofessionalPage.prototype.deleteelementDisease = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Disease?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.hospitalProfile.associatedDiseaseList.indexOf(list);
                        if (index > -1) {
                            _this.hospitalProfile.associatedDiseaseList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalprofileprofessionalPage.prototype.addtoListMedical = function () {
        if (this.associatedMedical.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter Medical name", this.toastCtrl);
            return;
        }
        this.hospitalProfile.associatedMedicalList.push(this.associatedMedical);
        this.associatedMedical = '';
    };
    HospitalprofileprofessionalPage.prototype.deleteelementMedical = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Medical?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.hospitalProfile.associatedMedicalList.indexOf(list);
                        if (index > -1) {
                            _this.hospitalProfile.associatedMedicalList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalprofileprofessionalPage.prototype.addtoListDoctor = function () {
        if (this.associatedDoctor.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter Doctor name", this.toastCtrl);
            return;
        }
        this.hospitalProfile.associatedDoctorList.push(this.associatedDoctor);
        this.associatedDoctor = '';
    };
    HospitalprofileprofessionalPage.prototype.deleteelementDoctor = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Doctor?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.hospitalProfile.associatedDoctorList.indexOf(list);
                        if (index > -1) {
                            _this.hospitalProfile.associatedDoctorList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalprofileprofessionalPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-hospitalprofileprofessional',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalprofileprofessional/hospitalprofileprofessional.html"*/'<!--\n  Generated template for the ProfiledemographicPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  </ion-header>\n  \n  \n  <ion-content padding>\n  \n    \n  <ion-item>\n        <ion-label floating>Associated Department</ion-label>\n        <ion-input type="text" [(ngModel)]="associatedDepartment"></ion-input>\n      </ion-item>\n    \n      <button ion-button (click)="addtoListDepartment()">Add Department</button>\n    \n      <ion-item>\n        <ion-list>\n          <ion-item *ngFor="let list of hospitalProfile.associatedDepartmentList">\n            {{list}}\n            <ion-icon class="trashicon" (click)="deleteelementDepartment(list)" name="trash" data-ng-if="(hospitalProfile.associatedDepartmentList.length > 0)"></ion-icon>\n          </ion-item>\n        </ion-list>\n      </ion-item>\n  \n  \n      <ion-item>\n        <ion-label floating>Associated Doctor</ion-label>\n        <ion-input type="text" [(ngModel)]="associatedDoctor"></ion-input>\n      </ion-item>\n    \n      <button ion-button (click)="addtoListDoctor()">Add Doctor</button>\n    \n      <ion-item>\n        <ion-list>\n          <ion-item *ngFor="let list of hospitalProfile.associatedDoctorList">\n            {{list}}\n            <ion-icon class="trashicon" (click)="deleteelementDoctor(list)" name="trash" data-ng-if="(hospitalProfile.associatedDoctorList.length > 0)"></ion-icon>\n          </ion-item>\n        </ion-list>\n      </ion-item>\n  \n  \n      <ion-item>\n        <ion-label floating>Associated Laboratory</ion-label>\n        <ion-input type="text" [(ngModel)]="associatedLaboratory"></ion-input>\n      </ion-item>\n    \n      <button ion-button (click)="addtoListLaboratory()">Add Laboratory</button>\n    \n      <ion-item>\n        <ion-list>\n          <ion-item *ngFor="let list of hospitalProfile.associatedLaboratoryList">\n            {{list}}\n            <ion-icon class="trashicon" (click)="deleteelementLaboratory(list)" name="trash" data-ng-if="(hospitalProfile.associatedLaboratoryList.length > 0)"></ion-icon>\n          </ion-item>\n        </ion-list>\n      </ion-item>\n  \n      <ion-item>\n        <ion-label floating>Associated Medical store</ion-label>\n        <ion-input type="text" [(ngModel)]="associatedMedical"></ion-input>\n      </ion-item>\n    \n      <button ion-button (click)="addtoListMedical()">Add Medical store </button>\n    \n      <ion-item>\n        <ion-list>\n          <ion-item *ngFor="let list of hospitalProfile.associatedMedicalList">\n            {{list}}\n            <ion-icon class="trashicon" (click)="deleteelementMedical(list)" name="trash" data-ng-if="(hospitalProfile.associatedMedicalList.length > 0)"></ion-icon>\n          </ion-item>\n        </ion-list>\n      </ion-item>\n  \n      <ion-item>\n        <ion-label floating>Associated Disease</ion-label>\n        <ion-input type="text" [(ngModel)]="associatedDisease"></ion-input>\n      </ion-item>\n    \n      <button ion-button (click)="addtoListDisease()">Add Disease </button>\n    \n      <ion-item>\n        <ion-list>\n          <ion-item *ngFor="let list of hospitalProfile.associatedDiseaseList">\n            {{list}}\n            <ion-icon class="trashicon" (click)="deleteelementDisease(list)" name="trash" data-ng-if="(hospitalProfile.associatedDiseaseList.length > 0)"></ion-icon>\n          </ion-item>\n        </ion-list>\n      </ion-item>\n      \n    <div padding align="center">\n      <div padding>\n        <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n        <button ion-button type="Cancel">Cancel</button>\n      </div>\n    </div>\n  </ion-content>'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalprofileprofessional/hospitalprofileprofessional.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], HospitalprofileprofessionalPage);
    return HospitalprofileprofessionalPage;
}());

//# sourceMappingURL=hospitalprofileprofessional.js.map

/***/ }),

/***/ 252:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InsurancebasicdetailPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var InsurancebasicdetailPage = /** @class */ (function () {
    function InsurancebasicdetailPage(navCtrl, navParams, camera, actionSheetCrtl, tostCrtl, api, alertctrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.camera = camera;
        this.actionSheetCrtl = actionSheetCrtl;
        this.tostCrtl = tostCrtl;
        this.api = api;
        this.alertctrl = alertctrl;
        this.emailValidation = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\",this.toastCtrl);)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        this.nameValidation = /[^a-zA-Z]/;
        this.profileInsurance = {
            insuranceEmailLists: [],
            insuranceID: "",
            insuranceCompanyName: "",
            insuranceEmailPrimary: ""
        };
    }
    InsurancebasicdetailPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad PatientprofileInsurancePage");
        //  this.getPersonalData()
    };
    InsurancebasicdetailPage.prototype.submitDetails = function () {
        // if (this.profileInsurance.username.length == 0) {
        //   showToast("Please Enter User name", this.toastCtrl);
        //   return
        // }
        // if (this.nameValidation.test(this.profileInsurance.userName)) {
        //   showToast("Please Enter valid username", this.toastCtrl);
        //   return
        // }
        if (this.profileInsurance.insuranceCompanyName.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Insurance companyname", this.tostCrtl);
            return;
        }
        else if (this.nameValidation.test(this.profileInsurance.insuranceCompanyName)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Insurance companyname", this.tostCrtl);
            return;
        }
        else if (this.profileInsurance.insuranceEmailPrimary.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter email", this.tostCrtl);
            return;
        }
        else if (!this.emailValidation.test(this.profileInsurance.insuranceEmailPrimary)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Email Address", this.tostCrtl);
            return;
        }
        //this.callWebserviceUpdatePersonalDetails()
    };
    InsurancebasicdetailPage.prototype.getPersonalData = function () {
        var _this = this;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getPersonalPatientProfile, "")
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("getPersonalData >> ", resp);
                _this.profileInsurance.insuranceID = resp.insuranceID;
                _this.profileInsurance.insuranceCompanyName = resp.insuranceName;
                _this.profileInsurance.insuranceEmailPrimary =
                    resp.insuranceEmailPrimary;
                if (resp.insuranceEmailLists[0] != null &&
                    resp.insuranceEmailLists[0] != "[]") {
                    _this.profileInsurance.insuranceEmailLists =
                        resp.insuranceEmailLists;
                }
            }
        });
    };
    InsurancebasicdetailPage.prototype.callWebserviceUpdatePersonalDetails = function () {
        var _this = this;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].updatePersonalPatientProfile, this.profileInsurance)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.tostCrtl);
            }
        });
    };
    InsurancebasicdetailPage.prototype.addtoList = function () {
        if (!this.emailValidation.test(this.secondaryEmail)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Email Address", this.tostCrtl);
            return;
        }
        this.profileInsurance.insuranceEmailLists.push(this.secondaryEmail);
        this.secondaryEmail = "";
    };
    InsurancebasicdetailPage.prototype.deleteelement = function (list) {
        var _this = this;
        var alert = this.alertctrl.create({
            title: "Confirm Delete",
            message: "Are you sure, you want to delete this email?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "OK",
                    handler: function () {
                        var index = _this.profileInsurance.insuranceEmailLists.indexOf(list);
                        if (index > -1) {
                            _this.profileInsurance.insuranceEmailLists.splice(index, 1);
                        }
                        console.log("Item deleted");
                    }
                }
            ]
        });
        alert.present();
    };
    InsurancebasicdetailPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-insurancebasicdetail",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insurancebasicdetail/insurancebasicdetail.html"*/'<!--\n  Generated template for the PatientprofilepersonalPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n</ion-header>\n\n\n<ion-content padding>\n\n  <ion-item>\n    <ion-label floating>Insurance Company Name</ion-label>\n    <ion-input [(ngModel)]="profileInsurance.insuranceCompanyName" type="text"></ion-input>\n  </ion-item>\n \n\n  <ion-item>\n    <ion-label floating>Email</ion-label>\n    <ion-input [(ngModel)]="profileInsurance.insuranceEmailPrimary" type="text"></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label floating>Secondary Email</ion-label>\n    <ion-input type="text" [(ngModel)]="secondaryEmail"></ion-input>\n  </ion-item>\n\n  <button ion-button (click)="addtoList()">Add</button>\n\n  <ion-item>\n    <ion-list>\n      <ion-item *ngFor="let list of profileInsurance.insuranceEmailLists">\n        {{list}}\n        <ion-icon class="trashicon" (click)="deleteelement(list)" name="trash" data-ng-if="(profileInsurance.insuranceEmailLists.length > 0)"></ion-icon>\n      </ion-item>\n    </ion-list>\n  </ion-item>\n\n     \n  <ion-item>\n    <ion-label floating>Additional Information</ion-label>\n    <ion-input [(ngModel)]="profileInsurance.additionalInformation" type="text"></ion-input>\n  </ion-item>\n  <div padding align="center">\n    <div padding>\n      <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n      <button ion-button type="Cancel">Cancel</button>\n    </div>\n  </div>\n\n</ion-content>'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insurancebasicdetail/insurancebasicdetail.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], InsurancebasicdetailPage);
    return InsurancebasicdetailPage;
}());

//# sourceMappingURL=insurancebasicdetail.js.map

/***/ }),

/***/ 253:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InsurancechangepasswordPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the InsurancechangepasswordPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var InsurancechangepasswordPage = /** @class */ (function () {
    function InsurancechangepasswordPage(navCtrl, toastCtrl, api) {
        this.navCtrl = navCtrl;
        this.toastCtrl = toastCtrl;
        this.api = api;
    }
    InsurancechangepasswordPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ChangepasswordPage');
    };
    InsurancechangepasswordPage.prototype.changePasswordBtn = function () {
        if (this.currentPwd == "" || this.currentPwd == undefined) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter current password", this.toastCtrl);
        }
        else if (this.currentPwd.length < 6) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Current passwords must be at least 6 characters long", this.toastCtrl);
        }
        else if (this.newPwd == "" || this.newPwd == undefined) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter new password", this.toastCtrl);
        }
        else if (this.newPwd.length < 6) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("New passwords must be at least 6 characters long", this.toastCtrl);
        }
        else if (this.newPwd == this.currentPwd) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Current password and New password should not be match", this.toastCtrl);
        }
        else if (this.confirmPwd == "" || this.confirmPwd == undefined) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter confirm password", this.toastCtrl);
        }
        else if (this.confirmPwd.length < 6) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Confirm passwords must be at least 6 characters long", this.toastCtrl);
        }
        else if (this.newPwd != this.confirmPwd) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("New password and Confirm password does not match", this.toastCtrl);
        }
        else {
            var param = {
                "oldPassword": this.currentPwd,
                "userPassword": this.newPwd,
            };
            this.callChangePasswordService(param);
        }
    };
    InsurancechangepasswordPage.prototype.callChangePasswordService = function (param) {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].changePassword, param)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
            }
        });
    };
    InsurancechangepasswordPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-insurancechangepassword',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insurancechangepassword/insurancechangepassword.html"*/'<!--\n  Generated template for the MedicalchangepasswordPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n</ion-header>\n\n\n<ion-content padding>\n   \n      <ion-item>\n        <ion-label floating>Current Password</ion-label>\n        <ion-input [(ngModel)]="currentPwd" type="password" ></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label floating>New Password</ion-label>\n        <ion-input [(ngModel)]="newPwd" type="password" ></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label floating>Confirm Password</ion-label>\n        <ion-input [(ngModel)]="confirmPwd" type="password" ></ion-input>\n      </ion-item>\n\n      <div padding>\n        <div padding>\n          <button ion-button type="submit" (click)="changePasswordBtn()" block>Change Password</button>\n        </div>\n      </div>\n  \n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insurancechangepassword/insurancechangepassword.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */], __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */]])
    ], InsurancechangepasswordPage);
    return InsurancechangepasswordPage;
}());

//# sourceMappingURL=insurancechangepassword.js.map

/***/ }),

/***/ 254:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InsuranceprofiledemographicPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the InsuranceprofiledemographicPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var InsuranceprofiledemographicPage = /** @class */ (function () {
    function InsuranceprofiledemographicPage(navCtrl, navParams, api, alertCtrl, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.toastCtrl = toastCtrl;
        this.mobileNumberValidation = /^[0-9]{10}$/;
        this.locationArray = [];
        this.states = [
            {
                title: 'States',
                id: 1
            },
            {
                title: 'Gujarat',
                id: 2
            }
        ];
        this.selectedState = this.states[0];
        this.countries = [
            {
                title: 'Country',
                id: 1
            },
            {
                title: 'India',
                id: 2
            },
            {
                title: 'Greece',
                id: 3
            },
            {
                title: 'Tonga',
                id: 4
            }
        ];
        this.selectedCountry = this.countries[0];
        this.demographicProfile = {
            perMobileList: [],
            addressLine1: '',
            addressLine2: '',
            addressLine3: '',
            zipcode: '',
            state: '',
            country: '',
            phone: ''
        };
    }
    InsuranceprofiledemographicPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ProfiledemographicPage');
        this.getAllLocations();
    };
    /**
     * get list of cities
     */
    InsuranceprofiledemographicPage.prototype.getAllLocations = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getLocations, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.locationArray = resp;
                _this.selectedLocation = _this.locationArray[0].locationID;
                console.log("location array 0 item", _this.locationArray[0].locationID);
            }
        });
    };
    InsuranceprofiledemographicPage.prototype.getDemographicData = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getDemographicData, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.locationArray = resp;
                _this.selectedLocation = _this.locationArray[0].locationID;
                console.log("location array 0 item", _this.locationArray[0].locationID);
                if (resp.perMobileList[0] != null) {
                    _this.demographicProfile.perMobileList = resp.perMobileList;
                }
            }
        });
    };
    InsuranceprofiledemographicPage.prototype.updatePatientDemographicProfile = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].updatePatientDemographicProfile, this.demographicProfile).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.demographicProfile = resp;
                console.log("demographicProfile", resp);
            }
        });
    };
    InsuranceprofiledemographicPage.prototype.showlocation = function (locationID) {
        console.log("locationid >> " + locationID);
        this.selectedLocation = locationID;
    };
    InsuranceprofiledemographicPage.prototype.addAddress = function () {
    };
    InsuranceprofiledemographicPage.prototype.submitDetails = function () {
    };
    InsuranceprofiledemographicPage.prototype.addtoList = function () {
        if (!this.mobileNumberValidation.test(this.secondaryPhone)) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid phone number", this.toastCtrl);
            return;
        }
        this.demographicProfile.perMobileList.push(this.secondaryPhone);
        this.secondaryPhone = '';
    };
    InsuranceprofiledemographicPage.prototype.deleteelement = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this phone number?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.demographicProfile.perMobileList.indexOf(list);
                        if (index > -1) {
                            _this.demographicProfile.perMobileList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceprofiledemographicPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-insuranceprofiledemographic',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceprofiledemographic/insuranceprofiledemographic.html"*/'<!--\n  Generated template for the ProfiledemographicPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n</ion-header>\n\n\n<ion-content padding>\n\n  <ion-item>\n    <ion-label floating>Address Line 1</ion-label>\n    <ion-input [(ngModel)]="demographicProfile.addressLine1" type="text"></ion-input>\n  </ion-item>\n  <ion-item>\n    <ion-label floating>Address Line 2</ion-label>\n    <ion-input [(ngModel)]="demographicProfile.addressLine2" type="text"></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label floating>Address Line 3</ion-label>\n    <ion-input [(ngModel)]="demographicProfile.addressLine3" type="text"></ion-input>\n  </ion-item>\n\n  \n\n  <ion-item>\n    <ion-label floating>ZipCode</ion-label>\n    <ion-input [(ngModel)]="demographicProfile.zipcode" type="text"></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-select [(ngModel)]="selectedCountry">\n      <ion-label floating>Select Country</ion-label>\n      <ion-option *ngFor="let country of countries;" [value]="country">{{country.title}}</ion-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-item>\n    <ion-select [(ngModel)]="selectedState">\n      <ion-label floating>Select State</ion-label>\n      <ion-option *ngFor="let state of states;" [value]="state">{{state.title}}</ion-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-item>\n    <ion-select [(ngModel)]="selectedLocation" (ionChange)="showlocation($event)">\n      <ion-label floating>Select Location</ion-label>\n      <ion-option *ngFor="let location of locationArray; let idx = index" selected="{{(idx==0).locationID}}" [value]="location.locationID">{{location.city}}</ion-option>\n    </ion-select>\n  </ion-item>\n  \n  <div padding align="center">\n    <button ion-button type="submit" (click)="addAddress()" block>Add New Address</button>\n  </div>\n\n  <ion-item>\n    <ion-label floating>Phone</ion-label>\n    <ion-input [(ngModel)]="demographicProfile.phone" type="number"></ion-input>\n  </ion-item>\n\n\n  <ion-item>\n      <ion-label floating>Secondary Phone</ion-label>\n      <ion-input type="number" [(ngModel)]="secondaryPhone"></ion-input>\n    </ion-item>\n  \n    <button ion-button (click)="addtoList()">Add</button>\n  \n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of demographicProfile.perMobileList">\n          {{list}}\n          <ion-icon class="trashicon" (click)="deleteelement(list)" name="trash" data-ng-if="(demographicProfile.perMobileList.length > 0)"></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n\n  <div padding align="center">\n    <div padding>\n      <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n      <button ion-button type="Cancel">Cancel</button>\n    </div>\n  </div>\n</ion-content>'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceprofiledemographic/insuranceprofiledemographic.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], InsuranceprofiledemographicPage);
    return InsuranceprofiledemographicPage;
}());

//# sourceMappingURL=insuranceprofiledemographic.js.map

/***/ }),

/***/ 255:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InsuranceprofileprofessionalPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the InsuranceprofileprofessionalPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var InsuranceprofileprofessionalPage = /** @class */ (function () {
    function InsuranceprofileprofessionalPage(navCtrl, navParams, api, alertCtrl, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.toastCtrl = toastCtrl;
        this.associatedDepartment = "";
        this.associatedLaboratory = "";
        this.associatedDoctor = "";
        this.associatedMedical = "";
        this.associatedDisease = "";
        this.insuranceProfile = {
            associatedDepartmentList: [],
            associatedLaboratoryList: [],
            associatedDoctorList: [],
            associatedMedicalList: [],
            associatedDiseaseList: [],
        };
    }
    InsuranceprofileprofessionalPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ProfiledemographicPage');
    };
    InsuranceprofileprofessionalPage.prototype.submitDetails = function () {
    };
    InsuranceprofileprofessionalPage.prototype.addtoListDepartment = function () {
        if (this.associatedDepartment.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter Department name", this.toastCtrl);
            return;
        }
        this.insuranceProfile.associatedDepartmentList.push(this.associatedDepartment);
        this.associatedDepartment = '';
    };
    InsuranceprofileprofessionalPage.prototype.deleteelementDepartment = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Department?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.insuranceProfile.associatedDepartmentList.indexOf(list);
                        if (index > -1) {
                            _this.insuranceProfile.associatedDepartmentList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceprofileprofessionalPage.prototype.addtoListLaboratory = function () {
        if (this.associatedLaboratory.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter Laboratory name", this.toastCtrl);
            return;
        }
        this.insuranceProfile.associatedLaboratoryList.push(this.associatedLaboratory);
        this.associatedLaboratory = '';
    };
    InsuranceprofileprofessionalPage.prototype.deleteelementLaboratory = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Laboratory?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.insuranceProfile.associatedLaboratoryList.indexOf(list);
                        if (index > -1) {
                            _this.insuranceProfile.associatedLaboratoryList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceprofileprofessionalPage.prototype.addtoListDisease = function () {
        if (this.associatedDisease.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter Disease name", this.toastCtrl);
            return;
        }
        this.insuranceProfile.associatedDiseaseList.push(this.associatedDisease);
        this.associatedDisease = '';
    };
    InsuranceprofileprofessionalPage.prototype.deleteelementDisease = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Disease?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.insuranceProfile.associatedDiseaseList.indexOf(list);
                        if (index > -1) {
                            _this.insuranceProfile.associatedDiseaseList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceprofileprofessionalPage.prototype.addtoListMedical = function () {
        if (this.associatedMedical.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter Medical name", this.toastCtrl);
            return;
        }
        this.insuranceProfile.associatedMedicalList.push(this.associatedMedical);
        this.associatedMedical = '';
    };
    InsuranceprofileprofessionalPage.prototype.deleteelementMedical = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Medical?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.insuranceProfile.associatedMedicalList.indexOf(list);
                        if (index > -1) {
                            _this.insuranceProfile.associatedMedicalList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceprofileprofessionalPage.prototype.addtoListDoctor = function () {
        if (this.associatedDoctor.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter Doctor name", this.toastCtrl);
            return;
        }
        this.insuranceProfile.associatedDoctorList.push(this.associatedDoctor);
        this.associatedDoctor = '';
    };
    InsuranceprofileprofessionalPage.prototype.deleteelementDoctor = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Doctor?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.insuranceProfile.associatedDoctorList.indexOf(list);
                        if (index > -1) {
                            _this.insuranceProfile.associatedDoctorList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceprofileprofessionalPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-insuranceprofileprofessional',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceprofileprofessional/insuranceprofileprofessional.html"*/'<!--\n  Generated template for the ProfiledemographicPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n</ion-header>\n\n\n<ion-content padding>\n\n  \n<ion-item>\n      <ion-label floating>Associated Department</ion-label>\n      <ion-input type="text" [(ngModel)]="associatedDepartment"></ion-input>\n    </ion-item>\n  \n    <button ion-button (click)="addtoListDepartment()">Add Department</button>\n  \n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of insuranceProfile.associatedDepartmentList">\n          {{list}}\n          <ion-icon class="trashicon" (click)="deleteelementDepartment(list)" name="trash" data-ng-if="(insuranceProfile.associatedDepartmentList.length > 0)"></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n\n\n    <ion-item>\n      <ion-label floating>Associated Doctor</ion-label>\n      <ion-input type="text" [(ngModel)]="associatedDoctor"></ion-input>\n    </ion-item>\n  \n    <button ion-button (click)="addtoListDoctor()">Add Doctor</button>\n  \n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of insuranceProfile.associatedDoctorList">\n          {{list}}\n          <ion-icon class="trashicon" (click)="deleteelementDoctor(list)" name="trash" data-ng-if="(insuranceProfile.associatedDoctorList.length > 0)"></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n\n\n    <ion-item>\n      <ion-label floating>Associated Laboratory</ion-label>\n      <ion-input type="text" [(ngModel)]="associatedLaboratory"></ion-input>\n    </ion-item>\n  \n    <button ion-button (click)="addtoListLaboratory()">Add Laboratory</button>\n  \n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of insuranceProfile.associatedLaboratoryList">\n          {{list}}\n          <ion-icon class="trashicon" (click)="deleteelementLaboratory(list)" name="trash" data-ng-if="(insuranceProfile.associatedLaboratoryList.length > 0)"></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n\n    <ion-item>\n      <ion-label floating>Associated Medical store</ion-label>\n      <ion-input type="text" [(ngModel)]="associatedMedical"></ion-input>\n    </ion-item>\n  \n    <button ion-button (click)="addtoListMedical()">Add Medical store </button>\n  \n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of insuranceProfile.associatedMedicalList">\n          {{list}}\n          <ion-icon class="trashicon" (click)="deleteelementMedical(list)" name="trash" data-ng-if="(insuranceProfile.associatedMedicalList.length > 0)"></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n\n    <ion-item>\n      <ion-label floating>Associated Disease</ion-label>\n      <ion-input type="text" [(ngModel)]="associatedDisease"></ion-input>\n    </ion-item>\n  \n    <button ion-button (click)="addtoListDisease()">Add Disease </button>\n  \n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of insuranceProfile.associatedDiseaseList">\n          {{list}}\n          <ion-icon class="trashicon" (click)="deleteelementDisease(list)" name="trash" data-ng-if="(insuranceProfile.associatedDiseaseList.length > 0)"></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n    \n  <div padding align="center">\n    <div padding>\n      <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n      <button ion-button type="Cancel">Cancel</button>\n    </div>\n  </div>\n</ion-content>'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceprofileprofessional/insuranceprofileprofessional.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], InsuranceprofileprofessionalPage);
    return InsuranceprofileprofessionalPage;
}());

//# sourceMappingURL=insuranceprofileprofessional.js.map

/***/ }),

/***/ 256:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddnewreportPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the AddnewreportPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddnewreportPage = /** @class */ (function () {
    function AddnewreportPage(navCtrl, navParams, api, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.toastCtrl = toastCtrl;
        this.reporttypeId = "";
        this.category = "";
        this.reportname = "";
    }
    AddnewreportPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad AddnewreportPage");
    };
    AddnewreportPage.prototype.callAddNewReport = function () {
        var _this = this;
        if (this.reporttypeId.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select facility", this.toastCtrl);
            return;
        }
        if (this.category.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Location", this.toastCtrl);
            return;
        }
        if (this.reportname.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Speciality", this.toastCtrl);
            return;
        }
        var data = JSON.stringify({
            labReportType: this.reporttypeId.trim(),
            lrl1Category: this.category,
            lrl1Name: this.reportname
        });
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addNewReport, data).then(function (resp) {
            if (resp.status === 500) {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("" + resp.message, _this.toastCtrl);
                _this.navCtrl.pop();
            }
        });
        // this.makePayment();
        // this.makePaymentPlugin();
    };
    AddnewreportPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-addnewreport",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/addnewreport/addnewreport.html"*/'<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Add New Report</ion-title>\n    <ion-buttons left>\n      <button ion-button icon-only>\n        <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <div class="cmn-inr-form">\n    <ion-list>\n      <ion-item>\n        <ion-label color="" floating>Report Type</ion-label>\n        <ion-select [(ngModel)]="reporttypeId">\n          <ion-option>\n            Pathology\n          </ion-option>\n          <ion-option>\n            RadioImaging\n          </ion-option>\n        </ion-select>\n      </ion-item>\n      <ion-item>\n        <ion-label color="" floating>Category</ion-label>\n\n        <ion-input\n          type="text"\n          name="Category"\n          [(ngModel)]="category"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="" floating>Report Name</ion-label>\n\n        <ion-input\n          type="text"\n          name="Report Name"\n          [(ngModel)]="reportname"\n        ></ion-input>\n      </ion-item>\n\n      <div class="cmn-ftr-btn">\n        <button\n          ion-button\n          class="cmn-btn-styl prpl-btn"\n          (click)="callAddNewReport()"\n          block\n        >\n          Save\n        </button>\n      </div>\n    </ion-list>\n  </div></ion-content\n>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/addnewreport/addnewreport.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], AddnewreportPage);
    return AddnewreportPage;
}());

//# sourceMappingURL=addnewreport.js.map

/***/ }),

/***/ 257:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddreportfeesPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__addnewreport_addnewreport__ = __webpack_require__(256);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the AddreportfeesPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddreportfeesPage = /** @class */ (function () {
    function AddreportfeesPage(navCtrl, navParams, api, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.toastCtrl = toastCtrl;
        this.AllReportList = [];
        this.labReportLevel1ID = "";
        this.Cost = "";
    }
    AddreportfeesPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad AddreportfeesPage");
        this.WsGetAllLab1ReportByLab();
    };
    AddreportfeesPage.prototype.callAddAppointmentApi = function () {
        var _this = this;
        if (this.labReportLevel1ID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Report", this.toastCtrl);
            return;
        }
        if (this.Cost.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Cost", this.toastCtrl);
            return;
        }
        var data = JSON.stringify({
            labReportLevel1ID: this.labReportLevel1ID,
            costperreport: this.Cost
        });
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addReportFees, data).then(function (resp) {
            if (resp.status === 500) {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("" + resp.message, _this.toastCtrl);
                _this.navCtrl.pop();
            }
        });
    };
    AddreportfeesPage.prototype.WsGetAllLab1ReportByLab = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLab1ReportByLab, {})
            .then(function (resp) {
            // let Temparray: any = resp;
            // this.AllReportList = Temparray.data;
            // console.log("this.AllReportList" + JSON.stringify(this.AllReportList));
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.AllReportList = resp.data;
                // this.labReportLevel1ID = this.AllReportList[0].labReportLevel1ID;
            }
            // this.WsGetAllDiagnosis();
        });
    };
    AddreportfeesPage.prototype.addNewReport = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__addnewreport_addnewreport__["a" /* AddnewreportPage */]);
    };
    AddreportfeesPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-addreportfees",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/addreportfees/addreportfees.html"*/'<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Add Report Cost</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <div class="cmn-inr-form">\n    <ion-list>\n      <ion-item>\n        <ion-label color="" floating>Report Name </ion-label>\n        <ion-select\n          [(ngModel)]="labReportLevel1ID"\n          [disabled]="AllReportList.length == 0"\n        >\n          <ion-option\n            *ngFor="let name of AllReportList; let idx = index"\n            [value]="name.labReportLevel1ID"\n            >{{ name.lrl1Name }}</ion-option\n          >\n        </ion-select>\n      </ion-item>\n      <ion-item>\n        <ion-label color="" floating>Cost</ion-label>\n\n        <ion-input type="number" name="Cost" [(ngModel)]="Cost"></ion-input>\n      </ion-item>\n\n      <div class="form-button bg-gray pt-25 text-center">\n        <button\n          type="button"\n          class="cmn-thm-btn mr-25"\n          (click)="callAddAppointmentApi()"\n        >\n          Save\n        </button>\n        <button type="button" class="cmn-wht-btn" (click)="addNewReport()">\n          Add New Report\n        </button>\n      </div>\n\n      <!-- <div class="cmn-ftr-btn">\n        <button\n          (click)="callAddAppointmentApi()"\n          ion-button\n          class="cmn-btn-styl prpl-btn"\n          block\n        >\n          Save\n        </button>\n      </div>\n\n      <div class="cmn-fifty-btn">\n        <button\n          (click)="addNewReport()"\n          ion-button\n          class="cmn-btn-styl prpl-btn"\n          block\n        >\n          Add new Report\n        </button>\n      </div> -->\n\n      <!-- <ion-fab bottom right>\n        <button style="background-color:#4633BE;" ion-fab (click)="addItem()">\n          <ion-icon name="add"></ion-icon>\n        </button>\n      </ion-fab> -->\n    </ion-list>\n  </div></ion-content\n>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/addreportfees/addreportfees.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], AddreportfeesPage);
    return AddreportfeesPage;
}());

//# sourceMappingURL=addreportfees.js.map

/***/ }),

/***/ 258:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditreportfeesPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the AddreportfeesPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditreportfeesPage = /** @class */ (function () {
    function EditreportfeesPage(navCtrl, navParams, api, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.toastCtrl = toastCtrl;
        this.AllReportList = [];
        this.labReportLevel1ID = "";
        this.Cost = "";
        this.editID = "";
        this.lrl1Name = "";
    }
    EditreportfeesPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad AddreportfeesPage");
        this.editID = this.navParams.get("id");
        this.WsGetAllLab1ReportByLab();
        this.FatchItem();
    };
    EditreportfeesPage.prototype.callAddAppointmentApi = function () {
        var _this = this;
        if (this.labReportLevel1ID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Report", this.toastCtrl);
            return;
        }
        if (this.Cost.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Cost", this.toastCtrl);
            return;
        }
        var data = JSON.stringify({
            labReportLevel1ID: this.labReportLevel1ID,
            costperreport: this.Cost,
            reportId: this.editID
        });
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addReportFees, data).then(function (resp) {
            if (resp.status === 500) {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("" + resp.message, _this.toastCtrl);
                _this.navCtrl.pop();
            }
        });
    };
    EditreportfeesPage.prototype.WsGetAllLab1ReportByLab = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLab1ReportByLab, {})
            .then(function (resp) {
            // let Temparray: any = resp;
            // this.AllReportList = Temparray.data;
            // console.log("this.AllReportList" + JSON.stringify(this.AllReportList));
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.AllReportList = resp.data;
                // this.labReportLevel1ID = this.AllReportList[0].labReportLevel1ID;
            }
            // this.WsGetAllDiagnosis();
        });
    };
    EditreportfeesPage.prototype.FatchItem = function () {
        var _this = this;
        var data = JSON.stringify({
            reportId: this.editID
        });
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getLabReportByid, data).then(function (resp) {
            if (resp.status === 500) {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
            }
            else {
                _this.labReportLevel1ID = resp.data.labReportLevel1ID;
                _this.lrl1Name = resp.data.reportName;
                _this.Cost = resp.data.costperreport;
            }
        });
    };
    EditreportfeesPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-editreportfees",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/editreportfees/editreportfees.html"*/'<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Edit Report Cost</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <div class="cmn-inr-form">\n    <ion-list>\n      <ion-item>\n        <ion-label color="" floating></ion-label>\n        <ion-select [(ngModel)]="labReportLevel1ID" [disabled]="true">\n          <ion-option [value]="labReportLevel1ID" selected="labReportLevel1ID"\n            >{{ lrl1Name }}</ion-option\n          >\n        </ion-select>\n      </ion-item>\n      <ion-item>\n        <ion-label color="" floating>Cost</ion-label>\n\n        <ion-input type="number" name="Cost" [(ngModel)]="Cost"></ion-input>\n      </ion-item>\n\n      <div class="form-button bg-gray pt-25 text-center">\n        <button\n          type="button"\n          class="cmn-thm-btn mr-25"\n          (click)="callAddAppointmentApi()"\n        >\n          Save\n        </button>\n        <button type="button" class="cmn-wht-btn">\n          Cancel\n        </button>\n      </div>\n    </ion-list>\n  </div></ion-content\n>\n\n<!-- <button\n    (click)="callAddAppointmentApi()"\n    ion-button\n    class="cmn-btn-styl prpl-btn"\n    block\n  >\n    Save\n  </button> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/editreportfees/editreportfees.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], EditreportfeesPage);
    return EditreportfeesPage;
}());

//# sourceMappingURL=editreportfees.js.map

/***/ }),

/***/ 259:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LabincomingappoinmentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__laboratorviewappoinment_laboratorviewappoinment__ = __webpack_require__(260);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__labaddreport_labaddreport__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_common__ = __webpack_require__(14);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the LabincomingappoinmentPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LabincomingappoinmentPage = /** @class */ (function () {
    function LabincomingappoinmentPage(navCtrl, navParams, api, alertCtrl, datepipe) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.datepipe = datepipe;
        this.appointmentTodayItems = [];
        this.labIncomingAppoimentList = [];
        this.labIncomingAppoimentListData = [];
    }
    LabincomingappoinmentPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        this.labIncomingAppoimentList = this.appointmentTodayItems;
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].laboratoryIncomingBookingRequest, '').then(function (resp) {
            _this.appointmentTodayItems = resp.data.patLabAppointmentsPojo;
            _this.labIncomingAppoimentListData = resp.data.patLabAppointmentsPojo;
            _this.labIncomingAppoimentList = resp.data.patLabAppointmentsPojo;
        });
    };
    LabincomingappoinmentPage.prototype.addItem = function () {
        //this.navCtrl.push(AddappointmentPage);
    };
    LabincomingappoinmentPage.prototype.editItem = function (id) {
        //this.navCtrl.push(EditappointmentPage,{patAppointmentID:id});
    };
    LabincomingappoinmentPage.prototype.changeItem = function (stateInt) {
        switch (stateInt) {
            case 1:
                this.labIncomingAppoimentList = this.appointmentTodayItems;
                break;
            default:
        }
    };
    LabincomingappoinmentPage.prototype.openItem = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__laboratorviewappoinment_laboratorviewappoinment__["a" /* LaboratorviewappoinmentPage */], { item: item });
    };
    LabincomingappoinmentPage.prototype.Canceled = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to cancel?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var passParam = {
                            // "patLabAppointmentID": data.patLabAppointmentID,
                            // "patAppStatus": "Cancel"
                            "patientAppointmentStatus": "Cancel",
                            "id": data.patLabAppointmentID,
                            "description": ''
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].labStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                console.log('resp>>>>' + resp);
                                _this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].laboratoryIncomingBookingRequest, '').then(function (resp) {
                                    console.log(resp);
                                    _this.appointmentTodayItems = resp.data.patLabAppointmentsPojo;
                                    _this.labIncomingAppoimentListData = resp.data.patLabAppointmentsPojo;
                                    _this.labIncomingAppoimentList = resp.data.patLabAppointmentsPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    LabincomingappoinmentPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to reject?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var passParam = {
                            // "patLabAppointmentID": data.patLabAppointmentID,
                            // "patAppStatus": "Rejected",
                            // "patLabAppDescription":''
                            "patientAppointmentStatus": "Rejected",
                            "id": data.patLabAppointmentID,
                            "description": ''
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].labStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                console.log('resp>>>>' + resp);
                                _this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].laboratoryIncomingBookingRequest, '').then(function (resp) {
                                    _this.appointmentTodayItems = resp.data.patLabAppointmentsPojo;
                                    _this.labIncomingAppoimentListData = resp.data.patLabAppointmentsPojo;
                                    _this.labIncomingAppoimentList = resp.data.patLabAppointmentsPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    LabincomingappoinmentPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to approve?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        var passParam = {
                            // "patLabAppointmentID": data.patLabAppointmentID,
                            // "patAppStatus": "Approved",
                            // "patLabAppDescription":''
                            "patientAppointmentStatus": "Approved",
                            "id": data.patLabAppointmentID,
                            "description": ''
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].labStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                console.log('resp>>>>' + resp);
                                _this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].laboratoryIncomingBookingRequest, '').then(function (resp) {
                                    console.log(resp);
                                    _this.appointmentTodayItems = resp.data.patLabAppointmentsPojo;
                                    _this.labIncomingAppoimentListData = resp.data.patLabAppointmentsPojo;
                                    _this.labIncomingAppoimentList = resp.data.patLabAppointmentsPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    LabincomingappoinmentPage.prototype.Add = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to Add ?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__labaddreport_labaddreport__["a" /* LabaddreportPage */], { item: data });
                    }
                }
            ]
        });
        alert.present();
    };
    LabincomingappoinmentPage.prototype.changeStringToDate = function (dateString, format) {
        if (format) {
            console.log("StringToDate==>", this.changeDateFormat(new Date(dateString), format));
            return this.changeDateFormat(new Date(dateString), format);
        }
        else {
            console.log("completeString=>>>>>>", dateString);
            console.log("StringToDate==>", new Date(dateString).toISOString());
            return new Date(dateString).toISOString();
        }
    };
    //date to any format
    LabincomingappoinmentPage.prototype.changeDateFormat = function (date, formate) {
        var latest_date = this.datepipe.transform(date, formate);
        console.log("ChangeDateFormat", latest_date);
        return latest_date;
    };
    LabincomingappoinmentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-labincomingappoinment',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labincomingappoinment/labincomingappoinment.html"*/'<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Incoming Appointment List</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="cmn-list">\n    <div\n      class="cmn-apmnt-row clearfix"\n      (click)="openItem(item)"\n      *ngFor="let item of labIncomingAppoimentList"\n    >\n      <div class="apmn-lft">\n        <div class="dr-name">{{ item.name }}</div>\n        <div class="rson-fr-meet" *ngFor="let rep of item.data">\n          {{ rep.lrl1Name }}\n        </div>\n        <div class="rson-fr-meet">{{ item.facilityCenterType }}</div>\n        <div class="apmnt-tm">\n          {{ item.patLabAppDate | date: "dd/MM/yyyy" }} {{\n          item.patLabAppTimeFrom | date: "shortTime" }}- {{ item.patLabAppTimeTo\n          | date: "shortTime" }}\n        </div>\n      </div>\n\n      <div\n        *ngIf="item.patAppStatus == \'Approved\'"\n        class="apmn-rgt"\n        (click)="openItem(item)"\n      >\n        <span class="apmnt-lbl accepted">\n          {{ item.patAppStatus }}\n        </span>\n      </div>\n\n      <div\n        *ngIf="item.patAppStatus == \'Cancel\'"\n        class="apmn-rgt"\n        (click)="openItem(item)"\n      >\n        <span class="apmnt-lbl cancelled">\n          {{ item.patAppStatus }}\n        </span>\n      </div>\n\n      <div\n        *ngIf="item.patAppStatus == \'Rejected\'"\n        class="apmn-rgt"\n        (click)="openItem(item)"\n      >\n        <span class="apmnt-lbl rejected">\n          {{ item.patAppStatus }}\n        </span>\n      </div>\n\n      <div\n        *ngIf="item.patAppStatus == \'Pending\'"\n        class="apmn-rgt"\n        (click)="openItem(item)"\n      >\n        <span class="apmnt-lbl pending">\n          {{ item.patAppStatus }}\n        </span>\n      </div>\n\n      <div\n        *ngIf="item.patAppStatus == \'Completed\'"\n        class="apmn-rgt"\n        (click)="openItem(item)"\n      >\n        <span class="apmnt-lbl accepted">\n          {{ item.patAppStatus }}\n        </span>\n      </div>\n\n      <!-- <div class="apmn-rgt">\n        <span class="apmnt-lbl accepted">\n          {{ item.patAppStatus }}\n        </span>\n      </div> -->\n\n      <ion-item-options *ngIf="item.patAppStatus == \'Pending\'">\n        <button ion-button (click)="Approved(item)">Approve</button>\n        <button ion-button color="danger" (click)="Rejected(item)">\n          Reject\n        </button>\n        <button ion-button color="danger" (click)="Canceled(item)">\n          Cancel\n        </button>\n      </ion-item-options>\n\n      <ion-item-options *ngIf="item.patAppStatus == \'Approved\'">\n        <button ion-button (click)="Add(item)">Add Report</button>\n        <button ion-button color="danger" (click)="Canceled(item)">\n          Cancel\n        </button>\n      </ion-item-options>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <div class="cmn-list-page">\n  <div class="cmn-tab-dsgn"></div>\n  <ion-list class="cmn-tb-cntnt">\n    <ion-item-sliding\n      #slidingItem\n      *ngFor="let item of labIncomingAppoimentList"\n    >\n      <ion-item (click)="openItem(item)">\n        <div class="ptnt-name">{{ item.name }}</div>\n        <div class="ptnt-name" *ngFor="let rep of item.data">\n          {{ rep.lrl1Name }}\n        </div>\n        <div class="rson-fr-meet">{{ item.facilityCenterType }}</div>\n\n        <div class="apmnt-tm">\n          {{ item.patLabAppDate | date: "dd/MM/yyyy" }}\n          {{ item.patLabAppTimeFrom | date: "shortTime" }}-\n          {{ item.patLabAppTimeTo | date: "shortTime" }}\n        </div>\n\n        <div class="apmnt-status">{{ item.patAppStatus }}</div>\n      </ion-item>\n\n      \n    </ion-item-sliding>\n  </ion-list>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labincomingappoinment/labincomingappoinment.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_6__angular_common__["d" /* DatePipe */]])
    ], LabincomingappoinmentPage);
    return LabincomingappoinmentPage;
}());

//# sourceMappingURL=labincomingappoinment.js.map

/***/ }),

/***/ 260:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LaboratorviewappoinmentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__labaddreport_labaddreport__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__addreport_addreport__ = __webpack_require__(230);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var LaboratorviewappoinmentPage = /** @class */ (function () {
    function LaboratorviewappoinmentPage(navCtrl, navParams, api, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.viewLabAppointment = [];
        this.item = [];
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        this.item = this.navParams.get('item');
    }
    LaboratorviewappoinmentPage.prototype.goBack = function () {
        this.navCtrl.pop();
    };
    LaboratorviewappoinmentPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        var petId = { patLabAppointmentID: this.item.patLabAppointmentID };
        console.log(petId);
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditLaboratory, petId)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.viewLabAppointment = resp.data;
                console.log(_this.viewLabAppointment);
                _this.Time = _this.convertTimeTo(resp.data.patLabAppTimeTo);
                _this.Date = _this.convertDate(resp.data.patLabAppDate);
            }
        });
    };
    LaboratorviewappoinmentPage.prototype.Canceled = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Confirmation',
            inputs: [
                {
                    name: "Description",
                    placeholder: "Description"
                }
            ],
            // message: 'Are you sure you want to cancel?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'save',
                    handler: function () {
                        console.log('Ok clicked');
                        var passParam = {
                            // "patLabAppointmentID": data.patLabAppointmentID,
                            // "patAppStatus": "Cancel"
                            "patientAppointmentStatus": "Cancel",
                            "id": data.patLabAppointmentID,
                            "description": ''
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].labStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                _this.Time = _this.convertTimeTo(resp.data.patLabAppTimeTo);
                                _this.Date = _this.convertDate(resp.data.patLabAppDate);
                                var petId = { patLabAppointmentID: _this.item.patLabAppointmentID };
                                _this.navCtrl.pop();
                                // console.log('resp>>>>'+resp);
                                // this.api.wsGet(APIName.getAllLab, '').then((resp:any) => 
                                // {
                                //   console.log(resp);
                                //   this.viewLabAppointment = resp.data;
                                //   console.log(this.viewLabAppointment);
                                //   this.Time= this.convertTimeTo(resp.data.patLabAppTimeTo);
                                //   this.Date=this.convertDate(resp.data.patLabAppDate); 
                                // });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    LaboratorviewappoinmentPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Confirmation',
            inputs: [
                {
                    name: "Description",
                    placeholder: "Description"
                }
            ],
            // message: 'Are you sure you want to reject?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Save',
                    handler: function () {
                        console.log('Ok clicked');
                        var passParam = {
                            // "patLabAppointmentID": data.patLabAppointmentID,
                            // "patAppStatus": "Rejected"
                            "patientAppointmentStatus": "Rejected",
                            "id": data.patLabAppointmentID,
                            "description": ''
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].labStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                _this.Time = _this.convertTimeTo(resp.data.patLabAppTimeTo);
                                _this.Date = _this.convertDate(resp.data.patLabAppDate);
                                var petId = { patLabAppointmentID: _this.item.patLabAppointmentID };
                                _this.navCtrl.pop();
                                console.log('resp>>>>' + resp);
                                // this.api.wsGet(APIName.getAllLab, '').then((resp:any) => {
                                //   console.log(resp);
                                //   this.viewLabAppointment = resp.data;
                                //   console.log(this.viewLabAppointment);
                                //   this.Time= this.convertTimeTo(resp.data.patLabAppTimeTo);
                                //   this.Date=this.convertDate(resp.data.patLabAppDate); 
                                // });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    LaboratorviewappoinmentPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Confirmation',
            // message: 'Are you sure you want to approve?',
            inputs: [
                {
                    name: "Description",
                    placeholder: "Description"
                }
            ],
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Save',
                    handler: function () {
                        console.log('Ok clicked');
                        var passParam = {
                            // "patLabAppointmentID": data.patLabAppointmentID,
                            // "patAppStatus": "Approved"
                            "patientAppointmentStatus": "Approved",
                            "id": data.patLabAppointmentID,
                            "description": ''
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].labStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                _this.Time = _this.convertTimeTo(resp.data.patLabAppTimeTo);
                                _this.Date = _this.convertDate(resp.data.patLabAppDate);
                                var petId = { patLabAppointmentID: _this.item.patLabAppointmentID };
                                _this.navCtrl.pop();
                                console.log('resp>>>>' + resp);
                                // this.api.wsGet(APIName.getAllLab, '').then((resp:any) => 
                                // {
                                //   console.log(resp);
                                //   this.viewLabAppointment = resp.data;
                                //   console.log(this.viewLabAppointment);
                                // });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    LaboratorviewappoinmentPage.prototype.Add = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Confirmation',
            inputs: [
                {
                    name: "Description",
                    placeholder: "Description"
                }
            ],
            // message: 'Are you sure you want to Add?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Save',
                    handler: function () {
                        console.log('Ok clicked');
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__labaddreport_labaddreport__["a" /* LabaddreportPage */], { item: data });
                    }
                }
            ]
        });
        alert.present();
    };
    LaboratorviewappoinmentPage.prototype.convertDate = function (date) {
        if (date) {
            var dateConvert = new Date(parseInt(date));
            var Year = dateConvert.getUTCFullYear();
            var Month = dateConvert.getUTCMonth() + 1;
            var Day = dateConvert.getUTCDate();
            return Day + "-" + Month + "-" + Year;
        }
        else {
            return "";
        }
    };
    LaboratorviewappoinmentPage.prototype.convertTimeTo = function (time) {
        if (time) {
            // var dateTime = new Date(parseInt(time));
            var dateTime = new Date(time);
            // var Hours= dateTime.getUTCHours() ;
            // var Minutes= dateTime.getUTCMinutes(); 
            // var Seconds= dateTime.getUTCSeconds();
            var Hours = dateTime.getHours();
            var Minutes = dateTime.getMinutes();
            var Seconds = dateTime.getSeconds();
            return Hours + ":" + Minutes;
        }
        else {
            return "";
        }
    };
    LaboratorviewappoinmentPage.prototype.Addleboratryreport = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__addreport_addreport__["a" /* AddreportPage */]);
    };
    LaboratorviewappoinmentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-laboratorviewappoinment',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/laboratorviewappoinment/laboratorviewappoinment.html"*/'<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Incoming Appointment View</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="view-list">\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Patient Name\n      </div>\n      <div class="view-list-val pull-right">\n        {{ viewLabAppointment.name }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Requied Report List\n      </div>\n      <div\n        class="view-list-val pull-right"\n        *ngFor="let rep of viewLabAppointment.data"\n      >\n        {{ rep.lrl1Name }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Appointment Date\n      </div>\n      <div class="view-list-val pull-right">\n        {{ Date }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Appointment Time\n      </div>\n      <div class="view-list-val pull-right">\n        {{ Time }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Home/Visit\n      </div>\n      <div class="view-list-val pull-right">\n        {{ viewLabAppointment.facilityCenterType }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Status\n      </div>\n\n      <div\n        *ngIf="viewLabAppointment.patAppStatus == \'Approved\'"\n        class="view-list-val pull-right"\n      >\n        <span class="apmnt-lbl accepted">\n          {{ viewLabAppointment.patAppStatus }}\n        </span>\n      </div>\n\n      <div\n        *ngIf="viewLabAppointment.patAppStatus == \'Cancel\'"\n        class="view-list-val pull-right"\n      >\n        <span class="apmnt-lbl cancelled">\n          {{ viewLabAppointment.patAppStatus }}\n        </span>\n      </div>\n      <div\n        *ngIf="viewLabAppointment.patAppStatus == \'Pending\'"\n        class="view-list-val pull-right"\n      >\n        <span class="apmnt-lbl pending">\n          {{ viewLabAppointment.patAppStatus }}\n        </span>\n      </div>\n\n      <div\n        *ngIf="viewLabAppointment.patAppStatus == \'Rejected\'"\n        class="view-list-val pull-right"\n      >\n        <span class="apmnt-lbl rejected">\n          {{ viewLabAppointment.patAppStatus }}\n        </span>\n      </div>\n      <div\n        *ngIf="viewLabAppointment.patAppStatus == \'Completed\'"\n        class="view-list-val pull-right"\n      >\n        <span class="apmnt-lbl accepted">\n          {{ viewLabAppointment.patAppStatus }}\n        </span>\n      </div>\n\n      <!-- <div class="view-list-val pull-right">\n        <span class="accepted-lbl">{{ viewLabAppointment.patAppStatus }}</span>\n      </div> -->\n    </div>\n    <ion-item\n      *ngIf="\n        viewLabAppointment.patAppStatus == \'Pending\' &&\n        selectRole == \'Laboratory\'\n      "\n    >\n      <button ion-button (click)="Approved(item)">Approve</button>\n      <button ion-button color="danger" (click)="Rejected(item)">\n        Reject\n      </button>\n    </ion-item>\n\n    <ion-item\n      *ngIf="\n        viewLabAppointment.patAppStatus == \'Completed\' &&\n        selectRole == \'Laboratory\'\n      "\n    >\n      <button ion-button (click)="Add(item)">Add Leboratory Report</button>\n    </ion-item>\n\n    <ion-item\n      *ngIf="\n        viewLabAppointment.patAppStatus == \'Approved\' &&\n        selectRole == \'Laboratory\'\n      "\n    >\n      <button ion-button (click)="Add(item)">Add Leboratory Report</button>\n      <button ion-button color="danger" (click)="Canceled(item)">\n        Cancel\n      </button>\n    </ion-item>\n  </div>\n</ion-content>\n\n<!-- <form text-center class="login-inner-hc" style="height: 50%;">\n  <ion-list>\n    <div class="login-signin-hc">\n      <div class="login-head-hc">\n        <h5>Incoming Appointment View</h5>\n      </div>\n\n      <ion-item>\n        <ion-label color="">Patient Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="viewLabAppointment.providerName"\n          name="PatientName"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Requied Report List :</ion-label>\n        <ion-input\n          *ngFor="let rep of viewLabAppointment.data"\n          type="text"\n          [(ngModel)]="rep.lrl1Name"\n          name="ReportList"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Appointment Date :</ion-label>\n        <ion-input [(ngModel)]="Date" name="date" disabled="true">\n          ></ion-input\n        >\n      </ion-item>\n      <ion-item>\n        <ion-label color="">Appointment Time :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="Time"\n          name="Time"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label color="">Home/Visit :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="viewLabAppointment.facilityCenterType"\n          name="Visit"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Status :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="viewLabAppointment.patAppStatus"\n          name="Status"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n    </div>\n  </ion-list>\n  <ion-list no-lines>\n    <ion-item\n      *ngIf="\n        viewLabAppointment.patAppStatus == \'Pending\' &&\n        selectRole == \'Laboratory\'\n      "\n    >\n      <button ion-button (click)="Approved(item)">Approve</button>\n      <button ion-button color="danger" (click)="Rejected(item)">\n        Reject\n      </button>\n    </ion-item>\n\n    <ion-item\n      *ngIf="\n        viewLabAppointment.patAppStatus == \'Completed\' &&\n        selectRole == \'Laboratory\'\n      "\n    >\n      <button ion-button (click)="Add(item)">Add Leboratory Report</button>\n    </ion-item>\n\n    <ion-item\n      *ngIf="\n        viewLabAppointment.patAppStatus == \'Approved\' &&\n        selectRole == \'Laboratory\'\n      "\n    >\n      <button ion-button (click)="Add(item)">Add Leboratory Report</button>\n      <button ion-button color="danger" (click)="Canceled(item)">\n        Cancel\n      </button>\n    </ion-item>\n  </ion-list>\n</form> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/laboratorviewappoinment/laboratorviewappoinment.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], LaboratorviewappoinmentPage);
    return LaboratorviewappoinmentPage;
}());

//# sourceMappingURL=laboratorviewappoinment.js.map

/***/ }),

/***/ 261:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LabprofilePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__labprofilelaboratory_labprofilelaboratory__ = __webpack_require__(262);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__labprofiledemographic_labprofiledemographic__ = __webpack_require__(263);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__commonpages_changepassword_changepassword__ = __webpack_require__(97);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__labprofiledocument_labprofiledocument__ = __webpack_require__(264);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the LabprofilePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LabprofilePage = /** @class */ (function () {
    function LabprofilePage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.tabLaboratory = __WEBPACK_IMPORTED_MODULE_2__labprofilelaboratory_labprofilelaboratory__["a" /* LabprofilelaboratoryPage */];
        this.tabDemographic = __WEBPACK_IMPORTED_MODULE_3__labprofiledemographic_labprofiledemographic__["a" /* LabprofiledemographicPage */];
        this.tabChangePassoword = __WEBPACK_IMPORTED_MODULE_4__commonpages_changepassword_changepassword__["a" /* ChangepasswordPage */];
        this.tabDocuments = __WEBPACK_IMPORTED_MODULE_5__labprofiledocument_labprofiledocument__["a" /* LabprofiledocumentPage */];
        this.scrollableTabsopts = {};
        this.mySelectedIndex = navParams.data.tabIndex || 0;
    }
    LabprofilePage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad LabprofilePage");
    };
    LabprofilePage.prototype.refreshScrollbarTabs = function () {
        this.scrollableTabsopts = { refresh: true };
    };
    LabprofilePage.prototype.switchTabs = function (pos) {
        this.navCtrl.parent.setlect(pos);
    };
    LabprofilePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-labprofile",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labprofile/labprofile.html"*/'<!--\n  Generated template for the PatientprofilePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Laboratory Profile</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <ion-tabs\n    #ionTabs\n    [scrollable-tabs]="ionTabs"\n    [opts]="scrollableTabsopts"\n    selectedIndex="0"\n    color="default"\n    tabsHighlight="true"\n    tabsPlacement="top"\n  >\n    <ion-tab [root]="tabLaboratory" tabTitle="Laboratory"></ion-tab>\n    <ion-tab [root]="tabDemographic" tabTitle="Demographic"></ion-tab>\n    <ion-tab [root]="tabChangePassoword" tabTitle="Change Passoword"></ion-tab>\n    <ion-tab [root]="tabDocuments" tabTitle="Documents"></ion-tab>\n  </ion-tabs>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labprofile/labprofile.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], LabprofilePage);
    return LabprofilePage;
}());

//# sourceMappingURL=labprofile.js.map

/***/ }),

/***/ 262:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LabprofilelaboratoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_file_transfer__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_file_path__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_file__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_common__ = __webpack_require__(14);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the LabprofilelaboratoryPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LabprofilelaboratoryPage = /** @class */ (function () {
    function LabprofilelaboratoryPage(navCtrl, navParams, api, datepipe, toastCtrl, alertctrl, camera, actionSheetCrtl, platform, filePath, transfer, file) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.datepipe = datepipe;
        this.toastCtrl = toastCtrl;
        this.alertctrl = alertctrl;
        this.camera = camera;
        this.actionSheetCrtl = actionSheetCrtl;
        this.platform = platform;
        this.filePath = filePath;
        this.transfer = transfer;
        this.file = file;
        this.emailValidation = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\",this.toastCtrl);)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        this.nameValidation = /[^a-zA-Z]/;
        this.patAppTimeFrom = "";
        this.patAppDate = "";
        this.patAppTimeTo = "";
        this.formData = new FormData();
        this.laboratoryProfile = {
            perEmailList: [],
            personID: "",
            perFname: "",
            perLName: "",
            perProfile: "",
            facilityCenterID: "",
            facilityCenterName: "",
            additionalInformation: "",
            perEmailPrimary: ""
        };
    }
    LabprofilelaboratoryPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad LabprofilelaboratoryPage");
        this.getLaboratoryData();
    };
    LabprofilelaboratoryPage.prototype.getLaboratoryData = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getLaboratoryData, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("LABgetPersonalData >> ", JSON.stringify(resp));
                localStorage.setItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["e" /* perProfile */], resp.data.perProfile);
                _this.laboratoryProfile.personID = resp.data.personID;
                _this.laboratoryProfile.perFname = resp.data.perFname;
                _this.laboratoryProfile.perLName = resp.data.perLName;
                _this.laboratoryProfile.perProfile = resp.data.perProfile;
                _this.laboratoryProfile.facilityCenterID = resp.data.facilityCenterID;
                _this.laboratoryProfile.facilityCenterName =
                    resp.data.facilityCenterName;
                _this.laboratoryProfile.additionalInformation =
                    resp.data.additionalInformation;
                _this.laboratoryProfile.perEmailPrimary = resp.data.perEmailPrimary;
                console.log("EmailList :--- " + resp.data.perEmailList.length);
                if (resp.data.perEmailList.length > 0) {
                    for (var i = 0; i < resp.data.perEmailList.length; i++) {
                        _this.laboratoryProfile.perEmailList.push(resp.data.perEmailList[i].value);
                    }
                    //    this.laboratoryProfile.perEmailList = resp.perEmailList.value
                }
            }
        });
    };
    LabprofilelaboratoryPage.prototype.addtoList = function () {
        if (!this.emailValidation.test(this.secondaryEmail)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Valid Email Address", this.toastCtrl);
            return;
        }
        this.laboratoryProfile.perEmailList.push(this.secondaryEmail);
        this.secondaryEmail = "";
    };
    LabprofilelaboratoryPage.prototype.deleteelement = function (list) {
        var _this = this;
        var alert = this.alertctrl.create({
            title: "Confirm Delete",
            message: "Are you sure, you want to delete this email?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "OK",
                    handler: function () {
                        var index = _this.laboratoryProfile.perEmailList.indexOf(list);
                        if (index > -1) {
                            _this.laboratoryProfile.perEmailList.splice(index, 1);
                        }
                        console.log("Item deleted");
                    }
                }
            ]
        });
        alert.present();
    };
    /* Submit Details */
    LabprofilelaboratoryPage.prototype.submitDetails = function () {
        if (this.laboratoryProfile.facilityCenterName.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Lab Name", this.toastCtrl);
            return;
        }
        else if (this.laboratoryProfile.additionalInformation.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Additional Information", this.toastCtrl);
            return;
        }
        else if (this.laboratoryProfile.perEmailPrimary.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter email", this.toastCtrl);
            return;
        }
        else if (!this.emailValidation.test(this.laboratoryProfile.perEmailPrimary)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Valid Email Address", this.toastCtrl);
            return;
        }
        else if (this.patAppTimeFrom.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment start time", this.toastCtrl);
            return;
        }
        else if (this.patAppTimeTo.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment end time", this.toastCtrl);
            return;
        }
        var date = new Date(this.patAppDate);
        var datetopass = date.getTime();
        var date1 = date.getUTCDate();
        console.log("datebefore", "" + datetopass);
        var timefrom = new Date(this.patAppDate + " " + this.patAppTimeFrom);
        var timefromtopass = timefrom.getTime();
        console.log("timebefrm", "" + timefromtopass);
        var timeto = new Date(this.patAppDate + " " + this.patAppTimeTo);
        var timetopass = timeto.getTime();
        console.log("timeto", "" + timetopass);
        //this.uploadFile()
        this.callWebserviceUpdateLaboratoryDetails();
    };
    LabprofilelaboratoryPage.prototype.changeDateFormat = function (date, formate) {
        var latest_date = this.datepipe.transform(date, formate);
        console.log("ChangeDateFormat", latest_date);
        return latest_date;
    };
    LabprofilelaboratoryPage.prototype.callWebserviceUpdateLaboratoryDetails = function () {
        var _this = this;
        this.formData.append("personID", this.laboratoryProfile.personID);
        this.formData.append("perFname", this.laboratoryProfile.perFname);
        this.formData.append("perLName", this.laboratoryProfile.perLName);
        this.formData.append("facilityCenterID", this.laboratoryProfile.facilityCenterID);
        this.formData.append("additionalInformation", this.laboratoryProfile.additionalInformation);
        this.formData.append("perEmailPrimary", this.laboratoryProfile.perEmailPrimary);
        this.formData.append("perProfile", this.laboratoryProfile.perProfile);
        var emails = "";
        for (var _i = 0, _a = this.laboratoryProfile.perEmailList; _i < _a.length; _i++) {
            var emailItem = _a[_i];
            emails = emails + "," + emailItem;
        }
        while (emails.charAt(0) === ",") {
            emails = emails.substr(1);
        }
        this.formData.append("perEmailList", emails);
        this.api
            .wsPostMutlipartHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].updatePersonalPatientProfile, this.formData)
            .then(function (resp) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
            localStorage.setItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["e" /* perProfile */], resp.data.perProfile);
        });
    };
    LabprofilelaboratoryPage.prototype.choosePhotoFromCameraOrGallery = function (sourceType) {
        var _this = this;
        var options = {
            quality: 100,
            destinationType: __WEBPACK_IMPORTED_MODULE_5__ionic_native_camera__["b" /* DestinationType */].FILE_URL,
            sourceType: sourceType,
            saveToPhotoAlbum: true,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (imagePath) {
            _this.imageURI = imagePath;
            console.log("getPicture >> ", imagePath);
            console.log("getPicture  normalizeURL(imagePath) >> ", Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            _this.saveImage(Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            _this.laboratoryProfile.perProfile = imagePath;
        }, function (err) {
            alert(err);
        });
    };
    LabprofilelaboratoryPage.prototype.saveImage = function (imageFileUri) {
        var _this = this;
        this.file
            .resolveLocalFilesystemUrl(imageFileUri)
            .then(function (entry) {
            return entry.file(function (file) {
                _this.readFile(file);
            });
        })
            .catch(function (err) { return console.log(err); });
    };
    LabprofilelaboratoryPage.prototype.readFile = function (file) {
        var _this = this;
        var reader = new FileReader();
        reader.onloadend = function () {
            //[ this.result ], type: "image/jpeg"
            var imgBlob = new Blob([reader.result], { type: file.type });
            console.log("readFile() : file.type >> ", file.type);
            console.log("readFile() : file >> ", file);
            _this.formData.append("perProfile", imgBlob, file.name);
            // this.callWebserviceUpdateDocuments()
        };
        reader.readAsArrayBuffer(file);
    };
    LabprofilelaboratoryPage.prototype.buttonClickForChooseIDs = function () {
        var _this = this;
        Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["g" /* showActionSheetPhoto */])(this.actionSheetCrtl).then(function (seletedIndex) {
            _this.choosePhotoFromCameraOrGallery(seletedIndex);
        });
    };
    LabprofilelaboratoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-labprofilelaboratory",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labprofilelaboratory/labprofilelaboratory.html"*/'<!--\n  Generated template for the LabprofilelaboratoryPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header> </ion-header>\n\n<ion-content>\n  <div class="profile-page">\n    <!-- profile top -->\n    <div class="">\n      <div class="cmn-tabs">\n        <div class="nav-tabs-navigation">\n          <div class="nav-tabs-wrapper"></div>\n        </div>\n        <!-- tabs content start -->\n        <div class="tab-content">\n          <!-- personal tab -->\n          <div class="tab-pane active" id="Personal">\n            <div class="personal-cntnt">\n              <!-- profile top part -->\n              <div class="profile-detail">\n                <div class="profile-img">\n                  <div class="usr-img">\n                    <img\n                      src="{{laboratoryProfile.perProfile}}"\n                      class="usr-pic"\n                    />\n                    <span class="img-upld-btn">\n                      <img\n                        src="assets/images/cam.png"\n                        (click)="buttonClickForChooseIDs()"\n                      />\n                    </span>\n                  </div>\n                </div>\n                <div class="prfl-dtl-rw clearfix">\n                  <div class="prfl-dtl-lbl pull-left">\n                    First Name\n                  </div>\n                  <div class="prfl-dtl-val pull-right">\n                    {{laboratoryProfile.perFname}}\n                  </div>\n                </div>\n                <div class="prfl-dtl-rw clearfix">\n                  <div class="prfl-dtl-lbl pull-left">\n                    Email\n                  </div>\n                  <div class="prfl-dtl-val pull-right">\n                    {{laboratoryProfile.perEmailPrimary}}\n                  </div>\n                </div>\n                <div class="prfl-dtl-rw clearfix">\n                  <div class="prfl-dtl-lbl pull-left">\n                    Phone No\n                  </div>\n                  <div class="prfl-dtl-val pull-right">\n                    1234567890\n                  </div>\n                </div>\n              </div>\n              <!-- profile top part end-->\n              <!-- form sec 1 -->\n              <div class="cmn-form no-input-efct bg-fff mt5">\n                <div class="pl15 pr15 form-bb">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">First Name</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="laboratoryProfile.perFname"\n                    />\n                  </div>\n                </div>\n                <div class="pl15 pr15 form-bb">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Last Name</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="laboratoryProfile.perLName"\n                    />\n                  </div>\n                </div>\n                <div class="pl15 pr15 form-bb">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Email</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="laboratoryProfile.perEmailPrimary"\n                      [readonly]="true"\n                    />\n                  </div>\n                </div>\n                <div class="pl15 pr15 form-bb">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Secondary Email</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="secondaryEmail"\n                    />\n                  </div>\n                </div>\n                <button class="btn cmn-thm-btn mr-25" (click)="addtoList()">\n                  Add\n                </button>\n              </div>\n              <ion-item>\n                <ion-list class="cmn-tb-cntnt">\n                  <ion-item-sliding\n                    #slidingItem\n                    *ngFor="let item of laboratoryProfile.perEmailList"\n                  >\n                    <ion-item>\n                      <div class="ptnt-name">{{item}}</div>\n                      <ion-icon\n                        class="trashicon"\n                        (click)="deleteelement(item)"\n                        name="trash"\n                        data-ng-if="(laboratoryProfile.perEmailList.length > 0)"\n                      ></ion-icon>\n                    </ion-item>\n                  </ion-item-sliding>\n                </ion-list>\n              </ion-item>\n              <div class="avl-schdl">\n                <div class="scdl-ttl">Timing</div>\n                <div class="scdl-row clearfix">\n                  <div class="scdl-day pull-left">Monday</div>\n                  <div class="scdl-time pull-right">12:00 PM to 04:00 PM</div>\n                </div>\n                <div class="scdl-row clearfix">\n                  <div class="scdl-day pull-left">Wednesday</div>\n                  <div class="scdl-time pull-right">12:00 PM to 04:00 PM</div>\n                </div>\n                <div class="scdl-row clearfix">\n                  <div class="scdl-day pull-left">Saturday</div>\n                  <div class="scdl-time pull-right">06:00 PM to 08:00 PM</div>\n                </div>\n                <div class="scdl-row clearfix">\n                  <div class="scdl-day pull-left">Sunday</div>\n                  <div class="scdl-time pull-right">06:00 PM to 08:00 PM</div>\n                </div>\n              </div>\n              <div class="pl15 pr15 form-bb">\n                <div class="form-group">\n                  <label class="bmd-label-floating">Time From</label>\n                  <ion-datetime\n                    displayFormat="hh:mm a"\n                    pickerFormat="hh:mm a"\n                    [(ngModel)]="patAppTimeFrom"\n                    name="timeFrom"\n                  ></ion-datetime>\n                  <span class="input-icon"\n                    ><img src="assets/images/time.png"\n                  /></span>\n                </div>\n              </div>\n              <div class="pl15 pr15 form-bb">\n                <div class="form-group">\n                  <label class="bmd-label-floating">Time To</label>\n                  <ion-datetime\n                    displayFormat="hh:mm a"\n                    pickerFormat="hh:mm a"\n                    [(ngModel)]="patAppTimeTo"\n                    name="timeTo"\n                  ></ion-datetime>\n                  <span class="input-icon"\n                    ><img src="assets/images/time.png"\n                  /></span>\n                </div>\n              </div>\n\n              <div class="form-button bg-gray pt-25 mb-20 text-center">\n                <button class="btn cmn-thm-btn mr-25" (click)="submitDetails()">\n                  SAVE\n                </button>\n                <button type="button" class="cmn-wht-btn">\n                  CANCEL\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <ion-item>\n  <ion-label floating>Laboratory Name</ion-label>\n  <ion-input\n    [(ngModel)]="laboratoryProfile.facilityCenterName"\n    type="text"\n  ></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>First Name</ion-label>\n  <ion-input [(ngModel)]="laboratoryProfile.perFname" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Last Name</ion-label>\n  <ion-input [(ngModel)]="laboratoryProfile.perLName" type="text"></ion-input>\n</ion-item>\n\n<div class="avl-schdl">\n  <div class="scdl-ttl">Timing</div>\n  <div class="scdl-row clearfix">\n    <div class="scdl-day pull-left">Monday</div>\n    <div class="scdl-time pull-right">12:00 PM to 04:00 PM</div>\n  </div>\n  <div class="scdl-row clearfix">\n    <div class="scdl-day pull-left">Wednesday</div>\n    <div class="scdl-time pull-right">12:00 PM to 04:00 PM</div>\n  </div>\n  <div class="scdl-row clearfix">\n    <div class="scdl-day pull-left">Saturday</div>\n    <div class="scdl-time pull-right">06:00 PM to 08:00 PM</div>\n  </div>\n  <div class="scdl-row clearfix">\n    <div class="scdl-day pull-left">Sunday</div>\n    <div class="scdl-time pull-right">06:00 PM to 08:00 PM</div>\n  </div>\n</div>\n\n<div class="pl15 pr15 form-bb">\n  <div class="form-group">\n    <label class="scdl-ttl">Time From</label>\n    <ion-datetime\n      displayFormat="hh:mm a"\n      pickerFormat="hh:mm a"\n      [(ngModel)]="patAppTimeFrom"\n      name="timeFrom"\n    ></ion-datetime>\n    <span class="input-icon"><img src="assets/images/time.png"/></span>\n  </div>\n</div>\n\n<div class="pl15 pr15 form-bb">\n  <div class="form-group">\n    <label class="scdl-ttl">Time To</label>\n    <ion-datetime\n      displayFormat="hh:mm a"\n      pickerFormat="hh:mm a"\n      [(ngModel)]="patAppTimeTo"\n      name="timeTo"\n    ></ion-datetime>\n    <span class="input-icon"><img src="assets/images/time.png"/></span>\n  </div>\n</div>\n\n<ion-item>\n  <ion-label floating>Email</ion-label>\n  <ion-input\n    [(ngModel)]="laboratoryProfile.perEmailPrimary"\n    type="text"\n  ></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Secondary Email</ion-label>\n  <ion-input type="text" [(ngModel)]="secondaryEmail"></ion-input>\n</ion-item>\n\n<button ion-button (click)="addtoList()">Add</button>\n\n<ion-item>\n  <ion-list>\n    <ion-item *ngFor="let list of laboratoryProfile.perEmailList">\n      {{list}}\n      <ion-icon\n        class="trashicon"\n        (click)="deleteelement(list)"\n        name="trash"\n        data-ng-if="(laboratoryProfile.perEmailLists.length > 0)"\n      ></ion-icon>\n    </ion-item>\n  </ion-list>\n</ion-item>\n\n<ion-item no-lines>\n  <ion-label>Upload Photo</ion-label>\n</ion-item>\n<ion-item no-lines>\n  <button ion-button small (click)="buttonClickForChooseIDs(1)">\n    Choose File\n  </button>\n</ion-item>\n<div class="uploaded-img">\n  <img src="{{laboratoryProfile.perProfile}}" style="width: 100%" />\n</div>\n\n<ion-item>\n  <ion-label floating>Additional Information</ion-label>\n  <ion-input\n    [(ngModel)]="laboratoryProfile.additionalInformation"\n    type="text"\n  ></ion-input>\n</ion-item>\n\n<div padding align="center">\n  <div padding>\n    <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n    <button ion-button type="Cancel">Cancel</button>\n  </div>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labprofilelaboratory/labprofilelaboratory.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_8__angular_common__["d" /* DatePipe */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_file_path__["a" /* FilePath */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_file_transfer__["a" /* FileTransfer */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_file__["a" /* File */]])
    ], LabprofilelaboratoryPage);
    return LabprofilelaboratoryPage;
}());

//# sourceMappingURL=labprofilelaboratory.js.map

/***/ }),

/***/ 263:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LabprofiledemographicPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the LabprofiledemographicPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LabprofiledemographicPage = /** @class */ (function () {
    function LabprofiledemographicPage(navCtrl, navParams, api, alertCtrl, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.toastCtrl = toastCtrl;
        this.mobileNumberValidation = /^[0-9]{10}$/;
        this.locationArray = [];
        this.Facility = [];
        this.Locations = [];
        this.states = [
            {
                title: 'States',
                id: 1
            },
            {
                title: 'Gujarat',
                id: 2
            }
        ];
        this.selectedState = this.states[0];
        this.countries = [
            {
                title: 'Country',
                id: 1
            },
            {
                title: 'India',
                id: 2
            },
            {
                title: 'Greece',
                id: 3
            },
            {
                title: 'Tonga',
                id: 4
            }
        ];
        this.selectedCountry = this.countries[0];
        this.addressObject = {
            locationID: "",
            addressLine1: "",
            addressLine2: "",
            addressLine3: "",
            // area: "",
            city: "",
            state: "",
            zip: "",
            country: "",
            phone: "",
            milestone1: "",
            milestone2: "",
            timeZoneMaster: {
                utcTimeZoneId: 10,
                countryCode: "IN",
                countryName: "INDIA",
                timezoneAbbreviation: "IST",
                timezoneName: "Indian Standard Time",
                utcOffset: "+5:30"
            }
        };
        this.demographicProfile = {
            personID: '',
            facilityCenterMaster: '',
            locationMaster: [],
            perMobileList: [],
            perMobilePrimary: '',
        };
    }
    LabprofiledemographicPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad LabprofiledemographicPage');
        //  this.getAllLocations()
        this.getDemographicData();
        this.WsGetAllFacilities();
    };
    /**
     * get list of cities
     */
    LabprofiledemographicPage.prototype.getAllLocations = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLocationByFacility, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.locationArray = resp;
                _this.selectedLocation = _this.locationArray[0].locationID;
                console.log("location array 0 item", _this.locationArray[0].locationID);
            }
        });
    };
    LabprofiledemographicPage.prototype.getDemographicData = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getDemographicData, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                //  this.locationArray = resp;
                //  this.selectedLocation = this.locationArray[0].locationID;
                // console.log("location array 0 item", this.locationArray[0].locationID)
                console.log("getdemographic data>>>>>>>>>", resp.data);
                console.log("getdemographic perMobileList data>>>>>>>>>", resp.data.perMobileList);
                console.log("getdemographic locationMasterdata data>>>>>>>>>", resp.data.locationMaster);
                _this.demographicProfile.personID = resp.data.personID;
                _this.demographicProfile.perMobilePrimary = resp.data.perMobilePrimary;
                _this.demographicProfile.perMobileList = resp.data.perMobileList;
                _this.demographicProfile.locationMaster = resp.data.locationMaster;
                console.log("mobile list first element is>>>>", resp.data.perMobileList[0]);
                if (resp.data.perMobileList[0] != null) {
                    _this.demographicProfile.perMobileList = resp.data.perMobileList;
                }
            }
        });
    };
    LabprofiledemographicPage.prototype.WsGetAllFacilities = function () {
        var _this = this;
        this.api.wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllFacility, {}).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                var TempForFacility = resp;
                _this.Facility = TempForFacility.data;
                //  this.DoctorVisit.Facility = this.Facilities[0];
                console.log(_this.Facility);
                console.log('ionViewDidLoad DoctorAddOrEditVisitPage');
            }
        });
    };
    LabprofiledemographicPage.prototype.onSelectChange = function (selectedValue) {
        console.log('Selected' + selectedValue);
        this.demographicProfile.facilityCenterMaster = { 'facilityCenterID': selectedValue };
        this.WsGetAllLocation(selectedValue);
    };
    LabprofiledemographicPage.prototype.WsGetAllLocation = function (strSelectedValue) {
        var _this = this;
        var data = {
            facilityCenterID: strSelectedValue
        };
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLocationByFacility, data).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                var Temparray = resp;
                _this.Locations = Temparray.data;
                // this.DoctorVisit.Location = this.Locations[0];
            }
        });
    };
    LabprofiledemographicPage.prototype.updateLabDemographicProfile = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].updatelabdemographicprofile, this.demographicProfile).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                // this.demographicProfile = resp.data;
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
                // console.log("demographicProfile", resp)
            }
        });
    };
    LabprofiledemographicPage.prototype.showlocation = function (location) {
        console.log("locationid >> " + location);
        this.addressObject.locationID = location;
        // this.selectedLocation = location
    };
    LabprofiledemographicPage.prototype.addAddress = function () {
        console.log("addAddress >> ", this.addressObject);
        this.demographicProfile.locationMaster.push(this.addressObject);
        this.addressObject = {
            locationID: "",
            addressLine1: "",
            addressLine2: "",
            addressLine3: "",
            //area: "",
            city: "",
            state: "",
            zip: "",
            country: "",
            phone: "",
            milestone1: "",
            milestone2: "",
            timeZoneMaster: {
                utcTimeZoneId: 10,
                countryCode: "IN",
                countryName: "INDIA",
                timezoneAbbreviation: "IST",
                timezoneName: "Indian Standard Time",
                utcOffset: "+5:30"
            }
        };
    };
    LabprofiledemographicPage.prototype.submitDetails = function () {
        if (this.demographicProfile.facilityCenterMaster == "") {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Select facility", this.toastCtrl);
            return;
        }
        // console.log("submitDetails >>----> ", JSON.stringify(this.demographicProfile))
        this.updateLabDemographicProfile();
        // this.api.wsPostHeader(APIName.demographic, this.demographicProfile)
        // .then((resp: any) => {
        // showToast(resp.message, this.toastCtrl)
        // });
    };
    // submitDetails() {
    //   console.log("submitDetails >>----> ", JSON.stringify(this.demographicProfile))
    //   this.updateLabDemographicProfile()
    //   // this.api.wsPostHeader(APIName.demographic, this.demographicProfile)
    //   //   .then((resp: any) => {
    //   //     showToast(resp.message, this.toastCtrl)
    //   //   });
    // }
    LabprofiledemographicPage.prototype.addtoList = function () {
        if (!this.mobileNumberValidation.test(this.secondaryPhone)) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid phone number", this.toastCtrl);
            return;
        }
        this.demographicProfile.perMobileList.push(this.secondaryPhone);
        this.secondaryPhone = '';
    };
    LabprofiledemographicPage.prototype.deleteelement = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this phone number?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.demographicProfile.perMobileList.indexOf(list);
                        if (index > -1) {
                            _this.demographicProfile.perMobileList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    LabprofiledemographicPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-labprofiledemographic',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labprofiledemographic/labprofiledemographic.html"*/'<!--\n  Generated template for the LabprofiledemographicPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header> </ion-header>\n\n<ion-content>\n  <div class="cmn-form no-input-efct bg-fff mt5">\n    <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        name="faciltyCenterName"\n        [(ngModel)]="Facility"\n        (change)="onSelectChange($event.target.value)"\n      >\n        <option *ngFor="let f of Facility" [value]="f.facilityCenterID"\n          >{{ f.facilityCenterName }}</option\n        >\n      </select>\n      <label>Facility</label>\n    </div>\n    <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        name="fcLocationName"\n        [(ngModel)]="Locations"\n        (change)="showlocation($event.target.value)"\n      >\n        <option *ngFor="let L of Locations" [value]="L.fcLocationMapID"\n          >{{ L.fcLocationName }}</option\n        >\n      </select>\n      <label>Location</label>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Address Line 1</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.addressLine1"\n        />\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Address Line 2</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.addressLine2"\n        />\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Address Line 3</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.addressLine3"\n        />\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">ZipCode</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.zip"\n        />\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">city</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.city"\n        />\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">State</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.state"\n        />\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Country</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.country"\n        />\n      </div>\n    </div>\n    <div align="left">\n      <button\n        class="btn cmn-thm-btn mr-25"\n        type="submit"\n        (click)="addAddress()"\n        block\n      >\n        Add New Address\n      </button>\n    </div>\n    <ion-item>\n      <ion-list class="cmn-tb-cntnt">\n        <ion-item-sliding\n          #slidingItem\n          *ngFor="let item of demographicProfile.locationMaster"\n        >\n          <ion-item>\n            <div class="ptnt-name">\n              {{item.addressLine1}}, {{item.addressLine2}},\n              {{item.addressLine3}}\n            </div>\n            <div class="rson-fr-meet">{{item.area}}, {{item.zip}}</div>\n            <div class="apmnt-tm">\n              {{item.city}}, {{item.state}}, {{item.country}}\n            </div>\n            <div class="apmnt-status">{{item.patAppStatus}}</div>\n          </ion-item>\n\n          <ion-item-options>\n            <button ion-button color="danger" (click)="deleteAddress(item)">\n              Delete\n            </button>\n          </ion-item-options>\n        </ion-item-sliding>\n      </ion-list>\n    </ion-item>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Phone</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="demographicProfile.perMobilePrimary"\n        />\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Secondary Phone</label>\n        <input type="text" class="form-control" [(ngModel)]="secondaryPhone" />\n      </div>\n    </div>\n    <button class="btn cmn-thm-btn mr-25" (click)="addtoList()">Add</button>\n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of demographicProfile.perMobileList">\n          {{list.value}}\n          <ion-icon\n            class="trashicon"\n            (click)="deleteelement(list)"\n            name="trash"\n            data-ng-if="(demographicProfile.perMobileList.length > 0)"\n          ></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n\n    <div padding align="center">\n      <div padding>\n        <button\n          class="btn cmn-thm-btn mr-25"\n          type="submit"\n          (click)="submitDetails()"\n        >\n          Submit\n        </button>\n        <button class="cmn-wht-btn" type="Cancel">Cancel</button>\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <ion-content>\n  <ion-item>\n    <ion-label>Facility</ion-label>\n    <ion-select\n      [(ngModel)]="Facilities"\n      name="Facility"\n      (ionChange)="onSelectChange($event)"\n    >\n      <ion-option *ngFor="let f of Facility" [value]="f.facilityCenterID">\n        {{f.facilityCenterName}}\n      </ion-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-item>\n    <ion-label>Locations</ion-label>\n    <ion-select\n      [(ngModel)]="Location"\n      name="Location"\n      (ionChange)="showlocation($event)"\n    >\n      <ion-option *ngFor="let L of Locations" [value]="L.fcLocationMapID">\n        {{L.fcLocationName}}\n      </ion-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-item>\n    <ion-label floating>Address Line 1</ion-label>\n    <ion-input [(ngModel)]="addressObject.addressLine1" type="text"></ion-input>\n  </ion-item>\n  <ion-item>\n    <ion-label floating>Address Line 2</ion-label>\n    <ion-input [(ngModel)]="addressObject.addressLine2" type="text"></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label floating>Address Line 3</ion-label>\n    <ion-input [(ngModel)]="addressObject.addressLine3" type="text"></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label floating>ZipCode</ion-label>\n    <ion-input [(ngModel)]="addressObject.zip" type="text"></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label floating>city</ion-label>\n    <ion-input [(ngModel)]="addressObject.city" type="text"></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label floating>State</ion-label>\n    <ion-input [(ngModel)]="addressObject.state" type="text"></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label floating>Country</ion-label>\n    <ion-input [(ngModel)]="addressObject.country" type="text"></ion-input>\n  </ion-item>\n\n  <div padding align="center">\n    <button ion-button type="submit" (click)="addAddress()" block>\n      Add New Address\n    </button>\n  </div>\n\n  <ion-item>\n    <ion-list class="cmn-tb-cntnt">\n      <ion-item-sliding\n        #slidingItem\n        *ngFor="let item of demographicProfile.locationMaster"\n      >\n        <ion-item>\n          <div class="ptnt-name">\n            {{item.addressLine1}}, {{item.addressLine2}}, {{item.addressLine3}}\n          </div>\n          <div class="rson-fr-meet">{{item.area}}, {{item.zip}}</div>\n          <div class="apmnt-tm">\n            {{item.city}}, {{item.state}}, {{item.country}}\n          </div>\n          <div class="apmnt-status">{{item.patAppStatus}}</div>\n        </ion-item>\n\n        <ion-item-options>\n          <button ion-button color="danger" (click)="deleteAddress(item)">\n            Delete\n          </button>\n        </ion-item-options>\n      </ion-item-sliding>\n    </ion-list>\n  </ion-item>\n\n  <ion-item>\n    <ion-label floating>Phone</ion-label>\n    <ion-input\n      [(ngModel)]="demographicProfile.perMobilePrimary"\n      type="number"\n    ></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label floating>Secondary Phone</ion-label>\n    <ion-input type="number" [(ngModel)]="secondaryPhone"></ion-input>\n  </ion-item>\n\n  <button ion-button (click)="addtoList()">Add</button>\n\n  <ion-item>\n    <ion-list>\n      <ion-item *ngFor="let list of demographicProfile.perMobileList">\n        {{list.value}}\n        <ion-icon\n          class="trashicon"\n          (click)="deleteelement(list)"\n          name="trash"\n          data-ng-if="(demographicProfile.perMobileList.length > 0)"\n        ></ion-icon>\n      </ion-item>\n    </ion-list>\n  </ion-item>\n\n  <div padding align="center">\n    <div padding>\n      <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n      <button ion-button type="Cancel">Cancel</button>\n    </div>\n  </div>\n</ion-content> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labprofiledemographic/labprofiledemographic.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], LabprofiledemographicPage);
    return LabprofiledemographicPage;
}());

//# sourceMappingURL=labprofiledemographic.js.map

/***/ }),

/***/ 264:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LabprofiledocumentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_file_path__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__laboratorydashboard_laboratorydashboard__ = __webpack_require__(99);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_photo_viewer__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the LabprofiledocumentPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LabprofiledocumentPage = /** @class */ (function () {
    function LabprofiledocumentPage(navCtrl, navParams, camera, actionSheetCrtl, tostCrtl, platform, filePath, file, photoViewer, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.camera = camera;
        this.actionSheetCrtl = actionSheetCrtl;
        this.tostCrtl = tostCrtl;
        this.platform = platform;
        this.filePath = filePath;
        this.file = file;
        this.photoViewer = photoViewer;
        this.api = api;
        this.formData = new FormData();
        this.isChkBoxAdharCardActive = false;
        this.isChkBoxPanCardActive = false;
        this.isChkBoxLicenseActive = false;
        // imageAadharCard: string = null
        // imagePancard: string = null
        // imageLicense: string = null
        this.profileDocument = {
            personID: "",
            perAadhaar: "",
            isAadhaarverified: "",
            perPANCard: "",
            isPerPANCardverified: "",
            perDriving: "",
            isPerDrivingLicense: "",
            perSSN: "",
            perSIN: "",
            perPANcardNo: "",
            perDrivingLicenseNo: "",
            perAadhaarCardNo: "",
            perAadhaarCardID: "",
            perPANcardID: "",
            perDrivingLicenseID: ""
        };
    }
    LabprofiledocumentPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad LabprofiledocumentPage");
        this.getDocumentData();
    };
    LabprofiledocumentPage.prototype.clickOnAdharCardChkBox = function () {
        this.isChkBoxAdharCardActive = !this.isChkBoxAdharCardActive;
        console.log("Cucumbers new state:" + this.isChkBoxAdharCardActive);
    };
    LabprofiledocumentPage.prototype.buttonClickForChooseIDs = function (type) {
        var _this = this;
        this.selectImageFor = type;
        Object(__WEBPACK_IMPORTED_MODULE_8__providers_commonfunction_commonfunction__["g" /* showActionSheetPhoto */])(this.actionSheetCrtl).then(function (seletedIndex) {
            _this.choosePhotoFromCameraOrGallery(seletedIndex);
        });
    };
    LabprofiledocumentPage.prototype.clickOnButtonSave = function () {
        // if (this.isChkBoxAdharCardActive && (this.profileDocument.perAadhaarCardID == "" || this.profileDocument.perAadhaarCardID == null)) {
        //   showToast("Please enter adhar card number", this.tostCrtl)
        // }
        // else if (this.isChkBoxPanCardActive && (this.profileDocument.perPANcardID == "" || this.profileDocument.perPANcardID == null)) {
        //   showToast("Please enter pan card number", this.tostCrtl)
        // }
        // else if (this.isChkBoxLicenseActive && (this.profileDocument.perDrivingLicenseID == "" || this.profileDocument.perDrivingLicenseID == null)) {
        //   showToast("Please enter license number", this.tostCrtl)
        // }
        console.log("ssn :- " +
            this.profileDocument.perSSN +
            "Sin" +
            this.profileDocument.perSIN);
        if (this.profileDocument.perSSN == "" ||
            this.profileDocument.perSSN == null) {
            Object(__WEBPACK_IMPORTED_MODULE_8__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter SSN No", this.tostCrtl);
        }
        else if (this.profileDocument.perSIN == "" ||
            this.profileDocument.perSIN == null) {
            Object(__WEBPACK_IMPORTED_MODULE_8__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter SIN No", this.tostCrtl);
        }
        else {
            this.callWebserviceUpdateDocuments();
        }
    };
    LabprofiledocumentPage.prototype.choosePhotoFromCameraOrGallery = function (sourceType) {
        var _this = this;
        var options = {
            quality: 100,
            destinationType: __WEBPACK_IMPORTED_MODULE_2__ionic_native_camera__["b" /* DestinationType */].FILE_URL,
            sourceType: sourceType,
            saveToPhotoAlbum: true,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (imagePath) {
            console.log("getPicture >> ", imagePath);
            console.log("getPicture >> ", imagePath);
            console.log("getPicture  normalizeURL(imagePath) >> ", Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            _this.saveImage(Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            if (_this.selectImageFor == 1) {
                _this.profileDocument.perAadhaarCardID = imagePath;
            }
            else if (_this.selectImageFor == 2) {
                _this.profileDocument.perPANcardID = imagePath;
            }
            else {
                _this.profileDocument.perDrivingLicenseID = imagePath;
            }
        }, function (err) {
            // Handle error
            alert(err);
        });
    };
    LabprofiledocumentPage.prototype.showPhoto = function (imagePath) {
        console.log("showPhoto clicked");
        this.photoViewer.show(imagePath);
    };
    LabprofiledocumentPage.prototype.callWebserviceUpdateDocuments = function () {
        var _this = this;
        this.formData.append("personID", this.profileDocument.personID);
        this.formData.append("isAadhaarverified", this.profileDocument.isAadhaarverified);
        this.formData.append("isPerDrivingLicense", this.profileDocument.isPerDrivingLicense);
        this.formData.append("isPerPANCardverified", this.profileDocument.isPerPANCardverified);
        this.formData.append("perSIN", this.profileDocument.perSIN);
        this.formData.append("perSSN", this.profileDocument.perSSN);
        console.log("perSIN :- " + this.profileDocument.perSIN);
        console.log("perSSN :- " + this.profileDocument.perSSN);
        console.log("Dataaaaaa :- " + JSON.stringify(this.formData));
        this.api
            .wsPostMutlipartHeader(__WEBPACK_IMPORTED_MODULE_8__providers_commonfunction_commonfunction__["a" /* APIName */].updateDocumentsPatientProfile, this.formData)
            .then(function (resp) {
            Object(__WEBPACK_IMPORTED_MODULE_8__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.tostCrtl);
        });
    };
    LabprofiledocumentPage.prototype.saveImage = function (imageFileUri) {
        var _this = this;
        this.file
            .resolveLocalFilesystemUrl(imageFileUri)
            .then(function (entry) {
            return entry.file(function (file) {
                _this.readFile(file);
            });
        })
            .catch(function (err) { return console.log(err); });
    };
    LabprofiledocumentPage.prototype.readFile = function (file) {
        var _this = this;
        var reader = new FileReader();
        reader.onloadend = function () {
            var imgBlob = new Blob([reader.result], { type: file.type });
            console.log("imgBlob >> ", imgBlob);
            if (_this.selectImageFor == 1) {
                _this.formData.append("perAadhaar", imgBlob, file.name);
            }
            else if (_this.selectImageFor == 2) {
                _this.formData.append("perDriving", imgBlob, file.name);
            }
            else {
                _this.formData.append("perPANCard", imgBlob, file.name);
            }
            // this.callWebserviceUpdateDocuments()
        };
        reader.readAsArrayBuffer(file);
    };
    LabprofiledocumentPage.prototype.getDocumentData = function () {
        var _this = this;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_8__providers_commonfunction_commonfunction__["a" /* APIName */].getDocumentsPatientProfile, "")
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("getDocumentData >> ", resp);
                // this.profileDocument = resp.data
                _this.profileDocument.personID = resp.data.personID;
                _this.profileDocument.perAadhaarCardNo = resp.data.perAadhaarCardNo;
                _this.profileDocument.perAadhaarCardID = resp.data.perAadhaarCardID;
                _this.profileDocument.perPANcardID = resp.data.perPANcardID;
                _this.profileDocument.perDrivingLicenseID =
                    resp.data.perDrivingLicenseID;
                _this.profileDocument.perDrivingLicenseNo =
                    resp.data.perDrivingLicenseNo;
                _this.profileDocument.perPANcardNo = resp.data.perPANcardNo;
                _this.profileDocument.perAadhaar = resp.data.perAadhaarCardID;
                _this.profileDocument.isAadhaarverified = resp.data.isAadhaarverified;
                _this.profileDocument.perPANCard = resp.data.perPANcardID;
                _this.profileDocument.isPerPANCardverified =
                    resp.data.isPerPANCardverified;
                _this.profileDocument.perDriving = resp.data.perDrivingLicenseID;
                _this.profileDocument.isPerDrivingLicense =
                    resp.data.isPerDrivingLicense;
                _this.profileDocument.perSIN = resp.data.perSIN;
                _this.profileDocument.perSSN = resp.data.perSSN;
                // this.profileDocument.perPANCardNo = resp.data.perAadhaarCardNo
                // this.profileDocument.perDrivingNo = resp.data.perDrivingLicenseNo
                // this.profileDocument.perAadhaarNo = resp.data.perPANcardNo
                /*this.formData.append('personID', this.profileDocument.personID)
              this.formData.append('isAadhaarverified', this.profileDocument.isAadhaarverified)
              this.formData.append('isPerDrivingLicense', this.profileDocument.isPerDrivingLicense)
              this.formData.append('isPerPANCardverified', this.profileDocument.isPerPANCardverified)
              this.formData.append('perSIN', this.profileDocument.perSIN)
              this.formData.append('perSSN', this.profileDocument.perSSN)*/
                // this.formData.append('perAadhaar', this.profileDocument.perAadhaarCardID)
                // this.formData.append('perDriving', this.profileDocument.perDrivingLicenseID)
                // this.formData.append('perPANCard', this.profileDocument.perPANcardID)
            }
        });
    };
    LabprofiledocumentPage.prototype.cancel = function () {
        console.log("cancel button clicked");
        this.navCtrl.parent.parent.push(__WEBPACK_IMPORTED_MODULE_5__laboratorydashboard_laboratorydashboard__["a" /* LaboratorydashboardPage */]);
    };
    LabprofiledocumentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-labprofiledocument",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labprofiledocument/labprofiledocument.html"*/'<!--\n  Generated template for the DoctorprofiledocumentPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header> </ion-header>\n\n<ion-content>\n  <div class="tab-pane" id="Documents">\n    <div class="documents">\n      <!-- doc no start -->\n      <div class="document-no bg-fff cmn-form no-input-efct">\n        <!-- <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">SSN No</label>\n            <input\n              type="number"\n              class="form-control"\n              name="ssnNo"\n              [(ngModel)]="profileDocument.perSSN"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">SIN No</label>\n            <input\n              type="number"\n              class="form-control"\n              name="ssnNo"\n              [(ngModel)]="profileDocument.perSIN"\n            />\n          </div>\n        </div> -->\n      </div>\n      <!-- doc no end -->\n      <!-- aadhar detail start -->\n      <div class="aadhar-dtl bg-fff cmn-form no-input-efct mt5">\n        <div class="dcmt-se-ttl">Aadhar Card</div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Aadhar No</label>\n            <input\n              type="text"\n              class="form-control"\n              name="aadharCardNumber"\n              [(ngModel)]="profileDocument.perAadhaarCardNo"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group cmn-file-upld mb-0 pt-30">\n            <div class="filename"></div>\n            <input\n              id="file-upld"\n              type="file"\n              class="form-control cmn-fl-input custom-file-input"\n              value=""\n            />\n            <label\n              class="custom-file-label bmd-label-floating"\n              (click)="buttonClickForChooseIDs(1)"\n              ><span class="lbl-txt">Upload File</span></label\n            >\n          </div>\n        </div>\n        <div class="preview-thumb pl15 pr15">\n          <div class="prvw-doc">\n            <img\n              src="{{profileDocument.perAadhaarCardID}}"\n              (click)="showPhoto(profileDocument.perAadhaarCardID)"\n              class="prvw-doc"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- aadhar detail end -->\n      <!-- Pan Card detail start -->\n      <div class="aadhar-dtl bg-fff cmn-form no-input-efct mt5">\n        <div class="dcmt-se-ttl">Pan Card</div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Pan No</label>\n            <input\n              type="text"\n              class="form-control"\n              name="panNumber"\n              [(ngModel)]="profileDocument.perPANcardNo"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group cmn-file-upld mb-0 pt-30">\n            <div class="filename"></div>\n            <input\n              id="pan-upld"\n              type="file"\n              class="form-control cmn-fl-input custom-file-input"\n              value=""\n            />\n            <label\n              (click)="buttonClickForChooseIDs(2)"\n              class="custom-file-label bmd-label-floating"\n              ><span class="lbl-txt">Upload File</span></label\n            >\n          </div>\n        </div>\n        <div class="preview-thumb pl15 pr15">\n          <div class="prvw-doc">\n            <img\n              src="{{profileDocument.perPANcardID}}"\n              (click)="showPhoto(profileDocument.perPANcardID)"\n              class="prvw-doc"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Pan Card detail end -->\n      <!-- License detail start -->\n      <div class="aadhar-dtl bg-fff cmn-form no-input-efct mt5">\n        <div class="dcmt-se-ttl">License</div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">License No</label>\n            <input\n              type="text"\n              class="form-control"\n              name="licenseNumber"\n              [(ngModel)]="profileDocument.perDrivingLicenseNo"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group cmn-file-upld mb-0 pt-30">\n            <div class="filename"></div>\n            <input\n              id="license-upld"\n              type="file"\n              class="form-control cmn-fl-input custom-file-input"\n              value=""\n            />\n            <label\n              (click)="buttonClickForChooseIDs(3)"\n              class="custom-file-label bmd-label-floating"\n              ><span class="lbl-txt">Upload File</span></label\n            >\n          </div>\n        </div>\n        <div class="preview-thumb pl15 pr15">\n          <div class="prvw-doc">\n            <img\n              src="{{profileDocument.perDrivingLicenseID}}"\n              (click)="showPhoto(profileDocument.perDrivingLicenseID)"\n              class="prvw-doc"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- License detail end -->\n      <div class="form-button bg-gray mb-20 pt-25 text-center">\n        <button class="btn cmn-thm-btn mr-25" (click)="clickOnButtonSave()">\n          SAVE\n        </button>\n        <button type="button" class="btn  cmn-wht-btn" (click)="cancel()">\n          CANCEL\n        </button>\n      </div>\n    </div>\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labprofiledocument/labprofiledocument.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_file_path__["a" /* FilePath */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_photo_viewer__["a" /* PhotoViewer */],
            __WEBPACK_IMPORTED_MODULE_4__providers_api_api__["a" /* ApiProvider */]])
    ], LabprofiledocumentPage);
    return LabprofiledocumentPage;
}());

//# sourceMappingURL=labprofiledocument.js.map

/***/ }),

/***/ 265:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReportfeeslistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__addreportfees_addreportfees__ = __webpack_require__(257);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__editreportfees_editreportfees__ = __webpack_require__(258);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var ReportfeeslistPage = /** @class */ (function () {
    function ReportfeeslistPage(navCtrl, navParams, api, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.appointmentTodayItems = [];
        this.reportFeesList = [];
        this.reportFeesListData = [];
    }
    ReportfeeslistPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        this.reportFeesList = this.appointmentTodayItems;
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getLabReportMaster, "").then(function (resp) {
            _this.appointmentTodayItems = resp.data.labReportMasterPojo;
            _this.reportFeesListData = resp.data.labReportMasterPojo;
            _this.reportFeesList = resp.data.labReportMasterPojo;
        });
    };
    ReportfeeslistPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__addreportfees_addreportfees__["a" /* AddreportfeesPage */]);
    };
    ReportfeeslistPage.prototype.editreportfees = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__editreportfees_editreportfees__["a" /* EditreportfeesPage */], { id: item.reportId });
    };
    ReportfeeslistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-reportfeeslist",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/reportfeeslist/reportfeeslist.html"*/'<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Report Fees List</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="cmn-list">\n    <div\n      class="cmn-apmnt-row clearfix"\n      #slidingItem\n      *ngFor="let item of reportFeesList"\n    >\n      <div class="apmn-lft">\n        <div class="dr-name">Report Name : {{ item.reportName }}</div>\n        <div class="dr-name">Cost : {{ item.costperreport }}</div>\n        <button ion-button (click)="editreportfees(item)">Edit</button>\n      </div>\n    </div>\n  </div>\n\n  <ion-fab bottom right>\n    <button class="cmn-create-btn" ion-fab (click)="addItem()">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n</ion-content>\n\n<!-- <div class="cmn-list-page">\n  <ion-list class="cmn-tb-cntnt">\n    <ion-item-sliding #slidingItem *ngFor="let item of reportFeesList">\n      <ion-item>\n        <div class="ptnt-name">Report Name : {{ item.reportName }}</div>\n        <div class="ptnt-name">Cost : {{ item.costperreport }}</div>\n        <button ion-button (click)="editreportfees(item)">Edit</button>\n      </ion-item>\n    </ion-item-sliding>\n  </ion-list>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/reportfeeslist/reportfeeslist.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], ReportfeeslistPage);
    return ReportfeeslistPage;
}());

//# sourceMappingURL=reportfeeslist.js.map

/***/ }),

/***/ 266:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ListmedicineinventoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__medicineinventory_medicineinventory__ = __webpack_require__(267);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__editemedicineinventory_editemedicineinventory__ = __webpack_require__(247);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the ListmedicineinventoryPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ListmedicineinventoryPage = /** @class */ (function () {
    function ListmedicineinventoryPage(navCtrl, navParams, api, alertCtrl, datepipe) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.datepipe = datepipe;
        this.appointmentTodayItemes = [];
        this.currentAppointlist = [];
        this.medicineinventorylist = [];
        this.currentAppointlist = this.appointmentTodayItemes;
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "MedicalCenter") {
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].getlistmedicineinventory, "").then(function (resp) {
                _this.medicineinventorylist = resp.data.medicineinventorylistpojo;
            });
        }
    }
    ListmedicineinventoryPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ListmedicineinventoryPage');
    };
    ListmedicineinventoryPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__medicineinventory_medicineinventory__["a" /* MedicineinventoryPage */]);
    };
    ListmedicineinventoryPage.prototype.editItem = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__editemedicineinventory_editemedicineinventory__["a" /* EditemedicineinventoryPage */], { id: item.medicineId });
    };
    ListmedicineinventoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-listmedicineinventory',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/listmedicineinventory/listmedicineinventory.html"*/'<!--\n  Generated template for the AppointmentlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>List Medicine Inventory</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="cmn-list-page">\n    <div *ngIf="selectRole == \'MedicalCenter\'">\n      <div\n        class="cmn-apmnt-row w-100 clearfix"\n        #slidingItem\n        *ngFor="let item of medicineinventorylist"\n      >\n        <div>\n          <div class="apmn-lft">\n            <div class="dr-name">{{ item.medicineName }}</div>\n            <div class="dr-name">{{ item.medicineQuantity }}</div>\n            <div class="dr-name">${{item.costpermedicine}}</div>\n            <button right ion-button (click)="editItem(item)">Edit</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ion-fab bottom right>\n    <button class="cmn-create-btn" (click)="addItem()">\n      <ion-icon name="add"></ion-icon>Add Medicine List\n    </button>\n  </ion-fab>\n</ion-content>\n\n<!-- <div class="cmn-list-page">\n  <ion-list class="cmn-tb-cntnt" *ngIf="selectRole == \'MedicalCenter\'">\n    <ion-item-sliding #slidingItem *ngFor="let item of medicineinventorylist">\n      <ion-item>\n        <div class="apmnt-medicinename">{{item.medicineName}}</div>\n        <div class="apmt-medicinequintity">{{item.medicineQuantity}}</div>\n        <div class="apmt-costpermedicine">${{item.costpermedicine}}</div>\n        <button right ion-button (click)="editItem(item)">Edit</button>\n      </ion-item>\n    </ion-item-sliding>\n  </ion-list>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/listmedicineinventory/listmedicineinventory.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_3__angular_common__["d" /* DatePipe */]])
    ], ListmedicineinventoryPage);
    return ListmedicineinventoryPage;
}());

//# sourceMappingURL=listmedicineinventory.js.map

/***/ }),

/***/ 267:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MedicineinventoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the MedicineinventoryPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MedicineinventoryPage = /** @class */ (function () {
    function MedicineinventoryPage(navCtrl, navParams, api, toastCtrl, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.toastCtrl = toastCtrl;
        this.alertCtrl = alertCtrl;
        this.batchno = "";
        this.medicineinventory = [];
        this.item = [];
    }
    MedicineinventoryPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        console.log("ionViewDidLoad MedicineinventoryPage");
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getallmedicineinventory, "")
            .then(function (resp) {
            _this.medicineinventory = resp.data;
            _this.MedicineRequired = _this.medicineinventory[0].drugCompoundName;
        });
        console.log("ionViewDidLoad MedicineinventoryPage");
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getallmedicineinventory, "")
            .then(function (resp) {
            _this.medicineinventory = resp.data;
            _this.MedicineRequired = _this.medicineinventory[0].drugCompoundName;
            _this.MedicineRequired = _this.medicineinventory[0].drugCompoundDiscription;
            _this.MedicineRequired = _this.medicineinventory[0].drugCompoundShortCode1;
            _this.MedicineRequired = _this.medicineinventory[0].drugCompoundShortCode2;
            _this.MedicineRequired = _this.medicineinventory[0].drugCompoundDiscountPrise;
            _this.MedicineRequired = _this.medicineinventory[0].drugCompoundCreatedDate;
        });
    };
    MedicineinventoryPage.prototype.callAddAppointmentApi = function () {
        var _this = this;
        if (this.medicinequintity == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Medicine Quentety", this.toastCtrl);
            return;
        }
        if (this.costpermedicine == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Cost per Medicine", this.toastCtrl);
            return;
        }
        if (this.MedicineRequired.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Medicine Inventory ", this.toastCtrl);
            return;
        }
        var date = new Date(this.expirydate);
        var datetopass = date.getTime();
        var data = {
            medicineQuantity: Number(this.medicinequintity),
            costpermedicine: Number(this.costpermedicine),
            medicineName: this.MedicineRequired,
            batchno: this.batchno,
            expirydate: datetopass
        };
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].postaddmedicineinventory, data)
            .then(function (resp) {
            if (resp.status === 500) {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("" + resp.message, _this.toastCtrl);
                _this.navCtrl.pop();
            }
        });
        // this.makePayment();
        // this.makePaymentPlugin();
    };
    MedicineinventoryPage.prototype.addnewmedicine = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Add New Medicine",
            inputs: [
                {
                    name: "NewMedicineName",
                    placeholder: "New Medicine Name"
                },
                {
                    name: "NewMedicineMFR_MK",
                    placeholder: "New Medicine MFR/MK"
                },
                {
                    name: "NewMedicineMSN",
                    placeholder: "New Medicine MSN"
                }
            ],
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "SAVE",
                    handler: function (data1) {
                        console.log("Ok clicked");
                        var data = JSON.stringify({
                            drugCompoundName: data1.NewMedicineName,
                            mfrmk: data1.NewMedicineMFR_MK,
                            msn: data1.NewMedicineMSN
                        });
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].postaddnewmedicinename, data)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
                            }
                            else {
                                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("" + resp.message, _this.toastCtrl);
                                _this.navCtrl.pop();
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    MedicineinventoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-medicineinventory",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/medicineinventory/medicineinventory.html"*/'<!--\n  Generated template for the MedicineinventoryPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>Medicine Inventory</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-item>\n    <ion-label floating>Medicine Required</ion-label>\n    <ion-select\n      placeholder=""\n      [(ngModel)]="MedicineRequired"\n      name="MedicineRequired"\n    >\n      <ion-option\n        *ngFor="let category of medicineinventory; let idx = index"\n        [value]="category.drugCompoundName"\n      \n        >{{ category.drugCompoundName }}</ion-option\n      >\n    </ion-select>\n  </ion-item>\n <!-- selected="{{ (idx == 0).drugCompoundName}}" -->\n  <ion-item>\n    <ion-label color="" floating>Medicine quntity</ion-label>\n    <ion-input\n      type="number"\n      [(ngModel)]="medicinequintity"\n      name="Medicinequntity"\n    ></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label color="" floating>Cost Per Medicine </ion-label>\n    <ion-input\n      type="number"\n      [(ngModel)]="costpermedicine"\n      name="costpermedicine"\n    ></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label color="" floating>Medicine BatchNo</ion-label>\n    <ion-input\n      type="string"\n      [(ngModel)]="batchno"\n      name="medicinebatchno"\n    ></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label color="" floating>Medicine Expiry Date</ion-label>\n    <ion-datetime\n      displayFormat="DD MMMM YYYY"\n      pickerFormat="DD MMMM YYYY"\n      name="expirydate"\n      [(ngModel)]="expirydate"\n    ></ion-datetime>\n    <span class="input-icon"><img src="assets/images/date.png"/></span>\n  </ion-item>\n\n  <div class="form-button bg-gray pt-25 text-center">\n    <button\n      type="button"\n      class="cmn-thm-btn mr-25"\n      (click)="callAddAppointmentApi()"\n    >\n      Save\n    </button>\n    <button type="button" class="cmn-wht-btn" (click)="addnewmedicine()">\n      Add New Medicine\n    </button>\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/medicineinventory/medicineinventory.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], MedicineinventoryPage);
    return MedicineinventoryPage;
}());

//# sourceMappingURL=medicineinventory.js.map

/***/ }),

/***/ 268:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MedicalchangepasswordPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the MedicalchangepasswordPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MedicalchangepasswordPage = /** @class */ (function () {
    function MedicalchangepasswordPage(navCtrl, toastCtrl, api) {
        this.navCtrl = navCtrl;
        this.toastCtrl = toastCtrl;
        this.api = api;
    }
    MedicalchangepasswordPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ChangepasswordPage');
    };
    MedicalchangepasswordPage.prototype.changePasswordBtn = function () {
        if (this.currentPwd == "" || this.currentPwd == undefined) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter current password", this.toastCtrl);
        }
        else if (this.currentPwd.length < 6) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Current passwords must be at least 6 characters long", this.toastCtrl);
        }
        else if (this.newPwd == "" || this.newPwd == undefined) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter new password", this.toastCtrl);
        }
        else if (this.newPwd.length < 6) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("New passwords must be at least 6 characters long", this.toastCtrl);
        }
        else if (this.newPwd == this.currentPwd) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Current password and New password should not be match", this.toastCtrl);
        }
        else if (this.confirmPwd == "" || this.confirmPwd == undefined) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter confirm password", this.toastCtrl);
        }
        else if (this.confirmPwd.length < 6) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Confirm passwords must be at least 6 characters long", this.toastCtrl);
        }
        else if (this.newPwd != this.confirmPwd) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("New password and Confirm password does not match", this.toastCtrl);
        }
        else {
            var param = {
                "oldPassword": this.currentPwd,
                "userPassword": this.newPwd,
            };
            this.callChangePasswordService(param);
        }
    };
    MedicalchangepasswordPage.prototype.callChangePasswordService = function (param) {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].changePassword, param)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
            }
        });
    };
    MedicalchangepasswordPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-medicalchangepassword',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/medicalchangepassword/medicalchangepassword.html"*/'<!--\n  Generated template for the MedicalchangepasswordPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n</ion-header>\n\n\n<ion-content padding>\n   \n      <ion-item>\n        <ion-label floating>Current Password</ion-label>\n        <ion-input [(ngModel)]="currentPwd" type="password" ></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label floating>New Password</ion-label>\n        <ion-input [(ngModel)]="newPwd" type="password" ></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label floating>Confirm Password</ion-label>\n        <ion-input [(ngModel)]="confirmPwd" type="password" ></ion-input>\n      </ion-item>\n\n      <div padding>\n        <div padding>\n          <button ion-button type="submit" (click)="changePasswordBtn()" block>Change Password</button>\n        </div>\n      </div>\n  \n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/medicalchangepassword/medicalchangepassword.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */], __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */]])
    ], MedicalchangepasswordPage);
    return MedicalchangepasswordPage;
}());

//# sourceMappingURL=medicalchangepassword.js.map

/***/ }),

/***/ 269:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MedicalprofilebasicdetailPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the MedicalprofilebasicdetailPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MedicalprofilebasicdetailPage = /** @class */ (function () {
    function MedicalprofilebasicdetailPage(navCtrl, navParams, toastCtrl, api, alertctrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.toastCtrl = toastCtrl;
        this.api = api;
        this.alertctrl = alertctrl;
        this.emailValidation = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\",this.toastCtrl);)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        this.nameValidation = /[^a-zA-Z]/;
        this.profileMedical = {
            medicalEmailLists: [],
            medicalID: '',
            medicalName: '',
            medicalEmailPrimary: ''
        };
    }
    MedicalprofilebasicdetailPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad PatientprofileMedicalPage');
        //  this.getPersonalData()
    };
    MedicalprofilebasicdetailPage.prototype.submitDetails = function () {
        // if (this.profileMedical.username.length == 0) {
        //   showToast("Please Enter User name", this.toastCtrl);
        //   return
        // }
        // if (this.nameValidation.test(this.profileMedical.userName)) {
        //   showToast("Please Enter valid username", this.toastCtrl);
        //   return
        // }
        if (this.profileMedical.medicalName.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Pharmacyname", this.toastCtrl);
            return;
        }
        else if (this.nameValidation.test(this.profileMedical.medicalName)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Pharmacyname", this.toastCtrl);
            return;
        }
        else if (this.profileMedical.medicalEmailPrimary.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter email", this.toastCtrl);
            return;
        }
        else if (!this.emailValidation.test(this.profileMedical.medicalEmailPrimary)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Email Address", this.toastCtrl);
            return;
        }
        //this.callWebserviceUpdatePersonalDetails()
    };
    MedicalprofilebasicdetailPage.prototype.getPersonalData = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getPersonalPatientProfile, '')
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("getPersonalData >> ", resp);
                _this.profileMedical.medicalID = resp.medicalID;
                _this.profileMedical.medicalName = resp.medicalName;
                _this.profileMedical.medicalEmailPrimary = resp.medicalEmailPrimary;
                if (resp.medicalEmailLists[0] != null && resp.medicalEmailLists[0] != '[]') {
                    _this.profileMedical.medicalEmailLists = resp.medicalEmailLists;
                }
            }
        });
    };
    MedicalprofilebasicdetailPage.prototype.callWebserviceUpdatePersonalDetails = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].updatePersonalPatientProfile, this.profileMedical)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
            }
        });
    };
    MedicalprofilebasicdetailPage.prototype.addtoList = function () {
        if (!this.emailValidation.test(this.secondaryEmail)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Email Address", this.toastCtrl);
            return;
        }
        this.profileMedical.medicalEmailLists.push(this.secondaryEmail);
        this.secondaryEmail = "";
    };
    MedicalprofilebasicdetailPage.prototype.deleteelement = function (list) {
        var _this = this;
        var alert = this.alertctrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this email?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.profileMedical.medicalEmailLists.indexOf(list);
                        if (index > -1) {
                            _this.profileMedical.medicalEmailLists.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    MedicalprofilebasicdetailPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-medicalprofilebasicdetail',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/medicalprofilebasicdetail/medicalprofilebasicdetail.html"*/'<!--\n  Generated template for the PatientprofilepersonalPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n</ion-header>\n\n\n<ion-content padding>\n  <!-- <ion-item>\n    <ion-label floating>Username</ion-label>\n    <ion-input [(ngModel)]="profilePersonal.username" type="text"></ion-input>\n  </ion-item> -->\n  <ion-item>\n    <ion-label floating>Pharmacy Name</ion-label>\n    <ion-input [(ngModel)]="profileMedical.medicalName" type="text"></ion-input>\n  </ion-item>\n \n\n  <ion-item>\n    <ion-label floating>Email</ion-label>\n    <ion-input [(ngModel)]="profileMedical.medicalEmailPrimary" type="text"></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label floating>Secondary Email</ion-label>\n    <ion-input type="text" [(ngModel)]="secondaryEmail"></ion-input>\n  </ion-item>\n\n  <button ion-button (click)="addtoList()">Add</button>\n\n  <ion-item>\n    <ion-list>\n      <ion-item *ngFor="let list of profileMedical.medicalEmailLists">\n        {{list}}\n        <ion-icon class="trashicon" (click)="deleteelement(list)" name="trash" data-ng-if="(profileMedical.medicalEmailLists.length > 0)"></ion-icon>\n      </ion-item>\n    </ion-list>\n  </ion-item>\n  <ion-item>\n    <ion-label floating>Additional Information</ion-label>\n    <ion-input [(ngModel)]="profileMedical.additionalInformation" type="text"></ion-input>\n  </ion-item>\n  <div padding align="center">\n    <div padding>\n      <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n      <button ion-button type="Cancel">Cancel</button>\n    </div>\n  </div>\n\n</ion-content>'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/medicalprofilebasicdetail/medicalprofilebasicdetail.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], MedicalprofilebasicdetailPage);
    return MedicalprofilebasicdetailPage;
}());

//# sourceMappingURL=medicalprofilebasicdetail.js.map

/***/ }),

/***/ 270:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MedicalprofiledemographicPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the MedicalprofiledemographicPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MedicalprofiledemographicPage = /** @class */ (function () {
    function MedicalprofiledemographicPage(navCtrl, navParams, api, alertCtrl, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.toastCtrl = toastCtrl;
        this.mobileNumberValidation = /^[0-9]{10}$/;
        this.locationArray = [];
        this.states = [
            {
                title: 'States',
                id: 1
            },
            {
                title: 'Gujarat',
                id: 2
            }
        ];
        this.selectedState = this.states[0];
        this.countries = [
            {
                title: 'Country',
                id: 1
            },
            {
                title: 'India',
                id: 2
            },
            {
                title: 'Greece',
                id: 3
            },
            {
                title: 'Tonga',
                id: 4
            }
        ];
        this.selectedCountry = this.countries[0];
        this.demographicProfile = {
            perMobileList: [],
            addressLine1: '',
            addressLine2: '',
            addressLine3: '',
            zipcode: '',
            state: '',
            country: '',
            phone: ''
        };
    }
    MedicalprofiledemographicPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ProfiledemographicPage');
        this.getAllLocations();
    };
    /**
     * get list of cities
     */
    MedicalprofiledemographicPage.prototype.getAllLocations = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getLocations, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.locationArray = resp;
                _this.selectedLocation = _this.locationArray[0].locationID;
                console.log("location array 0 item", _this.locationArray[0].locationID);
            }
        });
    };
    MedicalprofiledemographicPage.prototype.getDemographicData = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getDemographicData, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.locationArray = resp;
                _this.selectedLocation = _this.locationArray[0].locationID;
                console.log("location array 0 item", _this.locationArray[0].locationID);
                if (resp.perMobileList[0] != null) {
                    _this.demographicProfile.perMobileList = resp.perMobileList;
                }
            }
        });
    };
    MedicalprofiledemographicPage.prototype.updatePatientDemographicProfile = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].updatePatientDemographicProfile, this.demographicProfile).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.demographicProfile = resp;
                console.log("demographicProfile", resp);
            }
        });
    };
    MedicalprofiledemographicPage.prototype.showlocation = function (locationID) {
        console.log("locationid >> " + locationID);
        this.selectedLocation = locationID;
    };
    MedicalprofiledemographicPage.prototype.addAddress = function () {
    };
    MedicalprofiledemographicPage.prototype.submitDetails = function () {
    };
    MedicalprofiledemographicPage.prototype.addtoList = function () {
        if (!this.mobileNumberValidation.test(this.secondaryPhone)) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid phone number", this.toastCtrl);
            return;
        }
        this.demographicProfile.perMobileList.push(this.secondaryPhone);
        this.secondaryPhone = '';
    };
    MedicalprofiledemographicPage.prototype.deleteelement = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this phone number?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.demographicProfile.perMobileList.indexOf(list);
                        if (index > -1) {
                            _this.demographicProfile.perMobileList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    MedicalprofiledemographicPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-medicalprofiledemographic',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/medicalprofiledemographic/medicalprofiledemographic.html"*/'<!--\n  Generated template for the ProfiledemographicPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n</ion-header>\n\n\n<ion-content padding>\n\n  <ion-item>\n    <ion-label floating>Address Line 1</ion-label>\n    <ion-input [(ngModel)]="demographicProfile.addressLine1" type="text"></ion-input>\n  </ion-item>\n  <ion-item>\n    <ion-label floating>Address Line 2</ion-label>\n    <ion-input [(ngModel)]="demographicProfile.addressLine2" type="text"></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label floating>Address Line 3</ion-label>\n    <ion-input [(ngModel)]="demographicProfile.addressLine3" type="text"></ion-input>\n  </ion-item>\n\n  \n\n  <ion-item>\n    <ion-label floating>ZipCode</ion-label>\n    <ion-input [(ngModel)]="demographicProfile.zipcode" type="text"></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-select [(ngModel)]="selectedCountry">\n      <ion-label floating>Select Country</ion-label>\n      <ion-option *ngFor="let country of countries;" [value]="country">{{country.title}}</ion-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-item>\n    <ion-select [(ngModel)]="selectedState">\n      <ion-label floating>Select State</ion-label>\n      <ion-option *ngFor="let state of states;" [value]="state">{{state.title}}</ion-option>\n    </ion-select>\n  </ion-item>\n\n  <ion-item>\n    <ion-select [(ngModel)]="selectedLocation" (ionChange)="showlocation($event)">\n      <ion-label floating>Select Location</ion-label>\n      <ion-option *ngFor="let location of locationArray; let idx = index" selected="{{(idx==0).locationID}}" [value]="location.locationID">{{location.city}}</ion-option>\n    </ion-select>\n  </ion-item>\n  \n  <div padding align="center">\n    <button ion-button type="submit" (click)="addAddress()" block>Add New Address</button>\n  </div>\n\n  <ion-item>\n    <ion-label floating>Phone</ion-label>\n    <ion-input [(ngModel)]="demographicProfile.phone" type="number"></ion-input>\n  </ion-item>\n\n\n  <ion-item>\n      <ion-label floating>Secondary Phone</ion-label>\n      <ion-input type="number" [(ngModel)]="secondaryPhone"></ion-input>\n    </ion-item>\n  \n    <button ion-button (click)="addtoList()">Add</button>\n  \n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of demographicProfile.perMobileList">\n          {{list}}\n          <ion-icon class="trashicon" (click)="deleteelement(list)" name="trash" data-ng-if="(demographicProfile.perMobileList.length > 0)"></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n\n  <div padding align="center">\n    <div padding>\n      <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n      <button ion-button type="Cancel">Cancel</button>\n    </div>\n  </div>\n</ion-content>'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/medicalprofiledemographic/medicalprofiledemographic.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], MedicalprofiledemographicPage);
    return MedicalprofiledemographicPage;
}());

//# sourceMappingURL=medicalprofiledemographic.js.map

/***/ }),

/***/ 271:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MedicalprofileprofessionalPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * Generated class for the MedicalprofileprofessionalPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MedicalprofileprofessionalPage = /** @class */ (function () {
    function MedicalprofileprofessionalPage(navCtrl, navParams, api, alertCtrl, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.toastCtrl = toastCtrl;
        this.mobileNumberValidation = /^[0-9]{10}$/;
        this.professionalProfile = {
            associatedPharmacyList: [],
            associatedHospitalList: [],
            associatedDoctorList: [],
        };
    }
    MedicalprofileprofessionalPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ProfiledemographicPage');
    };
    MedicalprofileprofessionalPage.prototype.submitDetails = function () {
    };
    MedicalprofileprofessionalPage.prototype.addtoListPharmacy = function () {
        this.professionalProfile.associatedPharmacyList.push(this.associatedPharmacy);
        this.associatedPharmacy = '';
    };
    MedicalprofileprofessionalPage.prototype.deleteelementPharmacy = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Pharmacy?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.professionalProfile.associatedPharmacyList.indexOf(list);
                        if (index > -1) {
                            _this.professionalProfile.associatedPharmacyList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    MedicalprofileprofessionalPage.prototype.addtoListHospital = function () {
        this.professionalProfile.associatedHospitalList.push(this.associatedHospital);
        this.associatedHospital = '';
    };
    MedicalprofileprofessionalPage.prototype.deleteelementHospital = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Hospital?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.professionalProfile.associatedHospitalList.indexOf(list);
                        if (index > -1) {
                            _this.professionalProfile.associatedHospitalList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    MedicalprofileprofessionalPage.prototype.addtoListDoctor = function () {
        this.professionalProfile.associatedDoctorList.push(this.associatedDoctor);
        this.associatedDoctor = '';
    };
    MedicalprofileprofessionalPage.prototype.deleteelementDoctor = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Doctor?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.professionalProfile.associatedDoctorList.indexOf(list);
                        if (index > -1) {
                            _this.professionalProfile.associatedDoctorList.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    MedicalprofileprofessionalPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-medicalprofileprofessional',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/medicalprofileprofessional/medicalprofileprofessional.html"*/'<!--\n  Generated template for the ProfiledemographicPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n</ion-header>\n\n\n<ion-content padding>\n\n  \n<ion-item>\n      <ion-label floating>Associated Pharmacy</ion-label>\n      <ion-input type="text" [(ngModel)]="associatedPharmacy"></ion-input>\n    </ion-item>\n  \n    <button ion-button (click)="addtoListPharmacy()">Add Pharmacy</button>\n  \n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of professionalProfile.associatedPharmacyList">\n          {{list}}\n          <ion-icon class="trashicon" (click)="deleteelementPharmacy(list)" name="trash" data-ng-if="(professionalProfile.associatedPharmacyList.length > 0)"></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n\n\n    <ion-item>\n      <ion-label floating>Associated Hospital</ion-label>\n      <ion-input type="text" [(ngModel)]="associatedHospital"></ion-input>\n    </ion-item>\n  \n    <button ion-button (click)="addtoListHospital()">Add Hospital</button>\n  \n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of professionalProfile.associatedHospitalList">\n          {{list}}\n          <ion-icon class="trashicon" (click)="deleteelementHospital(list)" name="trash" data-ng-if="(professionalProfile.associatedHospitalList.length > 0)"></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n\n    <ion-item>\n      <ion-label floating>Associated Doctor</ion-label>\n      <ion-input type="text" [(ngModel)]="associatedDoctor"></ion-input>\n    </ion-item>\n  \n    <button ion-button (click)="addtoListDoctor()">Add Doctor</button>\n  \n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of professionalProfile.associatedDoctorList">\n          {{list}}\n          <ion-icon class="trashicon" (click)="deleteelementDoctor(list)" name="trash" data-ng-if="(professionalProfile.associatedDoctorList.length > 0)"></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n\n  <div padding align="center">\n    <div padding>\n      <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n      <button ion-button type="Cancel">Cancel</button>\n    </div>\n  </div>\n</ion-content>'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/medicalprofileprofessional/medicalprofileprofessional.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], MedicalprofileprofessionalPage);
    return MedicalprofileprofessionalPage;
}());

//# sourceMappingURL=medicalprofileprofessional.js.map

/***/ }),

/***/ 272:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MedicalstoreprofiledocumentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_file_path__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_photo_viewer__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__dash_board_for_medicalstore_dash_board_for_medicalstore__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_file__ = __webpack_require__(34);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the MedicalstoreprofiledocumentPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MedicalstoreprofiledocumentPage = /** @class */ (function () {
    function MedicalstoreprofiledocumentPage(navCtrl, navParams, camera, actionSheetCrtl, tostCrtl, platform, filePath, file, photoViewer, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.camera = camera;
        this.actionSheetCrtl = actionSheetCrtl;
        this.tostCrtl = tostCrtl;
        this.platform = platform;
        this.filePath = filePath;
        this.file = file;
        this.photoViewer = photoViewer;
        this.api = api;
        this.formData = new FormData();
        this.isChkBoxAdharCardActive = false;
        this.isChkBoxPanCardActive = false;
        this.isChkBoxLicenseActive = false;
        // imageAadharCard: string = null
        // imagePancard: string = null
        // imageLicense: string = null
        this.profileDocument = {
            personID: "",
            perAadhaar: "",
            isAadhaarverified: "",
            perPANCard: "",
            isPerPANCardverified: "",
            perDriving: "",
            isPerDrivingLicense: "",
            perSSN: "",
            perSIN: "",
            perPANcardNo: "",
            perDrivingLicenseNo: "",
            perAadhaarCardNo: "",
            perAadhaarCardID: "",
            perPANcardID: "",
            perDrivingLicenseID: ""
        };
    }
    MedicalstoreprofiledocumentPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad MedicalstoreprofiledocumentPage");
    };
    MedicalstoreprofiledocumentPage.prototype.clickOnAdharCardChkBox = function () {
        this.isChkBoxAdharCardActive = !this.isChkBoxAdharCardActive;
        console.log("Cucumbers new state:" + this.isChkBoxAdharCardActive);
    };
    MedicalstoreprofiledocumentPage.prototype.buttonClickForChooseIDs = function (type) {
        var _this = this;
        this.selectImageFor = type;
        Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["g" /* showActionSheetPhoto */])(this.actionSheetCrtl).then(function (seletedIndex) {
            _this.choosePhotoFromCameraOrGallery(seletedIndex);
        });
    };
    MedicalstoreprofiledocumentPage.prototype.clickOnButtonSave = function () {
        // if (this.isChkBoxAdharCardActive && (this.profileDocument.perAadhaarCardID == "" || this.profileDocument.perAadhaarCardID == null)) {
        //   showToast("Please enter adhar card number", this.tostCrtl)
        // }
        // else if (this.isChkBoxPanCardActive && (this.profileDocument.perPANcardID == "" || this.profileDocument.perPANcardID == null)) {
        //   showToast("Please enter pan card number", this.tostCrtl)
        // }
        // else if (this.isChkBoxLicenseActive && (this.profileDocument.perDrivingLicenseID == "" || this.profileDocument.perDrivingLicenseID == null)) {
        //   showToast("Please enter license number", this.tostCrtl)
        // }
        console.log("ssn :- " +
            this.profileDocument.perSSN +
            "Sin" +
            this.profileDocument.perSIN);
        if (this.profileDocument.perSSN == "" ||
            this.profileDocument.perSSN == null) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter SSN No", this.tostCrtl);
        }
        else if (this.profileDocument.perSIN == "" ||
            this.profileDocument.perSIN == null) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter SIN No", this.tostCrtl);
        }
        else {
            this.callWebserviceUpdateDocuments();
        }
    };
    MedicalstoreprofiledocumentPage.prototype.choosePhotoFromCameraOrGallery = function (sourceType) {
        var _this = this;
        var options = {
            quality: 100,
            destinationType: __WEBPACK_IMPORTED_MODULE_2__ionic_native_camera__["b" /* DestinationType */].FILE_URL,
            sourceType: sourceType,
            saveToPhotoAlbum: true,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (imagePath) {
            console.log("getPicture >> ", imagePath);
            console.log("getPicture >> ", imagePath);
            console.log("getPicture  normalizeURL(imagePath) >> ", Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            _this.saveImage(Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            if (_this.selectImageFor == 1) {
                _this.profileDocument.perAadhaarCardID = imagePath;
            }
            else if (_this.selectImageFor == 2) {
                _this.profileDocument.perPANcardID = imagePath;
            }
            else {
                _this.profileDocument.perDrivingLicenseID = imagePath;
            }
        }, function (err) {
            // Handle error
            alert(err);
        });
    };
    MedicalstoreprofiledocumentPage.prototype.showPhoto = function (imagePath) {
        console.log("showPhoto clicked");
        this.photoViewer.show(imagePath);
    };
    MedicalstoreprofiledocumentPage.prototype.callWebserviceUpdateDocuments = function () {
        var _this = this;
        this.formData.append("personID", this.profileDocument.personID);
        this.formData.append("isAadhaarverified", this.profileDocument.isAadhaarverified);
        this.formData.append("isPerDrivingLicense", this.profileDocument.isPerDrivingLicense);
        this.formData.append("isPerPANCardverified", this.profileDocument.isPerPANCardverified);
        this.formData.append("perSIN", this.profileDocument.perSIN);
        this.formData.append("perSSN", this.profileDocument.perSSN);
        console.log("perSIN :- " + this.profileDocument.perSIN);
        console.log("perSSN :- " + this.profileDocument.perSSN);
        console.log("Dataaaaaa :- " + JSON.stringify(this.formData));
        this.api
            .wsPostMutlipartHeader(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["a" /* APIName */].updateDocumentsPatientProfile, this.formData)
            .then(function (resp) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.tostCrtl);
        });
    };
    MedicalstoreprofiledocumentPage.prototype.saveImage = function (imageFileUri) {
        var _this = this;
        this.file
            .resolveLocalFilesystemUrl(imageFileUri)
            .then(function (entry) {
            return entry.file(function (file) {
                _this.readFile(file);
            });
        })
            .catch(function (err) { return console.log(err); });
    };
    MedicalstoreprofiledocumentPage.prototype.readFile = function (file) {
        var _this = this;
        var reader = new FileReader();
        reader.onloadend = function () {
            var imgBlob = new Blob([reader.result], { type: file.type });
            console.log("imgBlob >> ", imgBlob);
            if (_this.selectImageFor == 1) {
                _this.formData.append("perAadhaar", imgBlob, file.name);
            }
            else if (_this.selectImageFor == 2) {
                _this.formData.append("perDriving", imgBlob, file.name);
            }
            else {
                _this.formData.append("perPANCard", imgBlob, file.name);
            }
            // this.callWebserviceUpdateDocuments()
        };
        reader.readAsArrayBuffer(file);
    };
    MedicalstoreprofiledocumentPage.prototype.getDocumentData = function () {
        var _this = this;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["a" /* APIName */].getDocumentsPatientProfile, "")
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("getDocumentData >> ", resp);
                // this.profileDocument = resp.data
                _this.profileDocument.personID = resp.data.personID;
                _this.profileDocument.perAadhaarCardNo = resp.data.perAadhaarCardNo;
                _this.profileDocument.perAadhaarCardID = resp.data.perAadhaarCardID;
                _this.profileDocument.perPANcardID = resp.data.perPANcardID;
                _this.profileDocument.perDrivingLicenseID =
                    resp.data.perDrivingLicenseID;
                _this.profileDocument.perDrivingLicenseNo =
                    resp.data.perDrivingLicenseNo;
                _this.profileDocument.perPANcardNo = resp.data.perPANcardNo;
                _this.profileDocument.perAadhaar = resp.data.perAadhaarCardID;
                _this.profileDocument.isAadhaarverified = resp.data.isAadhaarverified;
                _this.profileDocument.perPANCard = resp.data.perPANcardID;
                _this.profileDocument.isPerPANCardverified =
                    resp.data.isPerPANCardverified;
                _this.profileDocument.perDriving = resp.data.perDrivingLicenseID;
                _this.profileDocument.isPerDrivingLicense =
                    resp.data.isPerDrivingLicense;
                _this.profileDocument.perSIN = resp.data.perSIN;
                _this.profileDocument.perSSN = resp.data.perSSN;
                // this.profileDocument.perPANCardNo = resp.data.perAadhaarCardNo
                // this.profileDocument.perDrivingNo = resp.data.perDrivingLicenseNo
                // this.profileDocument.perAadhaarNo = resp.data.perPANcardNo
                /*this.formData.append('personID', this.profileDocument.personID)
              this.formData.append('isAadhaarverified', this.profileDocument.isAadhaarverified)
              this.formData.append('isPerDrivingLicense', this.profileDocument.isPerDrivingLicense)
              this.formData.append('isPerPANCardverified', this.profileDocument.isPerPANCardverified)
              this.formData.append('perSIN', this.profileDocument.perSIN)
              this.formData.append('perSSN', this.profileDocument.perSSN)*/
                // this.formData.append('perAadhaar', this.profileDocument.perAadhaarCardID)
                // this.formData.append('perDriving', this.profileDocument.perDrivingLicenseID)
                // this.formData.append('perPANCard', this.profileDocument.perPANcardID)
            }
        });
    };
    MedicalstoreprofiledocumentPage.prototype.cancel = function () {
        console.log("cancel button clicked");
        this.navCtrl.parent.parent.push(__WEBPACK_IMPORTED_MODULE_7__dash_board_for_medicalstore_dash_board_for_medicalstore__["a" /* DashBoardForMedicalstorePage */]);
    };
    MedicalstoreprofiledocumentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-medicalstoreprofiledocument",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/medicalstoreprofiledocument/medicalstoreprofiledocument.html"*/'<!--\n  Generated template for the DoctorprofiledocumentPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header> </ion-header>\n\n<ion-content>\n  <div class="tab-pane" id="Documents">\n    <div class="documents">\n      <!-- doc no start -->\n      <div class="document-no bg-fff cmn-form no-input-efct">\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">SSN No</label>\n            <input\n              type="number"\n              class="form-control"\n              name="ssnNo"\n              [(ngModel)]="profileDocument.perSSN"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">SIN No</label>\n            <input\n              type="number"\n              class="form-control"\n              name="ssnNo"\n              [(ngModel)]="profileDocument.perSIN"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- doc no end -->\n      <!-- aadhar detail start -->\n      <div class="aadhar-dtl bg-fff cmn-form no-input-efct mt5">\n        <div class="dcmt-se-ttl">Aadhar Card</div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Aadhar No</label>\n            <input\n              type="text"\n              class="form-control"\n              name="aadharCardNumber"\n              [(ngModel)]="profileDocument.perAadhaarCardNo"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group cmn-file-upld mb-0 pt-30">\n            <div class="filename"></div>\n            <input\n              id="file-upld"\n              type="file"\n              class="form-control cmn-fl-input custom-file-input"\n              value=""\n            />\n            <label\n              class="custom-file-label bmd-label-floating"\n              (click)="buttonClickForChooseIDs(1)"\n              ><span class="lbl-txt">Upload File</span></label\n            >\n          </div>\n        </div>\n        <div class="preview-thumb pl15 pr15">\n          <div class="prvw-doc">\n            <img\n              src="{{profileDocument.perAadhaarCardID}}"\n              (click)="showPhoto(profileDocument.perAadhaarCardID)"\n              class="prvw-doc"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- aadhar detail end -->\n      <!-- Pan Card detail start -->\n      <div class="aadhar-dtl bg-fff cmn-form no-input-efct mt5">\n        <div class="dcmt-se-ttl">Pan Card</div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Pan No</label>\n            <input\n              type="text"\n              class="form-control"\n              name="panNumber"\n              [(ngModel)]="profileDocument.perPANcardNo"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group cmn-file-upld mb-0 pt-30">\n            <div class="filename"></div>\n            <input\n              id="pan-upld"\n              type="file"\n              class="form-control cmn-fl-input custom-file-input"\n              value=""\n            />\n            <label\n              (click)="buttonClickForChooseIDs(2)"\n              class="custom-file-label bmd-label-floating"\n              ><span class="lbl-txt">Upload File</span></label\n            >\n          </div>\n        </div>\n        <div class="preview-thumb pl15 pr15">\n          <div class="prvw-doc">\n            <img\n              src="{{profileDocument.perPANcardID}}"\n              (click)="showPhoto(profileDocument.perPANcardID)"\n              class="prvw-doc"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Pan Card detail end -->\n      <!-- License detail start -->\n      <div class="aadhar-dtl bg-fff cmn-form no-input-efct mt5">\n        <div class="dcmt-se-ttl">License</div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">License No</label>\n            <input\n              type="text"\n              class="form-control"\n              name="licenseNumber"\n              [(ngModel)]="profileDocument.perDrivingLicenseNo"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group cmn-file-upld mb-0 pt-30">\n            <div class="filename"></div>\n            <input\n              id="license-upld"\n              type="file"\n              class="form-control cmn-fl-input custom-file-input"\n              value=""\n            />\n            <label\n              (click)="buttonClickForChooseIDs(3)"\n              class="custom-file-label bmd-label-floating"\n              ><span class="lbl-txt">Upload File</span></label\n            >\n          </div>\n        </div>\n        <div class="preview-thumb pl15 pr15">\n          <div class="prvw-doc">\n            <img\n              src="{{profileDocument.perDrivingLicenseID}}"\n              (click)="showPhoto(profileDocument.perDrivingLicenseID)"\n              class="prvw-doc"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- License detail end -->\n      <div class="form-button bg-gray mb-20 pt-25 text-center">\n        <button class="btn cmn-thm-btn mr-25" (click)="clickOnButtonSave()">\n          SAVE\n        </button>\n        <button type="button" class="btn  cmn-wht-btn" (click)="cancel()">\n          CANCEL\n        </button>\n      </div>\n    </div>\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/medicalstoreprofiledocument/medicalstoreprofiledocument.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_file_path__["a" /* FilePath */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_photo_viewer__["a" /* PhotoViewer */],
            __WEBPACK_IMPORTED_MODULE_4__providers_api_api__["a" /* ApiProvider */]])
    ], MedicalstoreprofiledocumentPage);
    return MedicalstoreprofiledocumentPage;
}());

//# sourceMappingURL=medicalstoreprofiledocument.js.map

/***/ }),

/***/ 273:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientbooklablistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__addbooklab_addbooklab__ = __webpack_require__(74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__viewpatientbooklab_viewpatientbooklab__ = __webpack_require__(274);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_common__ = __webpack_require__(14);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the PatientbooklablistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientbooklablistPage = /** @class */ (function () {
    function PatientbooklablistPage(navCtrl, navParams, api, alertCtrl, datepipe) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.datepipe = datepipe;
        this.lablist = [];
    }
    PatientbooklablistPage.prototype.ionViewDidLoad = function () {
        // this.api.wsPostHeader(APIName.getAllLabPatient, '').then((resp:any) => {
        //   console.log(resp);
        //   this.lablist = resp.data;
        // });
        var _this = this;
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLabPatient, "").then(function (resp) {
            console.log(resp);
            _this.lablist = resp.data.patLabAppointmentsPojo;
        });
    };
    PatientbooklablistPage.prototype.openItem = function (d) {
        console.log("rahilobj===>", d);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__viewpatientbooklab_viewpatientbooklab__["a" /* ViewpatientbooklabPage */], { item: d });
    };
    PatientbooklablistPage.prototype.Cancel = function (d) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to cancel?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        var passParam = {
                            // "patLabAppointmentID": d.patLabAppointmentID,
                            // "patAppStatus": "Cancel"
                            patientAppointmentStatus: "Cancel",
                            id: d.patLabAppointmentID,
                            description: ""
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].labStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                console.log("resp>>>>" + resp);
                                // this.api.wsPostHeader(APIName.getAllLabPatient, '').then((resp:any) => {
                                // console.log(resp);
                                // this.lablist = resp.data;
                                // });
                                _this.api
                                    .wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLabPatient, "")
                                    .then(function (resp) {
                                    console.log(resp);
                                    _this.lablist = resp.data.patLabAppointmentsPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PatientbooklablistPage.prototype.editItem = function (d) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to edit?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__addbooklab_addbooklab__["a" /* AddbooklabPage */], {
                            obj: d,
                            patvisitnoteid: d.patVisitNoteID,
                            flagType: 1
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PatientbooklablistPage.prototype.Rebook = function (d) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to rebook?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__addbooklab_addbooklab__["a" /* AddbooklabPage */], {
                            obj: d,
                            patvisitnoteid: d.patVisitNoteID,
                            flagType: 3
                        });
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    PatientbooklablistPage.prototype.addItem = function () {
        // this.navCtrl.push(AddbooklabPage,{flag:2});
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__addbooklab_addbooklab__["a" /* AddbooklabPage */], { flagType: 2 });
    };
    PatientbooklablistPage.prototype.changeStringToDate = function (dateString, format) {
        if (format) {
            console.log("StringToDate==>", this.changeDateFormat(new Date(dateString), format));
            return this.changeDateFormat(new Date(dateString), format);
        }
        else {
            console.log("completeString=>>>>>>", dateString);
            console.log("StringToDate==>", new Date(dateString).toISOString());
            return new Date(dateString).toISOString();
        }
    };
    //date to any format
    PatientbooklablistPage.prototype.changeDateFormat = function (date, formate) {
        var latest_date = this.datepipe.transform(date, formate);
        console.log("ChangeDateFormat", latest_date);
        return latest_date;
    };
    PatientbooklablistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-patientbooklablist",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientbooklablist/patientbooklablist.html"*/'<!--\n  Generated template for the AppointmentlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Patient Book Laboratory List</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<!-- <ion-tabs selectedIndex="1">\n      <ion-tab [root]="tab1Root" [tabTitle]="Today" tabIcon="home"></ion-tab>\n      <ion-tab [root]="tab2Root" [tabTitle]="Tommorrow" tabIcon="home"></ion-tab>\n      <ion-tab [root]="tab3Root" [tabTitle]="View All" tabIcon="home"></ion-tab>\n    </ion-tabs> -->\n\n<ion-content>\n  <div class="cmn-list" #slidingItem *ngFor="let item of lablist">\n    <div class="cmn-apmnt-row clearfix" (click)="openItem(item)">\n      <div class="apmn-lft w-70">\n        <div class="dr-name">{{ item.providerName }}</div>\n        <div class="dr-adrs">\n          <img src="assets/images/location.png" />\n          {{ item.facilityCenterType }} {{ item.facilityCenterName }}- {{\n          item.fcLocationName }}\n        </div>\n        <div class="apmnt-dt-tm">\n          <img src="assets/images/cal.png" />\n          {{ item.patLabAppDate | date: "dd/MM/yyyy" }}<span class="apmn-time"\n            >{{ item.patLabAppTimeTo | date: "shortTime" }}</span\n          >\n        </div>\n      </div>\n      <div\n        *ngIf="item.patAppStatus == \'Approved\'"\n        class="apmn-rgt"\n        (click)="openItem(item)"\n      >\n        <span class="apmnt-lbl accepted">\n          {{ item.patAppStatus }}\n        </span>\n      </div>\n\n      <div\n        *ngIf="item.patAppStatus == \'Cancel\'"\n        class="apmn-rgt"\n        (click)="openItem(item)"\n      >\n        <span class="apmnt-lbl cancelled">\n          {{ item.patAppStatus }}\n        </span>\n      </div>\n\n      <div\n        *ngIf="item.patAppStatus == \'Rejected\'"\n        class="apmn-rgt"\n        (click)="openItem(item)"\n      >\n        <span class="apmnt-lbl rejected">\n          {{ item.patAppStatus }}\n        </span>\n      </div>\n\n      <div\n        *ngIf="item.patAppStatus == \'Pending\'"\n        class="apmn-rgt"\n        (click)="openItem(item)"\n      >\n        <span class="apmnt-lbl pending">\n          {{ item.patAppStatus }}\n        </span>\n      </div>\n\n      <div\n        *ngIf="item.patAppStatus == \'Completed\'"\n        class="apmn-rgt"\n        (click)="openItem(item)"\n      >\n        <span class="apmnt-lbl accepted">\n          {{ item.patAppStatus }}\n        </span>\n      </div>\n\n      <!-- <div class="apmn-rgt">\n        <span class="apmnt-lbl accepted">\n          {{ item.patAppStatus }}\n        </span>\n      </div> -->\n      <!-- <div class="apmnt-date">\n          on {{ item.patLabAppDate | date: "dd/MM/yyyy" }}\n        </div> -->\n    </div>\n  </div>\n  <ion-fab bottom right>\n    <button class="cmn-create-btn" ion-fab (click)="addItem()">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n</ion-content>\n\n<!-- <div class="cmn-list-page">\n                <ion-list class="cmn-tb-cntnt">\n                  <ion-item-sliding #slidingItem *ngFor="let item of lablist">\n                    <ion-item (click)="openItem(item)">\n                      <div class="ptnt-name">{{ item.providerName }}</div>\n                      <div class="rson-fr-meet">\n                        {{ item.facilityCenterName }} {{ item.facilityCenterType }} -\n                        {{ item.fcLocationName }}\n                      </div>\n                      <div class="apmnt-tm">\n                        {{ item.patAppDate }} {{ item.patAppTimeTo }}\n                      </div>\n                      <button ion-button *ngIf="item.athome">Yes</button>\n                      <button ion-button *ngIf="!item.athome">No</button>\n                      <div class="apmnt-status">{{ item.patAppStatus }}</div>\n                    </ion-item>\n                    <ion-item-options *ngIf="item.patAppStatus == \'Pending\'">\n                      <button ion-button color="calm" (click)="editItem(item)">Edit</button>\n                      <button ion-button color="danger" (click)="Cancel(item)">\n                        Cancel\n                      </button>\n                    </ion-item-options>\n            \n                    <ion-item-options *ngIf="item.patAppStatus == \'Completed\'">\n                      <button ion-button (click)="Rebook(item)">Re-Book</button>\n                    </ion-item-options>\n            \n                    <ion-item-options *ngIf="item.patAppStatus == \'Approved\'">\n                      <button ion-button color="danger" (click)="Cancel(item)">\n                        Cancel\n                      </button>\n                    </ion-item-options>\n            \n                    <ion-item-options *ngIf="item.patAppStatus == \'Rejected\'">\n                      <button ion-button (click)="Rebook(item)">Re-Book</button>\n                    </ion-item-options>\n            \n                    <ion-item-options *ngIf="item.patAppStatus == \'Cancel\'">\n                      <button ion-button (click)="Rebook(item)">Re-Book</button>\n                    </ion-item-options>\n                  </ion-item-sliding>\n                </ion-list>\n              </div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientbooklablist/patientbooklablist.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_6__angular_common__["d" /* DatePipe */]])
    ], PatientbooklablistPage);
    return PatientbooklablistPage;
}());

//# sourceMappingURL=patientbooklablist.js.map

/***/ }),

/***/ 274:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ViewpatientbooklabPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__addbooklab_addbooklab__ = __webpack_require__(74);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the ViewpatientbooklabPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ViewpatientbooklabPage = /** @class */ (function () {
    function ViewpatientbooklabPage(navCtrl, navParams, api, alertCtrl, datepipe) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.datepipe = datepipe;
        this.ViewAppointment = [];
        this.item = [];
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        this.item = this.navParams.get('item');
        // this.item = this.item.patAppointmentID
        //  var obj1  = this.item;
        //  console.log("akslkdjflskjdflkj",obj1.patAppointmentID);
        console.log('kashifa=======', JSON.stringify(this.item));
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
            var petId = { patLabAppointmentID: this.item.patLabAppointmentID };
            console.log("rahuldude", "" + this.item.patLabAppointmentID);
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditLabPatient, petId).then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    _this.ViewAppointment = resp.data;
                    _this.Time = _this.convertTimeTo(resp.data.patLabAppTimeTo);
                    _this.Date = _this.convertDate(resp.data.patLabAppDate);
                }
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
            var petId = { patLabAppointmentID: this.item.patLabAppointmentID };
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditLabPatient, petId).then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    _this.ViewAppointment = resp.data;
                    _this.Time = _this.convertTimeTo(resp.data.patLabAppTimeTo);
                    _this.Date = _this.convertDate(resp.data.patLabAppDate);
                }
            });
        }
    }
    ViewpatientbooklabPage.prototype.goBack = function () {
        this.navCtrl.pop();
    };
    ViewpatientbooklabPage.prototype.ionViewDidLoad = function () {
    };
    ViewpatientbooklabPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__addbooklab_addbooklab__["a" /* AddbooklabPage */], { flagType: 2 });
    };
    ViewpatientbooklabPage.prototype.editItem = function (id) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__addbooklab_addbooklab__["a" /* AddbooklabPage */], { obj: this.item, patvisitnoteid: this.item.patVisitNoteID, flagType: 1 });
    };
    ViewpatientbooklabPage.prototype.Canceled = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to cancel?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patLabAppointmentID": d.patLabAppointmentID,
                            // "patAppStatus": "Cancel"
                            "patientAppointmentStatus": "Cancel",
                            "id": d.patLabAppointmentID,
                            "description": ''
                        };
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                // let petId={patAppointmentID:this.item.patAppointmentID};
                                // this.api.wsPostHeader(APIName.viewAndEditAppointmentDoctor,petId).then((resp:any) => {
                                // this.ViewAppointment=resp.data;
                                // this.Time= this.convertTimeTo(resp.data.patAppTimeTo);
                                // this.Date=this.convertDate(resp.data.patAppDate); 
                                // });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    ViewpatientbooklabPage.prototype.checkNulldata = function (data) {
        if (data.fclProviderMapID === null) {
            data.fclProviderMapID = "";
        }
        if (data.specialityID === null) {
            data.specialityID = "";
        }
        if (data.patAppDate === null) {
            data.patAppDate = 1524123001;
        }
        if (data.patAppTimeFrom === null) {
            data.patAppTimeFrom = 1524123001;
        }
        if (data.patAppTimeTo === null) {
            data.patAppTimeTo = 1524123001;
        }
        if (data.patAppType === null) {
            data.patAppType = "New";
        }
        if (data.patAppReason === null) {
            data.patAppReason = "BP";
        }
        if (data.patAppDescription === null) {
            data.patAppDescription = "dsfdsfdf";
        }
        return data;
    };
    ViewpatientbooklabPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to reject?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patLabAppointmentID": d.patLabAppointmentID,
                            // "patAppStatus": "Rejected"
                            "patientAppointmentStatus": "Rejected",
                            "id": d.patLabAppointmentID,
                            "description": ''
                        };
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                _this.navCtrl.pop();
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    ViewpatientbooklabPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to approve?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        // console.log('Ok clicked');
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patLabAppointmentID": d.patLabAppointmentID,
                            // "patAppStatus": "Approved"
                            "patientAppointmentStatus": "Approved",
                            "id": d.patLabAppointmentID,
                            "description": ''
                        };
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                _this.navCtrl.pop();
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    ViewpatientbooklabPage.prototype.Edit = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to edit?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__addbooklab_addbooklab__["a" /* AddbooklabPage */], { obj: data, patvisitnoteid: data.patVisitNoteID, flagType: 1 });
                    }
                }
            ]
        });
        alert.present();
    };
    ViewpatientbooklabPage.prototype.Cancel = function (data) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to cancel?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        var passParam = {
                            // "patLabAppointmentID": data.patLabAppointmentID,
                            // "patAppStatus": "Cancel"
                            "patientAppointmentStatus": "Cancel",
                            "id": data.patLabAppointmentID,
                            "description": ''
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].labStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                console.log('resp>>>>' + resp);
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    ViewpatientbooklabPage.prototype.ReBook = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to re-book?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var d = _this.checkNulldata(data);
                        var id = d.patAppointmentID;
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__addbooklab_addbooklab__["a" /* AddbooklabPage */], { obj: data, patvisitnoteid: data.patVisitNoteID, flagType: 3 });
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    ViewpatientbooklabPage.prototype.convertDate = function (date) {
        if (date) {
            var dateConvert = new Date(parseInt(date));
            var Year = dateConvert.getUTCFullYear();
            var Month = dateConvert.getUTCMonth() + 1;
            var Day = dateConvert.getUTCDate();
            return Day + "-" + Month + "-" + Year;
        }
        else {
            return "";
        }
    };
    ViewpatientbooklabPage.prototype.convertTimeTo = function (time) {
        if (time) {
            var dateTime = new Date(parseInt(time));
            var Hours = dateTime.getUTCHours();
            var Minutes = dateTime.getUTCMinutes();
            var Seconds = dateTime.getUTCSeconds();
            return Hours + ":" + Minutes;
        }
        else {
            return "";
        }
    };
    ViewpatientbooklabPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-viewpatientbooklab',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/viewpatientbooklab/viewpatientbooklab.html"*/'<ion-header>\n  <ion-navbar hideBackButton="false">\n    <ion-buttons>\n      <!-- <button ion-button icon-only (click)="goBack()" class="my-style-for-modal">\n          <ion-icon style="color:#fff" name="arrow-back"></ion-icon>\n      </button> -->\n    </ion-buttons>\n    <ion-title>View Appointment</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="view-list">\n    <div *ngIf="selectRole == \'Patient\'">\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Date\n        </div>\n        <div class="view-list-val pull-right">\n          {{ Date }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Time\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ Time }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Consulting Lab Assistant\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.providerName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Facility\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.facilityCenterName }}\n        </div>\n      </div>\n\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Suggested Report\n        </div>\n        <div\n          class="view-list-val  pull-right"\n          *ngFor="let i of ViewAppointment.data "\n        >\n          {{ i.lrl1Name }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Case\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.patAppType }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Reason for Visit\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.patientLabAppointmentReason }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Additional Detail\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.patLabDetail }}\n        </div>\n      </div>\n\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Status\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.patAppStatus == \'Approved\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.patAppStatus }}\n          </span>\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.patAppStatus == \'Cancel\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl cancelled">\n            {{ ViewAppointment.patAppStatus }}\n          </span>\n        </div>\n        <div\n          *ngIf="ViewAppointment.patAppStatus == \'Pending\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl pending">\n            {{ ViewAppointment.patAppStatus }}\n          </span>\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.patAppStatus == \'Rejected\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl rejected">\n            {{ ViewAppointment.patAppStatus }}\n          </span>\n        </div>\n        <div\n          *ngIf="ViewAppointment.patAppStatus == \'Completed\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.patAppStatus }}\n          </span>\n        </div>\n\n        <!-- <div class="view-list-val  pull-right">\n          <span class="accepted-lbl">{{ ViewAppointment.patAppStatus }}</span>\n        </div> -->\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Visit Type\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.facilityCenterType }}\n        </div>\n      </div>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Pending\'">\n        <button\n          ion-button\n          color="calm"\n          (click)="editItem(ViewAppointment.patAppointmentID)"\n        >\n          Edit\n        </button>\n        <button ion-button color="danger" (click)="Cancel(ViewAppointment)">\n          Cancel\n        </button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Completed\'">\n        <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Approved\'">\n        <button ion-button color="danger" (click)="Cancel(ViewAppointment)">\n          Cancel\n        </button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Rejected\'">\n        <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Cancel\'">\n        <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n      </ion-item>\n    </div>\n\n    <div *ngIf="selectRole == \'Doctor\'">\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Date\n        </div>\n        <div class="view-list-val pull-right">\n          {{ Date }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Location\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.fcLocationName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Time\n        </div>\n        <div class="view-list-val pull-right">\n          {{ Time }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Patient Name\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.name }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Facility\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.facilityCenterType }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Visit type\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.patAppType }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Reason For Visit\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.patAppReason }}\n        </div>\n      </div>\n\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Status\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.patAppStatus == \'Approved\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.patAppStatus }}\n          </span>\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.patAppStatus == \'Cancel\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl cancelled">\n            {{ ViewAppointment.patAppStatus }}\n          </span>\n        </div>\n        <div\n          *ngIf="ViewAppointment.patAppStatus == \'Pending\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl pending">\n            {{ ViewAppointment.patAppStatus }}\n          </span>\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.patAppStatus == \'Rejected\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl rejected">\n            {{ ViewAppointment.patAppStatus }}\n          </span>\n        </div>\n        <div\n          *ngIf="ViewAppointment.patAppStatus == \'Completed\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.patAppStatus }}\n          </span>\n        </div>\n\n        <!-- <div class="view-list-val pull-right">\n          {{ ViewAppointment.patAppStatus }}\n        </div> -->\n      </div>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Pending\'">\n        <button ion-button (click)="Approved(ViewAppointment)">Approve</button>\n        <button ion-button color="danger" (click)="Rejected(ViewAppointment)">\n          Reject\n        </button>\n        <button ion-button color="danger" (click)="Canceled(ViewAppointment)">\n          Cancel\n        </button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Approved\'">\n        <button ion-button color="danger" (click)="Canceled(ViewAppointment)">\n          Cancel\n        </button>\n      </ion-item>\n    </div>\n  </div>\n</ion-content>\n<!-- <form text-center class="login-inner-hc" style="height: 50%;">\n    <ion-list *ngIf="selectRole == \'Patient\'">\n    <div class="login-signin-hc">  \n      <div class="login-head-hc">\n        <h5>View Appointment</h5>\n      </div>     \n    \n      <ion-item>\n        <ion-label color="">Appointment Date :</ion-label>\n        <ion-input type="text" [(ngModel)]="Date" name="date" disabled="true"></ion-input>\n      </ion-item>\n    \n      <ion-item>\n          <ion-label color="">Appointment Location :</ion-label>\n          <ion-input type="text"  [(ngModel)]="ViewAppointment.fcLocationName" name="Location" disabled="true"></ion-input>\n      </ion-item>\n    \n      <ion-item>\n          <ion-label color="">Appointment Time :</ion-label>\n          <ion-input type="text" [(ngModel)]="Time" name="Time" disabled="true"></ion-input>\n      </ion-item>\n    \n      <ion-item>\n          <ion-label color="">Consulting Doctor :</ion-label>\n          <ion-input type="text" [(ngModel)]="ViewAppointment.providerName" name="Consulting" disabled="true"></ion-input>\n      </ion-item>\n    \n      <ion-item>\n          <ion-label color="">Facility :</ion-label>\n          <ion-input type="text" [(ngModel)]="ViewAppointment.facilityCenterType" name="Facility" disabled="true"></ion-input>\n      </ion-item>\n    \n    \n      <ion-item>\n          <ion-label color="">Visit type :</ion-label>\n          <ion-input [(ngModel)]="ViewAppointment.patAppType" type="text" name="type" disabled="true"></ion-input>\n      </ion-item>\n    \n      <ion-item>\n          <ion-label color="">Speciality :</ion-label>\n          <ion-input type="text" [(ngModel)]="ViewAppointment.specialityName" name="Speciality" disabled="true"></ion-input>\n      </ion-item>\n      \n      <ion-item>\n          <ion-label color="">Reason For Visit :</ion-label>\n          <ion-input type="text" [(ngModel)]="ViewAppointment.patAppReason" name="Reason" disabled="true"></ion-input>\n      </ion-item>\n    \n      <ion-item>\n          <ion-label color="">Status :</ion-label>\n          <ion-input type="text" [(ngModel)]="ViewAppointment.patAppStatus" name="Status" disabled="true"></ion-input>\n      </ion-item>\n    </div>   \n    \n      <ion-item *ngIf="ViewAppointment.patAppStatus== \'Pending\'">\n         <button ion-button color="calm" (click)="editItem(ViewAppointment.patAppointmentID)">Edit</button>\n         <button ion-button color="danger" (click)="Cancel(ViewAppointment)">Cancel</button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.patAppStatus== \'Completed\'">\n         <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.patAppStatus== \'Approved\'">\n          <button ion-button color="danger" (click)="Cancel(ViewAppointment)">Cancel</button>\n      </ion-item>\n      <ion-item  *ngIf="ViewAppointment.patAppStatus== \'Rejected\'">\n          <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n      </ion-item>\n      <ion-item  *ngIf="ViewAppointment.patAppStatus== \'Cancel\'">\n          <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n      </ion-item>\n    \n    </ion-list>\n    \n    \n    <ion-list *ngIf="selectRole == \'Doctor\'">\n      <div class="login-signin-hc">  \n        <div class="login-head-hc">\n          <h5>View Appointment</h5>\n        </div>     \n      \n        <ion-item>\n          <ion-label color="">Appointment Date :</ion-label>\n          <ion-input type="text" [(ngModel)]="Date" name="date" disabled="true"></ion-input>\n        </ion-item>\n    \n        <ion-item>\n            <ion-label color="">Appointment Location :</ion-label>\n            <ion-input type="text"  [(ngModel)]="ViewAppointment.fcLocationName" name="Location" disabled="true"></ion-input>\n        </ion-item>\n    \n        <ion-item>\n            <ion-label color="">Appointment Time :</ion-label>\n            <ion-input type="text" [(ngModel)]="Time" name="Time" disabled="true"></ion-input>\n        </ion-item>\n    \n        <ion-item>\n            <ion-label color="">Patient Name :</ion-label>\n            <ion-input type="text" [(ngModel)]="ViewAppointment.name" name="Consulting" disabled="true"></ion-input>\n        </ion-item>\n    \n        <ion-item>\n            <ion-label color="">Facility :</ion-label>\n            <ion-input type="text" [(ngModel)]="ViewAppointment.facilityCenterType" name="Facility" disabled="true"></ion-input>\n        </ion-item>\n    \n    \n        <ion-item>\n            <ion-label color="">Visit type :</ion-label>\n            <ion-input [(ngModel)]="ViewAppointment.patAppType" type="text" name="type" disabled="true"></ion-input>\n        </ion-item>\n    \n        \n        <ion-item>\n            <ion-label color="">Reason For Visit :</ion-label>\n            <ion-input type="text" [(ngModel)]="ViewAppointment.patAppReason" name="Reason" disabled="true"></ion-input>\n        </ion-item>\n    \n        <ion-item>\n            <ion-label color="">Status :</ion-label>\n            <ion-input type="text" [(ngModel)]="ViewAppointment.patAppStatus" name="Status" disabled="true"></ion-input>\n        </ion-item>\n      </div>   \n    \n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Pending\'">\n          <button ion-button (click)="Approved(ViewAppointment)">Approve</button>\n          <button ion-button color="danger" (click)="Rejected(ViewAppointment)">Reject</button>\n          <button ion-button color="danger" (click)="Canceled(ViewAppointment)">Cancel</button>\n      </ion-item>\n      <ion-item  *ngIf="ViewAppointment.patAppStatus == \'Approved\'">\n          <button ion-button color="danger" (click)="Canceled(ViewAppointment)">Cancel</button>\n      </ion-item>    \n    </ion-list>\n    \n    </form> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/viewpatientbooklab/viewpatientbooklab.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_4__angular_common__["d" /* DatePipe */]])
    ], ViewpatientbooklabPage);
    return ViewpatientbooklabPage;
}());

//# sourceMappingURL=viewpatientbooklab.js.map

/***/ }),

/***/ 275:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientclaimedinsurancelistviewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the PatientclaimedinsurancelistviewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientclaimedinsurancelistviewPage = /** @class */ (function () {
    function PatientclaimedinsurancelistviewPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.item = [];
        this.PatientClaimedInsuranceView = [];
        this.DiseaseData = [];
        this.TempDisease = [];
        this.Medicine = [];
        this.TempMedicine = [];
        this.Report = [];
        this.TempReport = [];
        this.item = this.navParams.get('item');
    }
    PatientclaimedinsurancelistviewPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        var Id = { patVisitNoteID: this.item.patVisitNoteID };
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditDoctorVisitPatient, Id).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                //this.ViewAppointment=resp;
                //console.log('wsPostHeader : >>',resp);
                _this.PatientClaimedInsuranceView = resp.data;
                var jdiagnosisMasterData = _this.PatientClaimedInsuranceView.diagnosisMaster;
                for (var i = 0; i < jdiagnosisMasterData.length; i++) {
                    _this.TempDisease.push(jdiagnosisMasterData[i].diagnosiseName);
                }
                _this.DiseaseData = _this.TempDisease;
                var drugCompoundMasterData = _this.PatientClaimedInsuranceView.drugCompoundMaster;
                for (var i = 0; i < drugCompoundMasterData.length; i++) {
                    _this.TempMedicine.push(drugCompoundMasterData[i].drugCompoundName);
                }
                _this.Medicine = _this.TempMedicine;
                var labReportsLevelData = _this.PatientClaimedInsuranceView.labReportsLevel1;
                for (var i = 0; i < labReportsLevelData.length; i++) {
                    _this.TempReport.push(labReportsLevelData[i].labReportType);
                }
                _this.Report = _this.TempReport;
                // this.ViewAppointment=resp;
            }
        });
    };
    PatientclaimedinsurancelistviewPage.prototype.claimInsurance = function () {
        //this.navCtrl.push(PatientdoctorvisitlistviewPage);
    };
    PatientclaimedinsurancelistviewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patientclaimedinsurancelistview',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientclaimedinsurancelistview/patientclaimedinsurancelistview.html"*/'<!--\n  Generated template for the PatientclaimedinsurancelistviewPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>Patient Claimed Insurance List view</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n    <form text-center class="login-inner-hc" style="height: 50%;">\n        <ion-list >\n          <div class="login-signin-hc">  \n            <div class="login-head-hc">\n              <h5>Patient Claimed Insurance List view</h5>\n            </div>     \n          \n            <ion-item>\n                    <ion-label color="">Admitted Date :</ion-label>\n                    <ion-input type="text" [(ngModel)]="PatientClaimedInsuranceView.patVisitDate" name="Admitteddate" disabled="true"></ion-input>\n                  </ion-item>\n          \n                  <ion-item>\n                      <ion-label color="">Admitted Time :</ion-label>\n                      <ion-input type="text" [(ngModel)]="PatientClaimedInsuranceView.times" name="Admittedtimes" disabled="true"></ion-input>\n                  </ion-item>\n                  \n                  <ion-item>\n                      <ion-label color="">Patient Id :</ion-label>\n                      <ion-input type="text" [(ngModel)]="PatientClaimedInsuranceView.patientID" name="patientID" disabled="true"></ion-input>\n                  </ion-item>\n      \n                  <ion-item>\n                      <ion-label color="">Symptoms Found :</ion-label>\n                      <ion-input type="text" [(ngModel)]="PatientClaimedInsuranceView.patSymptoms" name="Symptoms" disabled="true"></ion-input>\n                  </ion-item>\n                  \n      \n                  <ion-item>\n                      <ion-label color="">Treatment Provided :</ion-label>\n                      <ion-input type="text" [(ngModel)]="PatientClaimedInsuranceView.treatmentProvided" name="Treatment" disabled="true"></ion-input>\n                  </ion-item>\n      \n                  <ion-item>\n                      <ion-label color="">Disease Name :</ion-label>\n                      <ion-input type="text" [(ngModel)]="DiseaseData"  name="Disease " disabled="true"></ion-input>\n                    </ion-item>\n      \n                  <ion-item>\n                      <ion-label color="">Side Effects :</ion-label>\n                      <ion-input type="text" [(ngModel)]="PatientClaimedInsuranceView.patSideEffect"  name="Side" disabled="true"></ion-input>\n                  </ion-item>\n      \n                  <ion-item>\n                      <ion-label color="">Extra Detail :</ion-label>\n                      <ion-input type="text" [(ngModel)]="PatientClaimedInsuranceView.patExtraDetails" name="Extra" disabled="true"></ion-input>\n                  </ion-item>\n      \n                  <ion-item>\n                      <ion-label color="">Ward Detail :</ion-label>\n                      <ion-input type="text"   name="Ward" disabled="true"></ion-input>\n                  </ion-item>\n      \n                  <ion-item>\n                      <ion-label color="">Medicine Given :</ion-label>\n                      <ion-input type="text" [(ngModel)]="Medicine" name="Medicine" disabled="true"></ion-input>\n                  </ion-item>\n      \n                  <ion-item>\n                      <ion-label color="">Report Taken :</ion-label>\n                      <ion-input type="text" [(ngModel)]="Report" name="Report" disabled="true"></ion-input>\n                  </ion-item>\n\n            <ion-item>\n               <button ion-button (click)="claimInsurance()" style="float: right;">Claim Insurance</button>\n            </ion-item>\n          </div>       \n        </ion-list>\n      </form>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientclaimedinsurancelistview/patientclaimedinsurancelistview.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], PatientclaimedinsurancelistviewPage);
    return PatientclaimedinsurancelistviewPage;
}());

//# sourceMappingURL=patientclaimedinsurancelistview.js.map

/***/ }),

/***/ 276:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatienthospitaladmitlistviewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the PatienthospitaladmitlistviewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatienthospitaladmitlistviewPage = /** @class */ (function () {
    function PatienthospitaladmitlistviewPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.item = [];
        this.PatientHospitalAdmitlistView = [];
        this.DiseaseData = [];
        this.TempDisease = [];
        this.Medicine = [];
        this.TempMedicine = [];
        this.Report = [];
        this.TempReport = [];
        this.item = this.navParams.get('item');
    }
    PatienthospitaladmitlistviewPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        var Id = { patVisitNoteID: this.item.patVisitNoteID };
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditDoctorVisitPatient, Id).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                //this.ViewAppointment=resp;
                console.log('wsPostHeader : >>', resp);
                _this.PatientHospitalAdmitlistView = resp.data;
                var jdiagnosisMasterData = _this.PatientHospitalAdmitlistView.diagnosisMaster;
                for (var i = 0; i < jdiagnosisMasterData.length; i++) {
                    _this.TempDisease.push(jdiagnosisMasterData[i].diagnosiseName);
                }
                _this.DiseaseData = _this.TempDisease;
                var drugCompoundMasterData = _this.PatientHospitalAdmitlistView.drugCompoundMaster;
                for (var i = 0; i < drugCompoundMasterData.length; i++) {
                    _this.TempMedicine.push(drugCompoundMasterData[i].drugCompoundName);
                }
                _this.Medicine = _this.TempMedicine;
                var labReportsLevelData = _this.PatientHospitalAdmitlistView.labReportsLevel1;
                for (var i = 0; i < labReportsLevelData.length; i++) {
                    _this.TempReport.push(labReportsLevelData[i].labReportType);
                }
                _this.Report = _this.TempReport;
                // this.ViewAppointment=resp;
            }
        });
    };
    PatienthospitaladmitlistviewPage.prototype.claimInsurance = function () {
        //this.navCtrl.push(PatientdoctorvisitlistviewPage);
    };
    PatienthospitaladmitlistviewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patienthospitaladmitlistview',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patienthospitaladmitlistview/patienthospitaladmitlistview.html"*/'<!--\n  Generated template for the PatienthospitaladmitlistviewPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n    <ion-navbar>\n      <ion-title>Patient Hospital Admit List View</ion-title>\n    </ion-navbar>\n  \n  </ion-header>\n  \n  \n  <ion-content padding>\n      <form text-center class="login-inner-hc" style="height: 50%;">\n          <ion-list >\n            <div class="login-signin-hc">  \n              <div class="login-head-hc">\n                <h5>Patient Hospital Admit List View</h5>\n              </div>     \n            \n              <ion-item>\n                <ion-label color="">Admitted Date :</ion-label>\n                <ion-input type="text" [(ngModel)]="PatientHospitalAdmitlistView.patVisitDate" name="Admitteddate" disabled="true"></ion-input>\n              </ion-item>\n      \n              <ion-item>\n                  <ion-label color="">Admitted Time :</ion-label>\n                  <ion-input type="text" [(ngModel)]="PatientHospitalAdmitlistView.times" name="Admittedtimes" disabled="true"></ion-input>\n              </ion-item>\n              \n              <ion-item>\n                  <ion-label color="">Patient Id :</ion-label>\n                  <ion-input type="text" [(ngModel)]="PatientHospitalAdmitlistView.patientID" name="patientID" disabled="true"></ion-input>\n              </ion-item>\n  \n              <ion-item>\n                  <ion-label color="">Symptoms Found :</ion-label>\n                  <ion-input type="text" [(ngModel)]="PatientHospitalAdmitlistView.patSymptoms" name="Symptoms" disabled="true"></ion-input>\n              </ion-item>\n              \n  \n              <ion-item>\n                  <ion-label color="">Treatment Provided :</ion-label>\n                  <ion-input type="text" [(ngModel)]="PatientHospitalAdmitlistView.treatmentProvided" name="Treatment" disabled="true"></ion-input>\n              </ion-item>\n  \n              <ion-item>\n                  <ion-label color="">Disease Name :</ion-label>\n                  <ion-input type="text" [(ngModel)]="DiseaseData"  name="Disease " disabled="true"></ion-input>\n                </ion-item>\n  \n              <ion-item>\n                  <ion-label color="">Side Effects :</ion-label>\n                  <ion-input type="text" [(ngModel)]="PatientHospitalAdmitlistView.patSideEffect"  name="Side" disabled="true"></ion-input>\n              </ion-item>\n  \n              <ion-item>\n                  <ion-label color="">Extra Detail :</ion-label>\n                  <ion-input type="text" [(ngModel)]="PatientHospitalAdmitlistView.patExtraDetails" name="Extra" disabled="true"></ion-input>\n              </ion-item>\n  \n              <ion-item>\n                  <ion-label color="">Ward Detail :</ion-label>\n                  <ion-input type="text"   name="Ward" disabled="true"></ion-input>\n              </ion-item>\n  \n              <ion-item>\n                  <ion-label color="">Medicine Given :</ion-label>\n                  <ion-input type="text" [(ngModel)]="Medicine" name="Medicine" disabled="true"></ion-input>\n              </ion-item>\n  \n              <ion-item>\n                  <ion-label color="">Report Taken :</ion-label>\n                  <ion-input type="text" [(ngModel)]="Report" name="Report" disabled="true"></ion-input>\n              </ion-item>\n  \n              <ion-item>\n                 <button ion-button (click)="claimInsurance()" style="float: right;">Claim Insurance</button>\n              </ion-item>\n            </div>       \n          </ion-list>\n        </form>\n  </ion-content>\n  '/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patienthospitaladmitlistview/patienthospitaladmitlistview.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], PatienthospitaladmitlistviewPage);
    return PatienthospitaladmitlistviewPage;
}());

//# sourceMappingURL=patienthospitaladmitlistview.js.map

/***/ }),

/***/ 277:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientinsurancelistviewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the PatientinsurancelistviewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientinsurancelistviewPage = /** @class */ (function () {
    function PatientinsurancelistviewPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.item = [];
        this.PatientDoctorVisitlist = [];
        this.DiseaseData = [];
        this.TempDisease = [];
        this.Medicine = [];
        this.TempMedicine = [];
        this.Report = [];
        this.TempReport = [];
        this.item = this.navParams.get('item');
    }
    PatientinsurancelistviewPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        var Id = { patVisitNoteID: this.item.patVisitNoteID };
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditDoctorVisitPatient, Id).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                //this.ViewAppointment=resp;
                //console.log('wsPostHeader : >>',resp);
                _this.PatientDoctorVisitlist = resp.data;
                //  let jdiagnosisMasterData=this.PatientDoctorVisitlist.diagnosisMaster;
                //  for(let i=0;i<jdiagnosisMasterData.length;i++)
                //  {
                //   this.TempDisease.push(jdiagnosisMasterData[i].diagnosiseName);       
                //  }
                //  this.DiseaseData=this.TempDisease;
                //  let drugCompoundMasterData=this.PatientDoctorVisitlist.drugCompoundMaster;
                //  for(let i=0;i<drugCompoundMasterData.length;i++)
                //  {
                //   this.TempMedicine.push(drugCompoundMasterData[i].drugCompoundName);       
                //  }
                //  this.Medicine=this.TempMedicine;
                //  let labReportsLevelData=this.PatientDoctorVisitlist.labReportsLevel1;
                //  for(let i=0;i<labReportsLevelData.length;i++)
                //  {
                //   this.TempReport.push(labReportsLevelData[i].labReportType);       
                //  }
                //  this.Report=this.TempReport;
                // this.ViewAppointment=resp;
            }
        });
    };
    PatientinsurancelistviewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patientinsurancelistview',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientinsurancelistview/patientinsurancelistview.html"*/'<!--\n  Generated template for the PatientinsurancelistviewPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>Patient Insurance List View</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n    <form text-center class="login-inner-hc" style="height: 50%;">\n        <ion-list >\n          <div class="login-signin-hc">  \n            <div class="login-head-hc">\n              <h5>Patient Insurance List View</h5>\n            </div>     \n          \n            <ion-item>\n              <ion-label color="">Plan Name :</ion-label>\n              <ion-input type="text" [(ngModel)]="PatientDoctorVisitlist.patVisitDate" name="patVisitDate" disabled="true"></ion-input>\n            </ion-item>\n    \n            <ion-item>\n                <ion-label color="">Insurance Company Name :</ion-label>\n                <ion-input type="text" [(ngModel)]="PatientDoctorVisitlist.times" name="times" disabled="true"></ion-input>\n            </ion-item>\n            \n            <ion-item>\n                <ion-label color="">Coverage :</ion-label>\n                <ion-input type="text" [(ngModel)]="PatientDoctorVisitlist.name" name="name" disabled="true"></ion-input>\n            </ion-item>\n\n            <ion-item>\n                <ion-label color="">Additional Detail :</ion-label>\n                <ion-input type="text" [(ngModel)]="PatientDoctorVisitlist.patientID" name="patientID" disabled="true"></ion-input>\n            </ion-item>\n            \n            <ion-item>\n                <ion-label color="">Years :</ion-label>\n                <ion-input type="text"  name="Purpose" [(ngModel)]="PatientDoctorVisitlist.patVisitType" disabled="true"></ion-input>\n            </ion-item>\n\n            <ion-item>\n                <ion-label color="">Document Attached :</ion-label>\n                <ion-input type="text" [(ngModel)]="PatientDoctorVisitlist.patSymptoms" name="Symptoms" disabled="true"></ion-input>\n            </ion-item>\n\n            <ion-item>\n                <ion-label color="">Status :</ion-label>\n                <ion-input type="text" [(ngModel)]="PatientDoctorVisitlist.patVisitType"  name="Treatment" disabled="true"></ion-input>\n            </ion-item>\n\n          </div>       \n        </ion-list>\n      </form>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientinsurancelistview/patientinsurancelistview.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], PatientinsurancelistviewPage);
    return PatientinsurancelistviewPage;
}());

//# sourceMappingURL=patientinsurancelistview.js.map

/***/ }),

/***/ 278:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientmedicineboughtlistviewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the PatientmedicineboughtlistviewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientmedicineboughtlistviewPage = /** @class */ (function () {
    function PatientmedicineboughtlistviewPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.item = [];
        this.medicineBoughtListView = [];
        this.item = this.navParams.get('item');
    }
    PatientmedicineboughtlistviewPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        var Id = { patVisitNoteID: this.item.patVisitNoteID };
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditDoctorVisitPatient, Id).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                //console.log('wsPostHeader : >>',resp);
                _this.medicineBoughtListView = resp.data;
            }
        });
    };
    PatientmedicineboughtlistviewPage.prototype.showVisit = function () {
        //this.navCtrl.push(PatientdoctorvisitlistviewPage);
    };
    PatientmedicineboughtlistviewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patientmedicineboughtlistview',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientmedicineboughtlistview/patientmedicineboughtlistview.html"*/'<!--\n  Generated template for the PatientmedicineboughtlistviewPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n    <ion-navbar>\n      <ion-title>Patient Medicine Bought List View</ion-title>\n    </ion-navbar>\n  \n  </ion-header>\n  \n  \n  <ion-content padding>\n      <form text-center class="login-inner-hc" style="height: 50%;">\n          <ion-list >\n            <div class="login-signin-hc">  \n              <div class="login-head-hc">\n                <h5>Patient Medicine Bought List View</h5>\n              </div>     \n            \n              <ion-item>\n                <ion-label color="">Medicine Name :</ion-label>\n                <ion-input type="text" [(ngModel)]="medicineBoughtListView.patExtraDetails" name="Medicine" disabled="true"></ion-input>\n              </ion-item>\n      \n              <ion-item>\n                  <ion-label color="">Medical Store Name :</ion-label>\n                  <ion-input type="text" [(ngModel)]="medicineBoughtListView.facilityCenterName" name="Medical" disabled="true"></ion-input>\n              </ion-item>\n              \n              <ion-item>\n                  <ion-label color="">Cost :</ion-label>\n                  <ion-input type="text" [(ngModel)]="medicineBoughtListView.patientID" name="Cost" disabled="true"></ion-input>\n              </ion-item>\n  \n              <ion-item>\n                  <ion-label color="">Associated Visit :</ion-label>\n                  <ion-input type="text" [(ngModel)]="medicineBoughtListView.patVisitType" name="Associated" disabled="true"></ion-input>\n              </ion-item>\n  \n              <ion-item>\n                 <button ion-button (click)="showVisit()" style="float: right;">Show Associated Visit</button>\n              </ion-item>\n            </div>       \n          </ion-list>\n        </form>\n  </ion-content>\n  '/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientmedicineboughtlistview/patientmedicineboughtlistview.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], PatientmedicineboughtlistviewPage);
    return PatientmedicineboughtlistviewPage;
}());

//# sourceMappingURL=patientmedicineboughtlistview.js.map

/***/ }),

/***/ 279:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientprofilePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__profiledemographic_profiledemographic__ = __webpack_require__(280);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__patientprofiledocuments_patientprofiledocuments__ = __webpack_require__(281);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patientprofilepersonal_patientprofilepersonal__ = __webpack_require__(282);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__patientprofileextended_patientprofileextended__ = __webpack_require__(283);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__commonpages_changepassword_changepassword__ = __webpack_require__(97);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the PatientprofilePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientprofilePage = /** @class */ (function () {
    function PatientprofilePage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        // @ViewChild('ionTabs') tabRef: Tabs;
        this.tabPersonal = __WEBPACK_IMPORTED_MODULE_4__patientprofilepersonal_patientprofilepersonal__["a" /* PatientprofilepersonalPage */];
        this.tabDemographic = __WEBPACK_IMPORTED_MODULE_2__profiledemographic_profiledemographic__["a" /* ProfiledemographicPage */];
        this.tabExtendedProfile = __WEBPACK_IMPORTED_MODULE_5__patientprofileextended_patientprofileextended__["a" /* PatientprofileextendedPage */];
        this.tabDocuments = __WEBPACK_IMPORTED_MODULE_3__patientprofiledocuments_patientprofiledocuments__["a" /* PatientprofiledocumentsPage */];
        this.tabChangePassoword = __WEBPACK_IMPORTED_MODULE_6__commonpages_changepassword_changepassword__["a" /* ChangepasswordPage */];
        this.scrollableTabsopts = {};
        this.mySelectedIndex = navParams.data.tabIndex || 0;
    }
    PatientprofilePage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad PatientprofilePage");
    };
    PatientprofilePage.prototype.refreshScrollbarTabs = function () {
        this.scrollableTabsopts = { refresh: true };
    };
    PatientprofilePage.prototype.switchTabs = function (pos) {
        this.navCtrl.parent.setlect(pos);
    };
    PatientprofilePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-patientprofile",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientprofile/patientprofile.html"*/'<!--\n  Generated template for the PatientprofilePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<style>\n  .tabbar::after {\n    content: none;\n  }\n</style>\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Patient Profile</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n<ion-content>\n  <ion-tabs\n    #ionTabs\n    [scrollable-tabs]="ionTabs"\n    [opts]="scrollableTabsopts"\n    selectedIndex="0"\n    color="default"\n    tabsHighlight="true"\n    tabsPlacement="top"\n   \n  >\n    <ion-tab [root]="tabPersonal" tabTitle="Personal"></ion-tab>\n    <ion-tab [root]="tabDemographic" tabTitle="Demographic"></ion-tab>\n    <ion-tab [root]="tabExtendedProfile" tabTitle="Extended"></ion-tab>\n    <ion-tab [root]="tabDocuments" tabTitle="Documents"></ion-tab>\n    <ion-tab [root]="tabChangePassoword" tabTitle="Change Password"></ion-tab>\n  </ion-tabs>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientprofile/patientprofile.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], PatientprofilePage);
    return PatientprofilePage;
}());

//# sourceMappingURL=patientprofile.js.map

/***/ }),

/***/ 280:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProfiledemographicPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__dash_board_for_patient_dash_board_for_patient__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_google_maps__ = __webpack_require__(122);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_geolocation__ = __webpack_require__(123);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_forms__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_geocoder_geocoder__ = __webpack_require__(112);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the ProfiledemographicPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ProfiledemographicPage = /** @class */ (function () {
    function ProfiledemographicPage(navCtrl, navParams, api, alertCtrl, toastCtrl, _googleMaps, _geoLoc, _PLATFORM, _FB, _GEOCODE) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.toastCtrl = toastCtrl;
        this._googleMaps = _googleMaps;
        this._geoLoc = _geoLoc;
        this._PLATFORM = _PLATFORM;
        this._FB = _FB;
        this._GEOCODE = _GEOCODE;
        this.mobileNumberValidation = /^[0-9]{10}$/;
        this.timeZoneArray = [];
        this.filter = "Search by Coordinates";
        this.displayForward = true;
        this.displayReverse = false;
        this.states = [
            {
                title: "States",
                id: 1
            },
            {
                title: "Gujarat",
                id: 2
            }
        ];
        this.selectedState = this.states[0];
        this.countries = [
            {
                title: "Country",
                id: 1
            },
            {
                title: "India",
                id: 2
            },
            {
                title: "Greece",
                id: 3
            },
            {
                title: "Tonga",
                id: 4
            }
        ];
        this.selectedCountry = this.countries[0];
        this.loadAddressObject = {
            // facilityname:"",
            // facilitytype:"",
            addressLine1: "",
            addressLine2: "",
            addressLine3: "",
            area: "",
            city: "",
            state: "",
            zip: "",
            country: "",
            milestone1: "",
            milestone2: "",
            timeZoneMaster: {
                utcTimeZoneId: 10
            }
        };
        this.addressObject = {
            // facilityname:"",
            // facilitytype:"",
            locationID: 0,
            addressLine1: "",
            addressLine2: "",
            addressLine3: "",
            area: "",
            city: "",
            state: "",
            zip: "",
            country: "",
            milestone1: "",
            milestone2: "",
            utcTimeZoneId: null,
            timeSlot: null,
            timeZoneMaster: {
                utcTimeZoneId: 10
            }
        };
        this.demographicProfile = {
            personID: "",
            locationMaster: [],
            perMobileList: [],
            perMobilePrimary: "",
            plmLocationStatus: ""
            // addressLine1: '',
            // addressLine2: '',
            // addressLine3: '',
            // zipcode: '',
            // state: '',
            // country: ''
        };
        this.form = _FB.group({
            keyword: ["", __WEBPACK_IMPORTED_MODULE_7__angular_forms__["g" /* Validators */].required]
        });
        this.geoForm = _FB.group({
            latitude: ["", __WEBPACK_IMPORTED_MODULE_7__angular_forms__["g" /* Validators */].required],
            longitude: ["", __WEBPACK_IMPORTED_MODULE_7__angular_forms__["g" /* Validators */].required]
        });
    }
    ProfiledemographicPage.prototype.cancel = function () {
        this.navCtrl.parent.parent.push(__WEBPACK_IMPORTED_MODULE_4__dash_board_for_patient_dash_board_for_patient__["a" /* DashBoardForPatientPage */]);
    };
    ProfiledemographicPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad ProfiledemographicPage");
        this.getAllTimeZone();
        this.getDemographicData();
        // this.initMpa();
    };
    /**
     * get list of cities
     */
    ProfiledemographicPage.prototype.getAllTimeZone = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllTimeZone, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.timeZoneArray = resp.data;
                _this.selectedTimeZone = _this.timeZoneArray[0].utcTimeZoneId;
                _this.showTimeZone(_this.selectedTimeZone);
                console.log("location array 0 item", _this.timeZoneArray[0].utcTimeZoneId);
            }
        });
    };
    ProfiledemographicPage.prototype.showTimeZone = function (TimeZoneID) {
        console.log("locationid >> " + TimeZoneID);
        this.selectedTimeZone = TimeZoneID;
    };
    ProfiledemographicPage.prototype.getDemographicData = function () {
        var _this = this;
        var data1 = {
            // addressLine1: this.addressObject.addressLine1,
            // addressLine2: this.addressObject.addressLine2,
            // addressLine3: this.addressObject.addressLine3,
            // timeZoneMaster: this.addressObject.timeZoneMaster,
            // city: this.addressObject.city,
            // state: this.addressObject.state,
            // zip: this.addressObject.zip,
            // country: this.addressObject.country
            addressLine1: "",
            addressLine2: "",
            addressLine3: "",
            city: "",
            state: "",
            zip: "",
            country: "",
            timeZoneMaster: {
                utcTimeZoneId: 10
            }
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getPatientDemographicData, data1)
            .then(function (resp) {
            console.log("response" + resp);
            console.log("locationMaster >> ", resp.data.locationMaster.length);
            if (resp.data.locationMaster.length > 0) {
                _this.demographicProfile.locationMaster = resp.data.locationMaster;
            }
            if (resp.data.perMobileList.length > 0) {
                for (var i = 0; i < resp.data.perMobileList.length; i++) {
                    _this.demographicProfile.perMobileList.push(resp.data.perMobileList[i].value);
                }
            }
            for (var _i = 0, _a = resp.data.locationMaster; _i < _a.length; _i++) {
                var address = _a[_i];
                _this.loadAddressObject.addressLine1 = address.addressLine1;
                _this.loadAddressObject.addressLine2 = address.addressLine2;
                _this.loadAddressObject.addressLine3 = address.addressLine3;
                _this.loadAddressObject.city = address.city;
                console.log("city: " + address.city);
                _this.loadAddressObject.timeZoneMaster =
                    address.timeZoneMaster.countryName;
                console.log("timeZoneMaster: " + address.timeZoneMaster.countryName);
                _this.loadAddressObject.state = address.state;
                _this.loadAddressObject.zip = address.zip;
                _this.loadAddressObject.country = address.country;
                _this.fulladdress =
                    address.addressLine1.toString() +
                        "," +
                        address.addressLine2.toString() +
                        "," +
                        address.addressLine3.toString() +
                        "," +
                        address.city.toString() +
                        address.timeZoneMaster.countryName.toString() +
                        address.state.toString() +
                        address.zip.toString() +
                        address.country.toString();
                _this.performForwardGeocoding(_this.fulladdress);
                //console.log("test getPatientDemographicData inside+++++++"+this.performForwardGeocoding(this.loadAddressObject.addressLine3));
            }
            // this.addressObject.addressLine1 =resp.data.locationMaster[0].addressLine1;
            _this.demographicProfile.personID = resp.data.personID;
            _this.demographicProfile.plmLocationStatus = resp.data.plmLocationStatus;
            _this.demographicProfile.perMobilePrimary = resp.data.perMobilePrimary;
            // this.performForwardGeocoding(this.loadAddressObject.city);
            // console.log("test getPatientDemographicData+++++++"+this.performForwardGeocoding(this.loadAddressObject.addressLine3));
        });
    };
    // showlocation(locationID: any) {
    //   console.log("locationid >> " + locationID);
    //   this.selectedTimeZone = locationID;
    // }
    ProfiledemographicPage.prototype.addAddress = function () {
        console.log("addAddress >> ", JSON.stringify(this.addressObject));
        if (this.addressObject.addressLine1.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid addressline 1", this.toastCtrl);
        }
        else if (this.addressObject.addressLine2.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid addressline 2", this.toastCtrl);
        }
        else if (this.addressObject.addressLine3.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid addressline 3", this.toastCtrl);
        }
        else if (this.addressObject.zip.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid zip", this.toastCtrl);
        }
        else if (this.addressObject.city.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid city", this.toastCtrl);
        }
        else if (this.addressObject.state.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid state", this.toastCtrl);
        }
        else if (this.addressObject.country.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid country", this.toastCtrl);
        }
        else {
            this.demographicProfile.locationMaster.push(this.addressObject);
            this.addressObject = {
                locationID: 0,
                addressLine1: "",
                addressLine2: "",
                addressLine3: "",
                area: "",
                city: "",
                state: "",
                zip: "",
                country: "",
                milestone1: null,
                milestone2: null,
                utcTimeZoneId: null,
                timeSlot: null,
                timeZoneMaster: {
                    utcTimeZoneId: 10
                }
            };
        }
    };
    ProfiledemographicPage.prototype.submitDetails = function () {
        console.log("submitDetails >> ", JSON.stringify(this.demographicProfile));
        if (this.demographicProfile.perMobilePrimary.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter valid phone number", this.toastCtrl);
        }
        else {
            this.updatePatientDemographicProfile();
        }
    };
    ProfiledemographicPage.prototype.addtoList = function () {
        if (!this.mobileNumberValidation.test(this.secondaryPhone)) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid phone number", this.toastCtrl);
            return;
        }
        this.demographicProfile.perMobileList.push(this.secondaryPhone);
        this.secondaryPhone = "";
    };
    ProfiledemographicPage.prototype.deleteelement = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: "Confirm Delete",
            message: "Are you sure, you want to delete this phone number?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "OK",
                    handler: function () {
                        var index = _this.demographicProfile.perMobileList.indexOf(list);
                        if (index > -1) {
                            _this.demographicProfile.perMobileList.splice(index, 1);
                        }
                        console.log("Item deleted");
                    }
                }
            ]
        });
        alert.present();
    };
    ProfiledemographicPage.prototype.deleteAddress = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: "Confirm Delete",
            message: "Are you sure, you want to delete this address?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "OK",
                    handler: function () {
                        var index = _this.demographicProfile.locationMaster.indexOf(list);
                        if (index > -1) {
                            _this.demographicProfile.locationMaster.splice(index, 1);
                        }
                        console.log("Item deleted");
                    }
                }
            ]
        });
        alert.present();
    };
    ProfiledemographicPage.prototype.updatePatientDemographicProfile = function () {
        var _this = this;
        console.log("DAta==========", this.demographicProfile);
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].updatePatientDemographicProfile, this.demographicProfile)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                // this.demographicProfile = resp.data;
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
            }
        });
    };
    // viral code map intigration
    ProfiledemographicPage.prototype.ngAfterViewInit = function () {
        var _this = this;
        var loc;
        this.initMap();
        this.map.one(__WEBPACK_IMPORTED_MODULE_5__ionic_native_google_maps__["b" /* GoogleMapsEvent */].MAP_READY).then(function () {
            _this.geoLocation()
                .then(function (res) {
                console.log(res.coords.latitude);
                console.log(res.coords.longitude);
                loc = new __WEBPACK_IMPORTED_MODULE_5__ionic_native_google_maps__["c" /* LatLng */](res.coords.latitude, res.coords.longitude);
                _this.moveCamera(loc);
                _this.createMrker(loc, "Me")
                    .then(function (marker) {
                    marker.showInfoWindow();
                })
                    .catch(function (err) {
                    console.log(err);
                });
            })
                .catch(function (err) {
                console.log(err);
            });
        });
    };
    ProfiledemographicPage.prototype.initMap = function () {
        var element = this.mapElement.nativeElement;
        this.map = __WEBPACK_IMPORTED_MODULE_5__ionic_native_google_maps__["a" /* GoogleMaps */].create("map_canvas");
    };
    ProfiledemographicPage.prototype.geoLocation = function () {
        return this._geoLoc.getCurrentPosition();
    };
    ProfiledemographicPage.prototype.moveCamera = function (loc) {
        var options = {
            target: loc,
            zoom: 15,
            tilt: 10
        };
        this.map.moveCamera(options);
    };
    ProfiledemographicPage.prototype.createMrker = function (loc, title) {
        var markerOptions = {
            position: loc,
            title: title
        };
        return this.map.addMarker(markerOptions);
    };
    ProfiledemographicPage.prototype.performForwardGeocoding = function (val) {
        var _this = this;
        //this._PLATFORM.ready()
        //.then((data : any) =>
        //{
        var keyword = this.form.controls["keyword"].value;
        this._GEOCODE.forwardGeocode(val).then(function (data) {
            _this.geocoded = true;
            console.log("test : " + data);
            var str = data[0].latitude + "," + data[0].longitude;
            // console.log("test : "+data[0]);
            _this.results = str;
            console.log(" forwardGeocode result++++++++++" + _this.results);
            var lat = data[0].latitude;
            var long = data[0].longitude;
            var loc = new __WEBPACK_IMPORTED_MODULE_5__ionic_native_google_maps__["c" /* LatLng */](lat, long);
            _this.moveCamera(loc);
            _this.createMrker(loc, _this.fulladdress)
                .then(function (marker) {
                marker.showInfoWindow();
                //}).catch( err =>{
                //console.log(err);
                //  });
                // console.log(" forwardGeocode result+++lat+++++++"+this.results[0]);
                // console.log(" forwardGeocode result+++++long+++++"+this.results[1]);
            })
                .catch(function (error) {
                _this.geocoded = true;
                _this.results = error.message;
            });
        });
    };
    ProfiledemographicPage.prototype.performReverseGeocoding = function (val) {
        var _this = this;
        this._PLATFORM.ready().then(function (data) {
            var latitude = parseFloat(_this.geoForm.controls["latitude"].value), longitude = parseFloat(_this.geoForm.controls["longitude"].value);
            _this._GEOCODE
                .reverseGeocode(latitude, longitude)
                .then(function (data) {
                _this.geocoded = true;
                _this.results = data;
                console.log(" reverseGeocode result++++++++++" + _this.results);
            })
                .catch(function (error) {
                _this.geocoded = true;
                _this.results = error.message;
            });
        });
    };
    ProfiledemographicPage.prototype.filterForm = function () {
        if (this.displayForward) {
            this.filter = "Search by keyword";
            this.displayReverse = true;
            this.displayForward = false;
        }
        else {
            this.filter = "Search by Co-ordinates";
            this.displayReverse = false;
            this.displayForward = true;
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("map"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], ProfiledemographicPage.prototype, "mapElement", void 0);
    ProfiledemographicPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-profiledemographic",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/profiledemographic/profiledemographic.html"*/'<!--\n  Generated template for the ProfiledemographicPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header> </ion-header>\n\n<ion-content>\n  <div class="cmn-form no-input-efct bg-fff mt5">\n    <!-- <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Facility Center Name</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.facilityname"\n        />\n      </div>\n    </div> -->\n    <!-- <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        [(ngModel)]="addressObject.facilitytype"\n      >\n        <option value="India">Hospital</option>\n        <option value="Greece">Lab</option>\n        <option value="Tonga">MedicalCenter</option>\n      </select>\n      <label>Facility Center type</label>\n    </div> -->\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Address Line 1</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.addressLine1"\n        />\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Address Line 2</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.addressLine2"\n        />\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Address Line 3</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.addressLine3"\n        />\n      </div>\n    </div>\n\n    <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        [(ngModel)]="addressObject.city"\n      >\n        <option>City </option>\n        <option>ahmedabad </option>\n      </select>\n      <label>City</label>\n    </div>\n    <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        [(ngModel)]="addressObject.state"\n      >\n        <option>State </option>\n        <option>Gujarat </option>\n      </select>\n      <label>State</label>\n    </div>\n    <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        [(ngModel)]="addressObject.country"\n      >\n        <option>Country </option>\n        <option>India </option>\n      </select>\n      <label>Country</label>\n    </div>\n    <!-- <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">city</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.city"\n        />\n      </div>\n    </div> -->\n    <!-- <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">State</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.state"\n        />\n      </div>\n    </div> -->\n\n    <!-- <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Country</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.country"\n        />\n      </div>\n    </div> -->\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">ZipCode</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="addressObject.zip"\n        />\n      </div>\n    </div>\n\n    <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        [(ngModel)]="addressObject.timeZoneMaster.utcTimeZoneId"\n        (change)="showTimeZone($event.target.value)"\n      >\n        <option\n          *ngFor="let category of timeZoneArray; let idx = index"\n          [value]="category.utcTimeZoneId"\n          selected="{{ (idx == 0).utcTimeZoneId }}"\n          >{{ category.countryName }}</option\n        >\n      </select>\n      <label>Time Zone</label>\n    </div>\n\n    <!-- <div class="floating-label cmn-select">\n      <select\n        class="floating-select form-control"\n        [(ngModel)]="addressObject.timeZoneMaster"\n      >\n        <option>Time Zone </option>\n        <option>INDIA </option>\n        <option>UNITED STATES</option>\n      </select>\n      <label>Time Zone</label>\n    </div> -->\n\n    <div align="left">\n      <button\n        class="btn cmn-thm-btn mr-25"\n        type="submit"\n        (click)="addAddress()"\n        block\n      >\n        Add New Address\n      </button>\n    </div>\n\n    <!-- <button\n    ion-button\n    block\n    color="secondary"\n    (click)="filterForm()">{{ filter }}</button>\n  \n    <form\n    *ngIf="displayForward"\n    [formGroup]="form">\n    <ion-list>\n       <ion-item margin-bottom>\n          <ion-label>Location</ion-label>\n          <ion-input\n             type="text"\n             formControlName="keyword"></ion-input>\n       </ion-item>\n  \n  \n       <ion-item margin-bottom>\n          <button\n             ion-button\n             color="primary"\n             text-center\n             block\n             [disabled]="!form.valid">Geocode this location</button>\n       </ion-item>\n  \n    </ion-list>\n  </form> -->\n\n    <ion-item>\n      <ion-list class="cmn-tb-cntnt">\n        <ion-item-sliding\n          #slidingItem\n          *ngFor="let item of demographicProfile.locationMaster"\n          (ngSubmit)="performForwardGeocoding(item.value)"\n        >\n          <ion-item>\n            <div class="dr-name">\n              {{item.addressLine1}}, {{item.addressLine2}},\n              {{item.addressLine3}}\n            </div>\n            <div class="apmnt-tm">\n              {{item.city}}, {{item.state}}, {{item.country}}\n            </div>\n            <div class="rson-fr-meet">{{item.zip}}</div>\n            <ion-icon\n              class="trashicon"\n              (click)="deleteAddress(item)"\n              name="trash"\n              data-ng-if="(demographicProfile.locationMaster.length > 0)"\n            ></ion-icon>\n          </ion-item>\n        </ion-item-sliding>\n      </ion-list>\n    </ion-item>\n\n    <div #map id="map_canvas" style="height:250px"></div>\n    <!-- <ion-item>\n      <ion-list class="cmn-tb-cntnt">\n        <ion-item-sliding\n          #slidingItem\n          *ngFor="let item of demographicProfile.locationMaster"\n        >\n          <ion-item>\n            <div class="dr-name">\n              {{item.addressLine1}}, {{item.addressLine2}},\n              {{item.addressLine3}}\n            </div>\n            <div class="apmnt-tm">\n              {{item.city}}, {{item.state}}, {{item.country}}\n            </div>\n            <div class="rson-fr-meet">{{item.zip}}</div>\n            <div class="apmnt-status">{{item.patAppStatus}}</div>\n          </ion-item>\n\n          <ion-item-options>\n              <ion-icon\n              class="trashicon"\n              (click)="deleteelement(item)"\n              name="trash"\n              data-ng-if="(demographicProfile.locationMaster.length > 0)"\n            ></ion-icon>\n          </ion-item-options>\n        </ion-item-sliding>\n      </ion-list>\n    </ion-item> -->\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Phone</label>\n        <input\n          type="text"\n          class="form-control"\n          [(ngModel)]="demographicProfile.perMobilePrimary"\n        />\n      </div>\n    </div>\n    <div class="pl15 pr15 form-bb">\n      <div class="form-group">\n        <label class="bmd-label-floating">Secondary Phone</label>\n        <input type="text" class="form-control" [(ngModel)]="secondaryPhone" />\n      </div>\n    </div>\n    <button class="btn cmn-thm-btn mr-25" (click)="addtoList()">Add</button>\n    <ion-item>\n      <ion-list>\n        <ion-item *ngFor="let list of demographicProfile.perMobileList">\n          {{list}}\n          <ion-icon\n            class="trashicon"\n            (click)="deleteelement(list)"\n            name="trash"\n            data-ng-if="(demographicProfile.perMobileList.length > 0)"\n          ></ion-icon>\n        </ion-item>\n      </ion-list>\n    </ion-item>\n\n    <div padding align="center">\n      <div padding>\n        <button\n          class="btn cmn-thm-btn mr-25"\n          type="submit"\n          (click)="submitDetails()"\n        >\n          Submit\n        </button>\n        <!-- <div #map id="map_canvas" style="height:10%; width:10%"></div> -->\n        <button class="cmn-wht-btn" type="Cancel" (click)="cancel()">\n          Cancel\n        </button>\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <ion-item>\n  <ion-label floating>Facility Center Name</ion-label>\n  <ion-input [(ngModel)]="addressObject.facilityname" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label color="" floating>Facility Center type</ion-label>\n  <ion-select [(ngModel)]="addressObject.facilitytype">\n    <ion-option value="India">Hospital</ion-option>\n    <ion-option value="Greece">Lab</ion-option>\n    <ion-option value="Tonga">MedicalCenter</ion-option>\n  </ion-select>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Address Line 1</ion-label>\n  <ion-input [(ngModel)]="addressObject.addressLine1" type="text"></ion-input>\n</ion-item>\n<ion-item>\n  <ion-label floating>Address Line 2</ion-label>\n  <ion-input [(ngModel)]="addressObject.addressLine2" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Address Line 3</ion-label>\n  <ion-input [(ngModel)]="addressObject.addressLine3" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>ZipCode</ion-label>\n  <ion-input [(ngModel)]="addressObject.zip" type="number"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>area</ion-label>\n  <ion-input [(ngModel)]="addressObject.area" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>city</ion-label>\n  <ion-input [(ngModel)]="addressObject.city" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>State</ion-label>\n  <ion-input [(ngModel)]="addressObject.state" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Country</ion-label>\n  <ion-input [(ngModel)]="addressObject.country" type="text"></ion-input>\n</ion-item>\n\n<div padding align="center">\n  <button ion-button type="submit" (click)="addAddress()" block>\n    Add New Address\n  </button>\n</div>\n\n<ion-item>\n  <ion-list class="cmn-tb-cntnt">\n    <ion-item-sliding\n      #slidingItem\n      *ngFor="let item of demographicProfile.locationMaster"\n    >\n      <ion-item>\n        <div class="ptnt-name">\n          {{item.addressLine1}}, {{item.addressLine2}}, {{item.addressLine3}}\n        </div>\n        <div class="rson-fr-meet">{{item.area}}, {{item.zip}}</div>\n        <div class="apmnt-tm">\n          {{item.city}}, {{item.state}}, {{item.country}}\n        </div>\n        <div class="apmnt-status">{{item.patAppStatus}}</div>\n      </ion-item>\n\n      <ion-item-options>\n        <button ion-button color="danger" (click)="deleteAddress(item)">\n          Delete\n        </button>\n      </ion-item-options>\n    </ion-item-sliding>\n  </ion-list>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Phone</ion-label>\n  <ion-input\n    [(ngModel)]="demographicProfile.perMobilePrimary"\n    type="number"\n  ></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Secondary Phone</ion-label>\n  <ion-input type="number" [(ngModel)]="secondaryPhone"></ion-input>\n</ion-item>\n\n<button ion-button (click)="addtoList()">Add</button>\n\n<ion-item>\n  <ion-list>\n    <ion-item *ngFor="let list of demographicProfile.perMobileList">\n      {{list}}\n      <ion-icon\n        class="trashicon"\n        (click)="deleteelement(list)"\n        name="trash"\n        data-ng-if="(demographicProfile.perMobileList.length > 0)"\n      ></ion-icon>\n    </ion-item>\n  </ion-list>\n</ion-item>\n\n<div padding align="center">\n  <div padding>\n    <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n    <button ion-button type="Cancel">Cancel</button>\n  </div>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/profiledemographic/profiledemographic.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_google_maps__["a" /* GoogleMaps */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_geolocation__["a" /* Geolocation */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_7__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_8__providers_geocoder_geocoder__["a" /* GeocoderProvider */]])
    ], ProfiledemographicPage);
    return ProfiledemographicPage;
}());

//# sourceMappingURL=profiledemographic.js.map

/***/ }),

/***/ 281:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientprofiledocumentsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_file_path__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_photo_viewer__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_file__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__dash_board_for_patient_dash_board_for_patient__ = __webpack_require__(62);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var PatientprofiledocumentsPage = /** @class */ (function () {
    function PatientprofiledocumentsPage(navCtrl, navParams, camera, actionSheetCrtl, tostCrtl, platform, filePath, file, photoViewer, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.camera = camera;
        this.actionSheetCrtl = actionSheetCrtl;
        this.tostCrtl = tostCrtl;
        this.platform = platform;
        this.filePath = filePath;
        this.file = file;
        this.photoViewer = photoViewer;
        this.api = api;
        this.formData = new FormData();
        this.isChkBoxAdharCardActive = false;
        this.isChkBoxPanCardActive = false;
        this.isChkBoxLicenseActive = false;
        // imageAadharCard: string = null
        // imagePancard: string = null
        // imageLicense: string = null
        this.profileDocument = {
            personID: "",
            perAadhaar: "",
            isAadhaarverified: "",
            perPANCard: "",
            isPerPANCardverified: "",
            perDriving: "",
            isPerDrivingLicense: "",
            perSSN: "",
            perSIN: "",
            perPANCardNo: "",
            perDrivingNo: "",
            perAadhaarCardNo: "",
            perPANcardNo: "",
            perDrivingLicenseNo: "",
            perAadhaarCardID: "",
            perPANcardID: "",
            perDrivingLicenseID: ""
        };
    }
    PatientprofiledocumentsPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad PatientprofiledocumentsPage");
        this.getDocumentData();
    };
    PatientprofiledocumentsPage.prototype.clickOnAdharCardChkBox = function () {
        this.isChkBoxAdharCardActive = !this.isChkBoxAdharCardActive;
        console.log("Cucumbers new state:" + this.isChkBoxAdharCardActive);
    };
    PatientprofiledocumentsPage.prototype.buttonClickForChooseIDs = function (type) {
        var _this = this;
        this.selectImageFor = type;
        Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["g" /* showActionSheetPhoto */])(this.actionSheetCrtl).then(function (seletedIndex) {
            _this.choosePhotoFromCameraOrGallery(seletedIndex);
        });
    };
    PatientprofiledocumentsPage.prototype.clickOnButtonSave = function () {
        // if (this.isChkBoxAdharCardActive && (this.profileDocument.perAadhaarCardID == "" || this.profileDocument.perAadhaarCardID == null)) {
        //   showToast("Please enter adhar card number", this.tostCrtl)
        // }
        // else if (this.isChkBoxPanCardActive && (this.profileDocument.perPANcardID == "" || this.profileDocument.perPANcardID == null)) {
        //   showToast("Please enter pan card number", this.tostCrtl)
        // }
        // else if (this.isChkBoxLicenseActive && (this.profileDocument.perDrivingLicenseID == "" || this.profileDocument.perDrivingLicenseID == null)) {
        //   showToast("Please enter license number", this.tostCrtl)
        // }
        console.log("ssn :- " +
            this.profileDocument.perSSN +
            "Sin" +
            this.profileDocument.perSIN);
        if (this.profileDocument.perSSN == "" ||
            this.profileDocument.perSSN == null) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter SSN No", this.tostCrtl);
        }
        else if (this.profileDocument.perSIN == "" ||
            this.profileDocument.perSIN == null) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter SIN No", this.tostCrtl);
        }
        else {
            this.callWebserviceUpdateDocuments();
        }
    };
    PatientprofiledocumentsPage.prototype.choosePhotoFromCameraOrGallery = function (sourceType) {
        var _this = this;
        var options = {
            quality: 100,
            destinationType: __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__["b" /* DestinationType */].FILE_URL,
            sourceType: sourceType,
            saveToPhotoAlbum: true,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            correctOrientation: true
        };
        this.camera.getPicture(options).then(function (imagePath) {
            console.log("getPicture >> ", imagePath);
            console.log("getPicture >> ", imagePath);
            console.log("getPicture  normalizeURL(imagePath) >> ", Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            _this.saveImage(Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            if (_this.selectImageFor == 1) {
                _this.profileDocument.perAadhaarCardID = imagePath;
            }
            else if (_this.selectImageFor == 2) {
                _this.profileDocument.perPANcardID = imagePath;
            }
            else {
                _this.profileDocument.perDrivingLicenseID = imagePath;
            }
        }, function (err) {
            // Handle error
            alert(err);
        });
    };
    PatientprofiledocumentsPage.prototype.showPhoto = function (imagePath) {
        console.log("showPhoto clicked");
        this.photoViewer.show(imagePath);
    };
    PatientprofiledocumentsPage.prototype.getDocumentData = function () {
        var _this = this;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getDocumentsPatientProfile, "")
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("getDocumentData >> ", resp);
                // this.profileDocument = resp.data
                _this.profileDocument.personID = resp.data.personID;
                _this.profileDocument.perAadhaarCardNo = resp.data.perAadhaarCardNo;
                _this.profileDocument.perPANcardNo = resp.data.perPANcardNo;
                _this.profileDocument.perPANcardID = resp.data.perPANcardID;
                _this.profileDocument.perDrivingLicenseID =
                    resp.data.perDrivingLicenseID;
                _this.profileDocument.perDrivingLicenseNo =
                    resp.data.perDrivingLicenseNo;
                _this.profileDocument.perAadhaar = resp.data.perAadhaarCardID;
                _this.profileDocument.perAadhaarCardID = resp.data.perAadhaarCardID;
                _this.profileDocument.isAadhaarverified = resp.data.isAadhaarverified;
                _this.profileDocument.perPANCard = resp.data.perPANcardID;
                _this.profileDocument.isPerPANCardverified =
                    resp.data.isPerPANCardverified;
                _this.profileDocument.perDriving = resp.data.perDrivingLicenseID;
                _this.profileDocument.isPerDrivingLicense =
                    resp.data.isPerDrivingLicense;
                _this.profileDocument.perSIN = resp.data.perSIN;
                _this.profileDocument.perSSN = resp.data.perSSN;
                // this.profileDocument.perPANCardNo = resp.data.perAadhaarCardNo
                // this.profileDocument.perDrivingNo = resp.data.perDrivingLicenseNo
                // this.profileDocument.perAadhaarNo = resp.data.perPANcardNo
                /*this.formData.append('personID', this.profileDocument.personID)
              this.formData.append('isAadhaarverified', this.profileDocument.isAadhaarverified)
              this.formData.append('isPerDrivingLicense', this.profileDocument.isPerDrivingLicense)
              this.formData.append('isPerPANCardverified', this.profileDocument.isPerPANCardverified)
              this.formData.append('perSIN', this.profileDocument.perSIN)
              this.formData.append('perSSN', this.profileDocument.perSSN)*/
                // this.formData.append('perAadhaar', this.profileDocument.perAadhaarCardID)
                // this.formData.append('perDriving', this.profileDocument.perDrivingLicenseID)
                // this.formData.append('perPANCard', this.profileDocument.perPANcardID)
            }
        });
    };
    PatientprofiledocumentsPage.prototype.cancle = function () {
        console.log("cancle button clicked");
        this.navCtrl.parent.parent.push(__WEBPACK_IMPORTED_MODULE_8__dash_board_for_patient_dash_board_for_patient__["a" /* DashBoardForPatientPage */]);
    };
    PatientprofiledocumentsPage.prototype.callWebserviceUpdateDocuments = function () {
        var _this = this;
        this.formData.append("personID", this.profileDocument.personID);
        this.formData.append("isAadhaarverified", this.profileDocument.isAadhaarverified);
        this.formData.append("isPerDrivingLicense", this.profileDocument.isPerDrivingLicense);
        this.formData.append("isPerPANCardverified", this.profileDocument.isPerPANCardverified);
        this.formData.append("perSIN", this.profileDocument.perSIN);
        this.formData.append("perSSN", this.profileDocument.perSSN);
        console.log("perSIN :- " + this.profileDocument.perSIN);
        console.log("perSSN :- " + this.profileDocument.perSSN);
        console.log("Dataaaaaa :- " + JSON.stringify(this.formData));
        this.api
            .wsPostMutlipartHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].updateDocumentsPatientProfile, this.formData)
            .then(function (resp) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.tostCrtl);
        });
    };
    PatientprofiledocumentsPage.prototype.saveImage = function (imageFileUri) {
        var _this = this;
        this.file
            .resolveLocalFilesystemUrl(imageFileUri)
            .then(function (entry) {
            return entry.file(function (file) {
                _this.readFile(file);
            });
        })
            .catch(function (err) { return console.log(err); });
    };
    PatientprofiledocumentsPage.prototype.readFile = function (file) {
        var _this = this;
        var reader = new FileReader();
        reader.onloadend = function () {
            var imgBlob = new Blob([reader.result], { type: file.type });
            console.log("imgBlob >> ", imgBlob);
            if (_this.selectImageFor == 1) {
                _this.formData.append("perAadhaar", imgBlob, file.name);
            }
            else if (_this.selectImageFor == 2) {
                _this.formData.append("perDriving", imgBlob, file.name);
            }
            else {
                _this.formData.append("perPANCard", imgBlob, file.name);
            }
            // this.callWebserviceUpdateDocuments()
        };
        reader.readAsArrayBuffer(file);
    };
    PatientprofiledocumentsPage.prototype.cancel = function () {
        console.log("cancel button clicked");
        this.navCtrl.parent.parent.push(__WEBPACK_IMPORTED_MODULE_8__dash_board_for_patient_dash_board_for_patient__["a" /* DashBoardForPatientPage */]);
    };
    PatientprofiledocumentsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-patientprofiledocuments",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientprofiledocuments/patientprofiledocuments.html"*/'<!--\n  Generated template for the PatientprofiledocumentsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header> </ion-header>\n\n<ion-content>\n  <div class="tab-pane" id="Documents">\n    <div class="documents">\n      <!-- doc no start -->\n      <div class="document-no bg-fff cmn-form no-input-efct">\n        <!-- <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">SSN No</label>\n            <input\n              type="number"\n              class="form-control"\n              name="ssnNo"\n              [(ngModel)]="profileDocument.perSSN"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">SIN No</label>\n            <input\n              type="number"\n              class="form-control"\n              name="ssnNo"\n              [(ngModel)]="profileDocument.perSIN"\n            />\n          </div>\n        </div> -->\n      </div>\n      <!-- doc no end -->\n      <!-- aadhar detail start -->\n      <div class="aadhar-dtl bg-fff cmn-form no-input-efct mt5">\n        <div class="dcmt-se-ttl">Aadhar Card</div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Aadhar No</label>\n            <input\n              type="text"\n              class="form-control"\n              name="aadharCardNumber"\n              [(ngModel)]="profileDocument.perAadhaarCardNo"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group cmn-file-upld mb-0 pt-30">\n            <div class="filename"></div>\n            <input\n              id="file-upld"\n              type="file"\n              class="form-control cmn-fl-input custom-file-input"\n              value=""\n            />\n            <label\n              class="custom-file-label bmd-label-floating"\n              (click)="buttonClickForChooseIDs(1)"\n              ><span class="lbl-txt">Upload File</span></label\n            >\n          </div>\n        </div>\n        <div class="preview-thumb pl15 pr15">\n          <div class="prvw-doc">\n            <img\n              src="{{profileDocument.perAadhaarCardID}}"\n              (click)="showPhoto(profileDocument.perAadhaarCardID)"\n              class="prvw-doc"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- aadhar detail end -->\n      <!-- Pan Card detail start -->\n      <div class="aadhar-dtl bg-fff cmn-form no-input-efct mt5">\n        <div class="dcmt-se-ttl">Pan Card</div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Pan No</label>\n            <input\n              type="text"\n              class="form-control"\n              name="panNumber"\n              [(ngModel)]="profileDocument.perPANcardNo"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group cmn-file-upld mb-0 pt-30">\n            <div class="filename"></div>\n            <input\n              id="pan-upld"\n              type="file"\n              class="form-control cmn-fl-input custom-file-input"\n              value=""\n            />\n            <label\n              (click)="buttonClickForChooseIDs(2)"\n              class="custom-file-label bmd-label-floating"\n              ><span class="lbl-txt">Upload File</span></label\n            >\n          </div>\n        </div>\n        <div class="preview-thumb pl15 pr15">\n          <div class="prvw-doc">\n            <img\n              src="{{profileDocument.perPANcardID}}"\n              (click)="showPhoto(profileDocument.perPANcardID)"\n              class="prvw-doc"\n            />\n          </div>\n        </div>\n      </div>\n      <!-- Pan Card detail end -->\n      <!-- License detail start -->\n      <div class="aadhar-dtl bg-fff cmn-form no-input-efct mt5">\n        <div class="dcmt-se-ttl">License</div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">License No</label>\n            <input\n              type="text"\n              class="form-control"\n              name="licenseNumber"\n              [(ngModel)]="profileDocument.perDrivingLicenseNo"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group cmn-file-upld mb-0 pt-30">\n            <div class="filename"></div>\n            <input\n              id="license-upld"\n              type="file"\n              class="form-control cmn-fl-input custom-file-input"\n              value=""\n            />\n            <label\n              (click)="buttonClickForChooseIDs(3)"\n              class="custom-file-label bmd-label-floating"\n              ><span class="lbl-txt">Upload File</span></label\n            >\n          </div>\n        </div>\n        <div class="preview-thumb pl15 pr15"></div>\n        <div class="prvw-doc">\n          <img\n            src="{{profileDocument.perDrivingLicenseID}}"\n            (click)="showPhoto(profileDocument.perDrivingLicenseID)"\n            class="prvw-doc"\n          />\n        </div>\n      </div>\n      <!-- License detail end -->\n      <div class="form-button bg-gray mb-20 pt-25 text-center">\n        <button class="btn cmn-thm-btn mr-25" (click)="clickOnButtonSave()">\n          SAVE\n        </button>\n        <button type="button" class="btn  cmn-wht-btn" (click)="cancel()">\n          CANCEL\n        </button>\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <ion-item no-lines>\n  <ion-label>Aadhar Card</ion-label>\n  <ion-checkbox\n    (click)="isChkBoxAdharCardActive=!isChkBoxAdharCardActive"\n  ></ion-checkbox>\n</ion-item>\n<ion-item no-lines> </ion-item>\n<div *ngIf="isChkBoxAdharCardActive">\n  <ion-item no-lines>\n    <ion-label>Upload Adharcard</ion-label>\n  </ion-item>\n  <ion-item no-lines>\n    <button ion-button small (click)="buttonClickForChooseIDs(1)">\n      Choose File\n    </button>\n  </ion-item>\n  <div class="uploaded-img">\n    <img\n      src="{{profileDocument.perAadhaar}}"\n      style="width: 100%"\n      [hidden]="imageAadharCard === null"\n    />\n  </div>\n</div>\n\n<ion-item no-lines>\n  <ion-label>Pancard Card</ion-label>\n  <ion-checkbox\n    (click)="isChkBoxPanCardActive=!isChkBoxPanCardActive"\n  ></ion-checkbox>\n</ion-item>\n<ion-item no-lines> </ion-item>\n<div *ngIf="isChkBoxPanCardActive">\n  <ion-item no-lines>\n    <ion-label>Upload Pancard</ion-label>\n  </ion-item>\n  <ion-item no-lines>\n    <button ion-button small (click)="buttonClickForChooseIDs(2)">\n      Choose File\n    </button>\n  </ion-item>\n  <div class="uploaded-img">\n    <img\n      src="{{profileDocument.perPANCard}}"\n      style="width: 100%"\n      [hidden]="imagePancard === null"\n    />\n  </div>\n</div>\n\n<ion-item no-lines>\n  <ion-label>License</ion-label>\n  <ion-checkbox\n    (click)="isChkBoxLicenseActive=!isChkBoxLicenseActive"\n  ></ion-checkbox>\n</ion-item>\n<ion-item no-lines> </ion-item>\n<div *ngIf="isChkBoxLicenseActive">\n  <ion-item no-lines>\n    <ion-label>Upload License</ion-label>\n  </ion-item>\n  <ion-item no-lines>\n    <button ion-button small (click)="buttonClickForChooseIDs(3)">\n      Choose File\n    </button>\n  </ion-item>\n  <div class="uploaded-img">\n    <img\n      src="{{profileDocument.perDriving}}"\n      style="width: 100%"\n      [hidden]="imageLicense === null"\n    />\n  </div>\n</div>\n\n<ion-item>\n  <ion-label floating>SSN No</ion-label>\n  <ion-input type="number" [(ngModel)]="profileDocument.perSSN"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>SIN No</ion-label>\n  <ion-input type="text" [(ngModel)]="profileDocument.perSIN"></ion-input>\n</ion-item>\n\n<div padding align="center">\n  <div padding>\n    <button ion-button (click)="clickOnButtonSave()">Save</button>\n    <button ion-button>Reset</button>\n  </div>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientprofiledocuments/patientprofiledocuments.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_file_path__["a" /* FilePath */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_photo_viewer__["a" /* PhotoViewer */],
            __WEBPACK_IMPORTED_MODULE_5__providers_api_api__["a" /* ApiProvider */]])
    ], PatientprofiledocumentsPage);
    return PatientprofiledocumentsPage;
}());

//# sourceMappingURL=patientprofiledocuments.js.map

/***/ }),

/***/ 282:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientprofilepersonalPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_file_path__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__dash_board_for_patient_dash_board_for_patient__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_crop_ngx__ = __webpack_require__(398);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










/**
 * Generated class for the PatientprofilepersonalPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientprofilepersonalPage = /** @class */ (function () {
    function PatientprofilepersonalPage(navCtrl, navParams, toastCtrl, api, alertctrl, camera, actionSheetCrtl, platform, filePath, file, appCtrl, crop) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.toastCtrl = toastCtrl;
        this.api = api;
        this.alertctrl = alertctrl;
        this.camera = camera;
        this.actionSheetCrtl = actionSheetCrtl;
        this.platform = platform;
        this.filePath = filePath;
        this.file = file;
        this.appCtrl = appCtrl;
        this.crop = crop;
        this.croppedImagepath = "";
        this.isLoading = false;
        this.emailValidation = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\",this.toastCtrl);)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        this.nameValidation = /[^a-zA-Z]/;
        this.formData = new FormData();
        this.profilePersonal = {
            perEmailList: [],
            perProfile: "",
            personID: "",
            perFname: "",
            perLName: "",
            perEmailPrimary: "",
            perMobilePrimary: ""
        };
    }
    PatientprofilepersonalPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad PatientprofilepersonalPage");
        this.getPersonalData();
    };
    PatientprofilepersonalPage.prototype.submitDetails = function () {
        // if (this.profilePersonal.username.length == 0) {
        //   showToast("Please Enter User name", this.toastCtrl);
        //   return
        // }
        // if (this.nameValidation.test(this.profilePersonal.userName)) {
        //   showToast("Please Enter valid username", this.toastCtrl);
        //   return
        // }
        if (this.profilePersonal.perFname.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter firstname", this.toastCtrl);
            return;
        }
        else if (this.nameValidation.test(this.profilePersonal.perFname)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid firstname", this.toastCtrl);
            return;
        }
        else if (this.profilePersonal.perLName.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter lastname", this.toastCtrl);
            return;
        }
        else if (this.nameValidation.test(this.profilePersonal.perLName)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid lastname", this.toastCtrl);
            return;
        }
        else if (this.profilePersonal.perEmailPrimary.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter email", this.toastCtrl);
            return;
        }
        else if (!this.emailValidation.test(this.profilePersonal.perEmailPrimary)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Email Address", this.toastCtrl);
            return;
        }
        else if (this.profilePersonal.perMobilePrimary.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Phone Number", this.toastCtrl);
            return;
        }
        this.callWebserviceUpdatePersonalDetails();
    };
    PatientprofilepersonalPage.prototype.cancle = function () {
        console.log("cancle button clicked");
        this.navCtrl.parent.parent.push(__WEBPACK_IMPORTED_MODULE_7__dash_board_for_patient_dash_board_for_patient__["a" /* DashBoardForPatientPage */]);
    };
    PatientprofilepersonalPage.prototype.getPersonalData = function () {
        var _this = this;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getPersonalPatientProfile, "")
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("getPersonalData >> ", resp);
                localStorage.setItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["e" /* perProfile */], resp.data.perProfile);
                _this.profilePersonal.personID = resp.data.personID;
                _this.profilePersonal.perProfile = resp.data.perProfile;
                _this.profilePersonal.perFname = resp.data.perFname;
                _this.profilePersonal.perLName = resp.data.perLName;
                _this.profilePersonal.perEmailPrimary = resp.data.perEmailPrimary;
                _this.profilePersonal.perMobilePrimary = resp.data.perMobilePrimary;
                if (resp.data.perEmailList.length > 0) {
                    for (var i = 0; i < resp.data.perEmailList.length; i++) {
                        _this.profilePersonal.perEmailList.push(resp.data.perEmailList[i].value);
                    }
                }
            }
        });
    };
    PatientprofilepersonalPage.prototype.callWebserviceUpdatePersonalDetails = function () {
        var _this = this;
        this.formData.append("personID", this.profilePersonal.personID);
        this.formData.append("perFname", this.profilePersonal.perFname);
        this.formData.append("perLName", this.profilePersonal.perLName);
        this.formData.append("perProfile", this.profilePersonal.perProfile);
        this.formData.append("perEmailPrimary", this.profilePersonal.perEmailPrimary);
        var emails = "";
        for (var _i = 0, _a = this.profilePersonal.perEmailList; _i < _a.length; _i++) {
            var emailItem = _a[_i];
            emails = emails + "," + emailItem;
        }
        while (emails.charAt(0) === ",") {
            emails = emails.substr(1);
        }
        this.formData.append("perEmailList", emails);
        this.api
            .wsPostMutlipartHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].updatePersonalPatientProfile, this.formData)
            .then(function (resp) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
            localStorage.setItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["e" /* perProfile */], resp.data.perProfile);
        });
    };
    PatientprofilepersonalPage.prototype.addtoList = function () {
        if (!this.emailValidation.test(this.secondaryEmail)) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter valid Email Address", this.toastCtrl);
            return;
        }
        this.profilePersonal.perEmailList.push(this.secondaryEmail);
        this.secondaryEmail = "";
    };
    PatientprofilepersonalPage.prototype.deleteelement = function (list) {
        var _this = this;
        var alert = this.alertctrl.create({
            title: "Confirm Delete",
            message: "Are you sure, you want to delete this email?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "OK",
                    handler: function () {
                        var index = _this.profilePersonal.perEmailList.indexOf(list);
                        if (index > -1) {
                            _this.profilePersonal.perEmailList.splice(index, 1);
                        }
                        console.log("Item deleted");
                    }
                }
            ]
        });
        alert.present();
    };
    PatientprofilepersonalPage.prototype.choosePhotoFromCameraOrGallery = function (sourceType) {
        var _this = this;
        var options = {
            quality: 100,
            destinationType: __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__["b" /* DestinationType */].FILE_URL,
            sourceType: sourceType,
            saveToPhotoAlbum: true,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            correctOrientation: true,
            allowEdit: true
        };
        this.camera.getPicture(options).then(function (imagePath) {
            // if (
            //   this.platform.is("android") &&
            //   sourceType === this.camera.PictureSourceType.PHOTOLIBRARY
            // ) {
            _this.cropImage(imagePath);
            _this.filePath.resolveNativePath(imagePath).then(function (filePath) {
                _this.imageURI = filePath;
                console.log("getPicture >> ", filePath);
                console.log("getPicture  normalizeURL(filepath) >> ", Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(filePath));
                _this.saveImage(Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(filePath));
                _this.profilePersonal.perProfile = Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(filePath);
            });
            // }
            // this.cropImage(imagePath);
        }, function (err) {
            alert(err);
        });
    };
    //add viral this code
    PatientprofilepersonalPage.prototype.cropImage = function (fileUrl) {
        var _this = this;
        this.crop.crop(fileUrl, { quality: 50 }).then(function (newPath) {
            _this.showCroppedImage(newPath.split("?")[0]);
        }, function (error) {
            alert("Error cropping image" + error);
        });
    };
    PatientprofilepersonalPage.prototype.showCroppedImage = function (ImagePath) {
        var _this = this;
        this.isLoading = true;
        var copyPath = ImagePath;
        var splitPath = copyPath.split("/");
        var imageName = splitPath[splitPath.length - 1];
        var filePath = ImagePath.split(imageName)[0];
        this.file.readAsDataURL(filePath, imageName).then(function (base64) {
            _this.croppedImagepath = base64;
            _this.isLoading = false;
        }, function (error) {
            alert("Error in showing image" + error);
            _this.isLoading = false;
        });
    };
    PatientprofilepersonalPage.prototype.saveImage = function (imageFileUri) {
        var _this = this;
        this.file
            .resolveLocalFilesystemUrl(imageFileUri)
            .then(function (entry) {
            return entry.file(function (file) {
                _this.readFile(file);
            });
        })
            .catch(function (err) { return console.log(err); });
    };
    PatientprofilepersonalPage.prototype.readFile = function (file) {
        var _this = this;
        var reader = new FileReader();
        reader.onloadend = function () {
            //[ this.result ], type: "image/jpeg"
            var imgBlob = new Blob([reader.result], { type: file.type });
            console.log("readFile() : file.type >> ", file.type);
            console.log("readFile() : file >> ", file);
            _this.formData.append("perProfile", imgBlob, file.name);
            // this.callWebserviceUpdateDocuments()
        };
        reader.readAsArrayBuffer(file);
    };
    PatientprofilepersonalPage.prototype.buttonClickForChooseIDs = function () {
        var _this = this;
        Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["g" /* showActionSheetPhoto */])(this.actionSheetCrtl).then(function (seletedIndex) {
            _this.choosePhotoFromCameraOrGallery(seletedIndex);
        });
    };
    PatientprofilepersonalPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-patientprofilepersonal",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientprofilepersonal/patientprofilepersonal.html"*/'<!--\n  Generated template for the PatientprofilepersonalPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header> </ion-header>\n\n<ion-content>\n  <div class="profile-page">\n    <!-- profile top -->\n    <div class="">\n      <div class="cmn-tabs">\n        <div class="nav-tabs-navigation">\n          <div class="nav-tabs-wrapper"></div>\n        </div>\n        <!-- tabs content start -->\n        <div class="tab-content">\n          <!-- personal tab -->\n          <div class="tab-pane active" id="Personal">\n            <div class="personal-cntnt">\n              <!-- profile top part -->\n              <div class="profile-detail">\n                <div class="profile-img">\n                  <div class="usr-img">\n                    <img src="{{profilePersonal.perProfile}}" class="usr-pic" />\n                    <span class="img-upld-btn">\n                      <img\n                        src="assets/images/cam.png"\n                        (click)="buttonClickForChooseIDs()"\n                      />\n                    </span>\n                    <!-- <span class="img-upld-btn">\n                      <img\n                        src="assets/images/plus-ic.png"\n                        (click)="cropimage()"\n                      />\n                    </span> -->\n                  </div>\n                </div>\n                <div class="prfl-dtl-rw clearfix">\n                  <div class="prfl-dtl-lbl pull-left">\n                    First Name\n                  </div>\n                  <div class="prfl-dtl-val pull-right">\n                    {{profilePersonal.perFname}}\n                  </div>\n                </div>\n                <div class="prfl-dtl-rw clearfix">\n                  <div class="prfl-dtl-lbl pull-left">\n                    Email\n                  </div>\n                  <div class="prfl-dtl-val pull-right">\n                    {{profilePersonal.perEmailPrimary}}\n                  </div>\n                </div>\n                <div class="prfl-dtl-rw clearfix">\n                  <div class="prfl-dtl-lbl pull-left">\n                    Phone No\n                  </div>\n                  <div class="prfl-dtl-val pull-right">\n                    {{profilePersonal.perMobilePrimary}}\n                  </div>\n                </div>\n              </div>\n              <!-- profile top part end-->\n              <!-- form sec 1 -->\n              <div class="cmn-form no-input-efct bg-fff mt5">\n                <div class="pl15 pr15 form-bb">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">First Name</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="profilePersonal.perFname"\n                    />\n                  </div>\n                </div>\n                <div class="pl15 pr15 form-bb">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Last Name</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="profilePersonal.perLName"\n                    />\n                  </div>\n                </div>\n                <div class="pl15 pr15 form-bb">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Email</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="profilePersonal.perEmailPrimary"\n                      [readonly]="true"\n                    />\n                  </div>\n                </div>\n                <div class="pl15 pr15 form-bb">\n                  <div class="form-group">\n                    <label class="bmd-label-floating">Secondary Email</label>\n                    <input\n                      type="text"\n                      class="form-control"\n                      [(ngModel)]="secondaryEmail"\n                    />\n                  </div>\n                </div>\n                <button class="btn cmn-thm-btn mr-25" (click)="addtoList()">\n                  Add\n                </button>\n              </div>\n              <ion-item>\n                <ion-list class="cmn-tb-cntnt">\n                  <ion-item-sliding\n                    #slidingItem\n                    *ngFor="let item of profilePersonal.perEmailList"\n                  >\n                    <ion-item>\n                      <div class="ptnt-name">{{item}}</div>\n                      <ion-icon\n                        class="trashicon"\n                        (click)="deleteelement(item)"\n                        name="trash"\n                        data-ng-if="(profilePersonal.perEmailList.length > 0)"\n                      ></ion-icon>\n                    </ion-item>\n                  </ion-item-sliding>\n                </ion-list>\n              </ion-item>\n\n              <div class="form-button bg-gray pt-25 mb-20 text-center">\n                <button class="btn cmn-thm-btn mr-25" (click)="submitDetails()">\n                  SAVE\n                </button>\n                <button type="button" class="cmn-wht-btn" (click)="cancle()">\n                  CANCEL\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <ion-item no-lines>\n  <ion-label>Upload Picture</ion-label>\n</ion-item>\n<ion-item no-lines>\n  <button ion-button small (click)="buttonClickForChooseIDs()">\n    Choose File\n  </button>\n</ion-item>\n<div class="uploaded-img">\n  <img src="{{profilePersonal.perProfile}}" style="width: 100%" />\n</div>\n\n<ion-item>\n  <ion-label floating>First name</ion-label>\n  <ion-input [(ngModel)]="profilePersonal.perFname" type="text"></ion-input>\n</ion-item>\n<ion-item>\n  <ion-label floating>Last name</ion-label>\n  <ion-input [(ngModel)]="profilePersonal.perLName" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Email</ion-label>\n  <ion-input\n    [(ngModel)]="profilePersonal.perEmailPrimary"\n    type="text"\n    [readonly]="true"\n  ></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Secondary Email</ion-label>\n  <ion-input type="text" [(ngModel)]="secondaryEmail"></ion-input>\n</ion-item>\n\n<button ion-button (click)="addtoList()">Add</button>\n\n    <ion-list class="cmn-tb-cntnt">\n      <ion-item-sliding #slidingItem *ngFor="let item of profilePersonal.perEmailList">\n        <ion-item>\n          <div class="ptnt-name">{{item}}</div>\n        </ion-item>\n\n        <ion-item-options>\n          <button ion-button color="danger" (click)="deleteelement(item)">Delete</button>\n        </ion-item-options>\n      </ion-item-sliding>\n    </ion-list>\n  </ion-item>\n\n  <div padding align="center">\n    <div padding>\n      <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n      <button ion-button type="Cancel" (click)="cancel()">Cancel</button>\n     \n    </div>\n  </div>\n<ion-item>\n  <ion-list class="cmn-tb-cntnt">\n    <ion-item-sliding\n      #slidingItem\n      *ngFor="let item of profilePersonal.perEmailList"\n    >\n      <ion-item>\n        <div class="ptnt-name">{{item}}</div>\n      </ion-item>\n\n      <ion-item-options>\n        <button ion-button color="danger" (click)="deleteelement(item)">\n          Delete\n        </button>\n      </ion-item-options>\n    </ion-item-sliding>\n  </ion-list>\n</ion-item> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientprofilepersonal/patientprofilepersonal.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_file_path__["a" /* FilePath */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* App */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_native_crop_ngx__["a" /* Crop */]])
    ], PatientprofilepersonalPage);
    return PatientprofilepersonalPage;
}());

//# sourceMappingURL=patientprofilepersonal.js.map

/***/ }),

/***/ 283:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientprofileextendedPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__dash_board_for_patient_dash_board_for_patient__ = __webpack_require__(62);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the PatientprofileextendedPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientprofileextendedPage = /** @class */ (function () {
    function PatientprofileextendedPage(datepipe, navCtrl, navParams, toastCtrl, api) {
        this.datepipe = datepipe;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.toastCtrl = toastCtrl;
        this.api = api;
        this.allWorkStatus = [];
        this.allEmploymentsStatus = [];
        this.allMaritalStatus = [];
        // public bloodGroups:any[] = [];
        this.genderArray = [];
        this.bloodGroups = [
            {
                title: "A+",
                id: 1
            },
            {
                title: "A-",
                id: 2
            },
            {
                title: "B+",
                id: 3
            },
            {
                title: "B-",
                id: 4
            },
            {
                title: "AB+",
                id: 5
            },
            {
                title: "AB-",
                id: 6
            },
            {
                title: "O+",
                id: 7
            },
            {
                title: "O-",
                id: 8
            }
        ];
        this.extendedProfile = {
            personID: "",
            employment: "",
            work: "",
            perDOB: "",
            marital: "",
            gender: "",
            perDegree: "",
            perDesignation: "",
            bodyHeight: "",
            bodyWeightInKG: "",
            perBloodGroup: "",
            chestInches: "",
            waistInches: ""
        };
        this.selectedWorkStatus = this.allWorkStatus[0];
        this.selectedEmployement = this.allEmploymentsStatus[0];
        this.selectedMaritalStatus = this.allMaritalStatus[0];
        this.selectedBloodGroup = this.bloodGroups[0];
    }
    PatientprofileextendedPage.prototype.cancel = function () {
        this.navCtrl.parent.parent.push(__WEBPACK_IMPORTED_MODULE_5__dash_board_for_patient_dash_board_for_patient__["a" /* DashBoardForPatientPage */]);
    };
    PatientprofileextendedPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad PatientprofileextendedPage");
        this.getAllMaritalStatus();
        this.getExtendedData();
    };
    PatientprofileextendedPage.prototype.getExtendedData = function () {
        var _this = this;
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getExtendedPatientProfile, "")
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                // this.extendedProfile = resp.data
                // showToast(resp.message, this.toastCtrl)
                _this.getGenderList();
                _this.extendedProfile.personID = resp.data.personID;
                _this.extendedProfile.perDOB = resp.data.perDOB
                    ? _this.changeStringToDate(resp.data.perDOB)
                    : "";
                _this.extendedProfile.marital = resp.data.marital;
                _this.extendedProfile.gender = resp.data.gender;
                _this.extendedProfile.bodyHeight = resp.data.bodyHeight;
                _this.extendedProfile.bodyWeightInKG = resp.data.bodyWeightInKG;
                _this.extendedProfile.perBloodGroup = resp.data.perBloodGroup;
                _this.extendedProfile.chestInches = resp.data.chestInches;
                _this.extendedProfile.waistInches = resp.data.waistInches;
                _this.extendedProfile.perDegree = resp.data.perDegree;
                _this.extendedProfile.perDesignation = resp.data.perDesignation;
                _this.extendedProfile.employment = resp.data.employment;
                _this.extendedProfile.work = resp.data.work;
            }
        });
    };
    PatientprofileextendedPage.prototype.getGenderList = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].gender, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.genderArray = resp.data;
                _this.getAllWorkStatus();
            }
        });
    };
    PatientprofileextendedPage.prototype.radioClicked = function (val) {
        this.extendedProfile.gender = val;
        console.log("radioselected", this.extendedProfile.gender);
    };
    PatientprofileextendedPage.prototype.getAllWorkStatus = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].workStatus, "")
            .then(function (resp) {
            _this.allWorkStatus = resp.data;
            _this.selectedWorkStatus = _this.allWorkStatus[0].key;
        });
    };
    PatientprofileextendedPage.prototype.onWorkStatusSelected = function (value) {
        console.log("onWorkStatusSelected", value);
        this.extendedProfile.work = value;
        this.getallEmploymentStatus();
    };
    PatientprofileextendedPage.prototype.getallEmploymentStatus = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].employmentStatus, "")
            .then(function (resp) {
            _this.allEmploymentsStatus = resp.data;
            _this.selectedEmployement = _this.allEmploymentsStatus[0].key;
        });
    };
    PatientprofileextendedPage.prototype.onEmployementSelected = function (value) {
        console.log("onEmployementSelected", value);
        this.extendedProfile.employment = value;
        // this.getAllMaritalStatus()
    };
    PatientprofileextendedPage.prototype.getAllMaritalStatus = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].maritalStatus, "")
            .then(function (resp) {
            _this.allMaritalStatus = resp.data;
            _this.selectedMaritalStatus = _this.allMaritalStatus[0].key;
        });
    };
    PatientprofileextendedPage.prototype.onMaritalStatusSelected = function (value) {
        console.log("onMaritalStatusSelected >> ", value);
        this.extendedProfile.marital = value.value;
    };
    PatientprofileextendedPage.prototype.callWebserviceUpdateExtendedData = function () {
        var _this = this;
        console.log("submit===>", this.extendedProfile);
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].updateExtendedPatientProfile, this.extendedProfile)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
            }
        });
    };
    PatientprofileextendedPage.prototype.onBloogGroupSelected = function (value) {
        console.log("onBloogGroupSelected", value.title);
        this.extendedProfile.perBloodGroup = value.title;
    };
    //to convert date and time////
    PatientprofileextendedPage.prototype.changeStringToDate = function (dateString, format //date
    ) {
        if (format) {
            return this.changeDateFormat(new Date(new Date(dateString).getTime() -
                new Date(dateString).getTimezoneOffset() * 60000), format);
        }
        else {
            return new Date(new Date(dateString).getTime() -
                new Date(dateString).getTimezoneOffset() * 60000).toISOString();
        }
    };
    //date to any format
    PatientprofileextendedPage.prototype.changeDateFormat = function (date, formate) {
        var latest_date = this.datepipe.transform(date, formate);
        return latest_date;
    };
    PatientprofileextendedPage.prototype.submitDetails = function () {
        var time = new Date(this.extendedProfile.perDOB);
        console.log("time >> ", time.getTime());
        this.extendedProfile.perDOB = time.getTime().toString();
        // let date = new Date()
        // date.setTime(time.getTime())
        // console.log("this.extendedProfile.perDOB >> ", date)
        console.log("submit===>", JSON.stringify(this.extendedProfile));
        var nameValidation = /[^a-zA-Z]/;
        if (this.extendedProfile.perDOB.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter dob", this.toastCtrl);
            return;
        }
        else if (this.extendedProfile.gender.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select gender", this.toastCtrl);
            return;
        }
        else if (this.extendedProfile.perDegree.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter degree", this.toastCtrl);
            return;
        }
        else if (this.extendedProfile.work.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select work", this.toastCtrl);
            return;
        }
        else if (this.extendedProfile.employment.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select employment", this.toastCtrl);
            return;
        }
        else if (this.extendedProfile.marital.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select marital status", this.toastCtrl);
            return;
        }
        else if (this.extendedProfile.bodyHeight.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter height", this.toastCtrl);
            return;
        }
        else if (this.extendedProfile.bodyWeightInKG.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter weight", this.toastCtrl);
            return;
        }
        this.callWebserviceUpdateExtendedData();
    };
    PatientprofileextendedPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-patientprofileextended",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientprofileextended/patientprofileextended.html"*/'<!--\n  Generated template for the ExtendedprofilePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header> </ion-header>\n\n<ion-content>\n  <div class="tab-pane" id="Extended">\n    <div class="extnd-cntnt">\n      <form class="cmn-form no-input-efct mb-20 bg-fff">\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Date of Birth</label>\n            <ion-datetime\n              displayFormat="DD MMMM YYYY"\n              pickerFormat="DD MMMM YYYY"\n              name="date"\n              [(ngModel)]="extendedProfile.perDOB"\n            ></ion-datetime>\n            <span class="input-icon"><img src="assets/images/date.png"/></span>\n          </div>\n        </div>\n        <div class="floating-label cmn-select">\n          <ion-list radio-group>\n            <ion-list-header>\n              Gender\n            </ion-list-header>\n            <ion-item *ngFor="let item of genderArray">\n              <ion-label>{{item.value}}</ion-label>\n              <ion-radio\n                value="{{item.value}}"\n                [checked]="item.value == extendedProfile.gender"\n                (click)="radioClicked(item.value)"\n              >\n              </ion-radio>\n            </ion-item>\n          </ion-list>\n        </div>\n        <!-- <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Degree</label>\n            <input\n              type="text"\n              name="degree"\n              [(ngModel)]="extendedProfile.perDegree"\n              class="form-control"\n            />\n          </div>\n        </div> -->\n        <div class="floating-label cmn-select">\n          <select\n            class="floating-select form-control"\n            name="workstatus"\n            [(ngModel)]="selectedWorkStatus"\n            (ionChange)="onWorkStatusSelected($event)"\n          >\n            <option\n              *ngFor="let workStatus of allWorkStatus;let idx=index"\n              [value]="workStatus.value"\n              selected="{{(idx==0).value}}"\n              >{{workStatus.value}}</option\n            >\n          </select>\n          <label>Occupation</label>\n        </div>\n        <!-- <div class="floating-label cmn-select">\n          <select\n            class="floating-select form-control"\n            name="employment"\n            [(ngModel)]="selectedEmployement"\n            (ionChange)="onEmployementSelected($event)"\n          >\n            <option\n              *ngFor="let employment of allEmploymentsStatus;let idx=index"\n              [value]="employment.value"\n              selected="{{(idx==0).value}}"\n              >{{employment.value}}</option\n            >\n          </select>\n          <label>Select Employment</label>\n        </div> -->\n        <div class="floating-label cmn-select">\n          <select\n            class="floating-select form-control"\n            name="maritalStatus"\n            [(ngModel)]="selectedMaritalStatus"\n            (ionChange)="onMaritalStatusSelected($event)"\n          >\n            <option\n              *ngFor="let maritalStatus of allMaritalStatus; let idx = index"\n              [value]="maritalStatus.value"\n              selected="{{(idx==0).value}}"\n              >{{maritalStatus.value}}</option\n            >\n          </select>\n          <label>Select Marital status</label>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Height</label>\n            <input\n              type="number"\n              class="form-control"\n              name="height"\n              [(ngModel)]="extendedProfile.bodyHeight"\n              step="0.01"\n            />\n            <span class="input-icon-txt fc-theme">ft</span>\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Weight</label>\n            <input\n              type="number"\n              class="form-control"\n              name="weight"\n              [(ngModel)]="extendedProfile.bodyWeightInKG"\n              step="0.01"\n            />\n            <span class="input-icon-txt fc-theme">Kg</span>\n          </div>\n        </div>\n        <!-- <div class="floating-label cmn-select">\n          <select\n            class="floating-select form-control"\n            name="bloodGroup"\n            [(ngModel)]="selectedBloodGroup"\n            (ionChange)="onBloogGroupSelected($event)"\n          >\n            <option *ngFor="let bloodGroup of bloodGroups;" [value]="bloodGroup"\n              >{{bloodGroup.title}}</option\n            >\n          </select>\n          <label>Select Blood group</label>\n        </div> -->\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Blood Group</label>\n            <input\n              type="text"\n              name="bloodgroup"\n              [(ngModel)]="extendedProfile.perBloodGroup"\n              class="form-control"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Chest</label>\n            <input\n              type="text"\n              name="chest"\n              [(ngModel)]="extendedProfile.chestInches"\n              class="form-control"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Waist</label>\n            <input\n              type="text"\n              name="waist"\n              [(ngModel)]="extendedProfile.waistInches"\n              class="form-control"\n            />\n          </div>\n        </div>\n        <div class="form-button bg-gray pt-25 text-center">\n          <button class="btn cmn-thm-btn mr-25" (click)="submitDetails()">\n            SUBMIT\n          </button>\n\n          <button\n            type="button"\n            class="btn  cmn-wht-btn"\n            (click)="cancel(DashBoardForPatientPage)"\n          >\n            CANCEL\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</ion-content>\n<!-- \n<ion-item>\n  <ion-label>Date of Birth</ion-label>\n  <ion-datetime\n    displayFormat="DD MMMM YYYY"\n    pickerFormat="DD MMMM YYYY"\n    [(ngModel)]="extendedProfile.perDOB"\n  ></ion-datetime>\n</ion-item>\n\n<ion-list radio-group>\n  <ion-list-header>\n    Gender\n  </ion-list-header>\n  <ion-item *ngFor="let item of genderArray">\n    <ion-label>{{item.value}}</ion-label>\n    <ion-radio\n      value="{{item.value}}"\n      [checked]="item.value == extendedProfile.gender"\n      (click)="radioClicked(item.value)"\n    >\n    </ion-radio>\n  </ion-item>\n</ion-list>\n\n<ion-item>\n  <ion-label floating>Degree</ion-label>\n  <ion-input [(ngModel)]="extendedProfile.perDegree" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-select\n    [(ngModel)]="selectedWorkStatus"\n    (ionChange)="onWorkStatusSelected($event)"\n  >\n    <ion-label floating>Work status</ion-label>\n    <ion-option\n      *ngFor="let workStatus of allWorkStatus;let idx=index"\n      [value]="workStatus.value"\n      selected="{{(idx==0).value}}"\n      >{{workStatus.value}}</ion-option\n    >\n  </ion-select>\n</ion-item>\n<ion-item>\n  <ion-select\n    [(ngModel)]="selectedEmployement"\n    (ionChange)="onEmployementSelected($event)"\n  >\n    <ion-label floating>Select Employment</ion-label>\n    <ion-option\n      *ngFor="let employment of allEmploymentsStatus;let idx=index"\n      [value]="employment.value"\n      selected="{{(idx==0).value}}"\n      >{{employment.value}}</ion-option\n    >\n  </ion-select>\n</ion-item>\n\n<ion-item>\n  <ion-select\n    [(ngModel)]="selectedMaritalStatus"\n    (ionChange)="onMaritalStatusSelected($event)"\n  >\n    <ion-label floating>Select Marital status</ion-label>\n    <ion-option\n      *ngFor="let maritalStatus of allMaritalStatus; let idx = index"\n      [value]="maritalStatus.value"\n      selected="{{(idx==0).value}}"\n      >{{maritalStatus.value}}</ion-option\n    >\n  </ion-select>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Height ft</ion-label>\n  <ion-input\n    [(ngModel)]="extendedProfile.bodyHeight"\n    type="number"\n    step="0.01"\n  ></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Weight</ion-label>\n  <ion-input\n    [(ngModel)]="extendedProfile.bodyWeightInKG"\n    type="number"\n    step="0.01"\n  ></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-select\n    [(ngModel)]="selectedBloodGroup"\n    (ionChange)="onBloogGroupSelected($event)"\n  >\n    <ion-label floating>Select Blood group</ion-label>\n    <ion-option *ngFor="let bloodGroup of bloodGroups;" [value]="bloodGroup"\n      >{{bloodGroup.title}}</ion-option\n    >\n  </ion-select>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Chest</ion-label>\n  <ion-input [(ngModel)]="extendedProfile.chestInches" type="text"></ion-input>\n</ion-item>\n\n<ion-item>\n  <ion-label floating>Waist</ion-label>\n  <ion-input [(ngModel)]="extendedProfile.waistInches" type="text"></ion-input>\n</ion-item>\n<div padding align="center">\n  <div padding>\n    <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n    <button ion-button type="Cancel" (click)="cancel()">Cancel</button>\n  </div>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientprofileextended/patientprofileextended.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__angular_common__["d" /* DatePipe */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], PatientprofileextendedPage);
    return PatientprofileextendedPage;
}());

//# sourceMappingURL=patientprofileextended.js.map

/***/ }),

/***/ 284:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return IncomingmedicinerequiredlistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__patient_editappointment_editappointment__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__medicinesrequestview_medicinesrequestview__ = __webpack_require__(285);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_common__ = __webpack_require__(14);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








/**
 * Generated class for the IncomingmedicinerequiredlistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var IncomingmedicinerequiredlistPage = /** @class */ (function () {
    function IncomingmedicinerequiredlistPage(datepipe, navCtrl, navParams, api, alertCtrl) {
        this.datepipe = datepipe;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.appointmentTodayItems = [];
        this.currentAppointlist = [];
        this.medicinerequestlist = [];
        //localStorage.setItem(selectedRole, 'Patient');
        //localStorage.setItem(selectedRole, 'Doctor');
        this.currentAppointlist = this.appointmentTodayItems;
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
    }
    IncomingmedicinerequiredlistPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Patient") {
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, "").then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    //console.log('wsPostHeader : >>',resp);
                    _this.appointmentTodayItems = resp;
                    _this.currentAppointlist = resp;
                }
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, "").then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    //console.log('wsPostHeader : >>',resp);
                    _this.appointmentTodayItems = resp;
                    _this.currentAppointlist = resp;
                }
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "MedicalCenter") {
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getmedicinesrequest, "").then(function (resp) {
                _this.medicinerequestlist = resp.data.pharmapojolist;
                console.log(resp);
            });
        }
    };
    IncomingmedicinerequiredlistPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__["a" /* AddappointmentPage */]);
    };
    IncomingmedicinerequiredlistPage.prototype.editItem = function (id) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__patient_editappointment_editappointment__["a" /* EditappointmentPage */], { patAppointmentID: id });
    };
    IncomingmedicinerequiredlistPage.prototype.changeItem = function (stateInt) {
        switch (stateInt) {
            case 1:
                this.currentAppointlist = this.appointmentTodayItems;
                break;
            default:
        }
    };
    IncomingmedicinerequiredlistPage.prototype.openItem = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__medicinesrequestview_medicinesrequestview__["a" /* MedicinesrequestviewPage */], { item: item });
    };
    IncomingmedicinerequiredlistPage.prototype.Canceled = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to cancel?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var passParam = {
                            patAppointmentID: data.patAppointmentID,
                            fclProviderMapID: { fclProviderMapID: data.fclProviderMapID },
                            specialityMaster: { specialityID: data.specialityID },
                            patAppDate: "2018-04-23T10:15:43.511Z",
                            patAppTimeFrom: "2018-04-23T10:15:43.511Z",
                            patAppTimeTo: "2018-04-23T10:15:43.511Z",
                            patAppType: data.patAppType,
                            patAppReason: data.patAppReason,
                            patAppDescription: data.patAppDescription,
                            patAppStatus: "Canceled"
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log("wsPostHeader : >>", resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Patient") {
                                    _this.api
                                        .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, "")
                                        .then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
                                    _this.api
                                        .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, "")
                                        .then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                            }
                        });
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    IncomingmedicinerequiredlistPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to reject?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        //this.navCtrl.push(SignupPage,{item:data});
                        var passParam = {
                            patAppointmentID: data.patAppointmentID,
                            fclProviderMapID: { fclProviderMapID: data.fclProviderMapID },
                            specialityMaster: { specialityID: data.specialityID },
                            patAppDate: "2018-04-23T10:15:43.511Z",
                            patAppTimeFrom: "2018-04-23T10:15:43.511Z",
                            patAppTimeTo: "2018-04-23T10:15:43.511Z",
                            patAppType: data.patAppType,
                            patAppReason: data.patAppReason,
                            patAppDescription: data.patAppDescription,
                            patAppStatus: "Rejected"
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log("wsPostHeader222 : >>", resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Patient") {
                                    _this.api
                                        .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, "")
                                        .then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
                                    _this.api
                                        .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, "")
                                        .then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    IncomingmedicinerequiredlistPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to approve?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        // console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        var passParam = {
                            patAppointmentID: data.patAppointmentID,
                            fclProviderMapID: { fclProviderMapID: data.fclProviderMapID },
                            specialityMaster: { specialityID: data.specialityID },
                            patAppDate: "2018-04-23T10:15:43.511Z",
                            patAppTimeFrom: "2018-04-23T10:15:43.511Z",
                            patAppTimeTo: "2018-04-23T10:15:43.511Z",
                            patAppType: data.patAppType,
                            patAppReason: data.patAppReason,
                            patAppDescription: data.patAppDescription,
                            patAppStatus: "Approved"
                        };
                        //console.log(passParam);
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log("wsPostHeader : >>", resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Patient") {
                                    _this.api
                                        .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, "")
                                        .then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
                                    _this.api
                                        .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, "")
                                        .then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    IncomingmedicinerequiredlistPage.prototype.Addvisit = function (data) {
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to Add visit?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    IncomingmedicinerequiredlistPage.prototype.changeStringToDate = function (dateString, format) {
        if (format) {
            console.log("StringToDate==>", this.changeDateFormat(new Date(dateString), format));
            return this.changeDateFormat(new Date(dateString), format);
        }
        else {
            console.log("completeString=>>>>>>", dateString);
            console.log("StringToDate==>", new Date(dateString).toISOString());
            return new Date(dateString).toISOString();
        }
    };
    //date to any format
    IncomingmedicinerequiredlistPage.prototype.changeDateFormat = function (date, formate) {
        var latest_date = this.datepipe.transform(date, formate);
        console.log("ChangeDateFormat", latest_date);
        return latest_date;
    };
    IncomingmedicinerequiredlistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-incomingmedicinerequiredlist",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/incomingmedicinerequiredlist/incomingmedicinerequiredlist.html"*/'<!--\n  Generated template for the IncomingmedicinerequiredlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Medicine Request List</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="cmn-list-page">\n    <div *ngIf="selectRole == \'MedicalCenter\'">\n      <div\n        class="cmn-apmnt-row clearfix w-100 clearfix"\n        #slidingItem\n        *ngFor="let item of medicinerequestlist"\n      >\n        <div>\n          <div class="apmn-lft" (click)="openItem(item)">\n            <div class="dr-name">{{ item.patientName }}</div>\n            <!-- <div class="dr-adrs">\n              <img src="assets/images/location.png" />\n              {{ item.facilityCenterName }} {{ item.facilityCenterType }} - {{\n              item.fcLocationName }}\n            </div> -->\n            <div class="apmnt-dt-tm">\n              <img src="assets/images/cal.png" />\n              {{ item.apptdate | date: "dd/MM/yyyy" }}<span class="apmn-time"\n                >{{ item.apptdate | date: "shortTime" }}</span\n              >\n            </div>\n            <div class="apmnt-medicinename">{{item.medname}}</div>\n          </div>\n\n          <div\n            *ngIf="item.status == \'Approved\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl accepted">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.status == \'Reject\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl cancelled">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.status == \'Dispatching\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl dispatching">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.status == \'Pending\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl pending">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.status == \'Completed\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl accepted">\n              {{ item.status }}\n            </span>\n          </div>\n          <div\n            *ngIf="item.status == \'Prepared\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl prepared">\n              {{ item.status }}\n            </span>\n          </div>\n          <div\n            *ngIf="item.status == \'Dispatched\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl dispatched">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <!-- <div class="apmn-rgt" (click)="openItem(item)">\n            <span class="apmnt-lbl accepted">\n              {{ item.status }}\n            </span>\n          </div> -->\n        </div>\n        <ion-item-options\n          *ngIf="item.patAppStatus== \'Pending\' && selectRole == \'Patient\'"\n        >\n          <button\n            ion-button\n            color="calm"\n            (click)="editItem(item.patAppointmentID)"\n          >\n            Edit\n          </button>\n          <!-- <button ion-button color="danger" (click)="Cancel(item)">\n            Cancel\n          </button> -->\n        </ion-item-options>\n        <!-- <ion-item-options\n          *ngIf="item.patAppStatus== \'Completed\' && selectRole == \'Patient\'"\n        >\n          <button ion-button color="danger" (click)="ReBook(item)">\n            Re-Book\n          </button>\n        </ion-item-options>\n        <ion-item-options\n          *ngIf="item.patAppStatus== \'Approved\' && selectRole == \'Patient\'"\n        >\n          <button ion-button color="danger" (click)="Cancel(item)">\n            Cancel\n          </button>\n        </ion-item-options>\n        <ion-item-options\n          *ngIf="item.patAppStatus== \'Rejected\' && selectRole == \'Patient\'"\n        >\n          <button ion-button (click)="ReBook(item)">Re-Book</button>\n        </ion-item-options>\n        <ion-item-options\n          *ngIf="item.patAppStatus== \'Canceled\' && selectRole == \'Patient\'"\n        >\n          <button ion-button (click)="ReBook(item)">Re-Book</button>\n        </ion-item-options> -->\n\n        <ion-item-options\n          *ngIf="item.patAppStatus == \'Pending\' && selectRole == \'Doctor\'"\n        >\n          <button ion-button (click)="Approved(item)">Approve</button>\n          <button ion-button color="danger" (click)="Rejected(item)">\n            Reject\n          </button>\n          <button ion-button color="danger" (click)="Canceled(item)">\n            Cancel\n          </button>\n        </ion-item-options>\n        <ion-item-options\n          *ngIf="item.patAppStatus == \'Approved\' && selectRole == \'Doctor\'"\n        >\n          <button ion-button (click)="Addvisit(item)">Add Visit</button>\n          <button ion-button color="danger" (click)="Canceled(item)">\n            Cancel\n          </button>\n        </ion-item-options>\n      </div>\n    </div>\n  </div>\n\n  <ion-fab bottom right>\n    <button class="cmn-create-btn" ion-fab (click)="addItem()">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n</ion-content>\n\n<!-- <div class="cmn-list-page">\n  <div class="cmn-tab-dsgn"></div>\n  <ion-list class="cmn-tb-cntnt" *ngIf="selectRole == \'MedicalCenter\'">\n    <ion-item-sliding #slidingItem *ngFor="let item of medicinerequestlist">\n      <ion-item (click)="openItem(item)">\n        <div class="ptnt-name">{{item.patientName}}</div>\n        <div class="apmnt-tm">\n          {{item.apptdate | date:\'dd/MM/yyyy\'}} {{item.apptdate | date :\n          \'shortTime\'}}\n        </div>\n        <div class="apmnt-medicinename">{{item.medname}}</div>\n        <div class="apmnt-status">{{item.status}}</div>\n      </ion-item>\n      <ion-item-options\n        *ngIf="item.patAppStatus== \'Pending\' && selectRole == \'Patient\'"\n      >\n        <button\n          ion-button\n          color="calm"\n          (click)="editItem(item.patAppointmentID)"\n        >\n          Edit\n        </button>\n        <button ion-button color="danger" (click)="Cancel(item)">\n          Cancel\n        </button>\n      </ion-item-options>\n      <ion-item-options\n        *ngIf="item.patAppStatus== \'Completed\' && selectRole == \'Patient\'"\n      >\n        <button ion-button color="danger" (click)="ReBook(item)">\n          Re-Book\n        </button>\n      </ion-item-options>\n      <ion-item-options\n        *ngIf="item.patAppStatus== \'Approved\' && selectRole == \'Patient\'"\n      >\n        <button ion-button color="danger" (click)="Cancel(item)">\n          Cancel\n        </button>\n      </ion-item-options>\n      <ion-item-options\n        *ngIf="item.patAppStatus== \'Rejected\' && selectRole == \'Patient\'"\n      >\n        <button ion-button (click)="ReBook(item)">Re-Book</button>\n      </ion-item-options>\n      <ion-item-options\n        *ngIf="item.patAppStatus== \'Canceled\' && selectRole == \'Patient\'"\n      >\n        <button ion-button (click)="ReBook(item)">Re-Book</button>\n      </ion-item-options>\n\n      <ion-item-options\n        *ngIf="item.patAppStatus == \'Pending\' && selectRole == \'Doctor\'"\n      >\n        <button ion-button (click)="Approved(item)">Approve</button>\n        <button ion-button color="danger" (click)="Rejected(item)">\n          Reject\n        </button>\n        <button ion-button color="danger" (click)="Canceled(item)">\n          Cancel\n        </button>\n      </ion-item-options>\n      <ion-item-options\n        *ngIf="item.patAppStatus == \'Approved\' && selectRole == \'Doctor\'"\n      >\n        <button ion-button (click)="Addvisit(item)">Add Visit</button>\n        <button ion-button color="danger" (click)="Canceled(item)">\n          Cancel\n        </button>\n      </ion-item-options>\n    </ion-item-sliding>\n  </ion-list>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/incomingmedicinerequiredlist/incomingmedicinerequiredlist.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_7__angular_common__["d" /* DatePipe */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_5__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], IncomingmedicinerequiredlistPage);
    return IncomingmedicinerequiredlistPage;
}());

//# sourceMappingURL=incomingmedicinerequiredlist.js.map

/***/ }),

/***/ 285:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MedicinesrequestviewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__deliverables_deliverables__ = __webpack_require__(240);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the MedicinesrequestviewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MedicinesrequestviewPage = /** @class */ (function () {
    function MedicinesrequestviewPage(navCtrl, navParams, api, alertCtrl, datepipe) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.datepipe = datepipe;
        this.ViewAppointment = [];
        this.item = [];
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        this.item = this.navParams.get("item");
        console.log("POP");
        console.log(this.item);
        console.log(localStorage.getItem(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["f" /* selectedRole */]));
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Patient") {
            var petId = { apptid: this.item.apptid };
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].getpharmaview, petId).then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    _this.ViewAppointment = resp.data;
                    _this.ViewAppointment.facilityCenterType =
                        _this.ViewAppointment.facilityCenterType +
                            " - " +
                            _this.ViewAppointment.fcLocationName;
                    _this.Time = _this.convertTimeTo(resp.data.appttime);
                    _this.Date = _this.convertDate(resp.data.apptdate);
                }
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
            var petId = { apptid: this.item.apptid };
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].getpharmaview, petId).then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    _this.ViewAppointment = resp.data;
                    _this.ViewAppointment.facilityCenterType =
                        _this.ViewAppointment.facilityCenterType +
                            " - " +
                            _this.ViewAppointment.fcLocationName;
                    _this.Time = _this.convertTimeTo(resp.data.appttime);
                    _this.Date = _this.convertDate(resp.data.apptdate);
                }
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "MedicalCenter") {
            var petId = { apptid: this.item.apptid };
            console.log("test", petId);
            this.api
                .wsPostHeader(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].postmedicinesrequestlistview, petId)
                .then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    _this.ViewAppointment = resp.data;
                    _this.ViewAppointment.facilityCenterType =
                        _this.ViewAppointment.facilityCenterType +
                            " - " +
                            _this.ViewAppointment.fcLocationName;
                    _this.Time = _this.convertTimeTo(resp.data.appttime);
                    _this.Date = _this.convertDate(resp.data.apptdate);
                }
            });
        }
    }
    MedicinesrequestviewPage.prototype.checkNulldata = function (data) {
        if (data.fclProviderMapID === null) {
            data.fclProviderMapID = "";
        }
        if (data.specialityID === null) {
            data.specialityID = "";
        }
        if (data.patAppDate === null) {
            data.patAppDate = 1524123001;
        }
        if (data.patAppTimeFrom === null) {
            data.patAppTimeFrom = 1524123001;
        }
        if (data.patAppTimeTo === null) {
            data.patAppTimeTo = 1524123001;
        }
        if (data.patAppType === null) {
            data.patAppType = "New";
        }
        if (data.patAppReason === null) {
            data.patAppReason = "BP";
        }
        if (data.patAppDescription === null) {
            data.patAppDescription = "dsfdsfdf";
        }
        return data;
    };
    MedicinesrequestviewPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad MedicinesrequestviewPage");
    };
    MedicinesrequestviewPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Confirmation",
            // message: 'Are you sure you want to approve?',
            inputs: [
                {
                    name: "Description",
                    placeholder: "Description"
                }
            ],
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Save",
                    handler: function (data1) {
                        // console.log('Ok clicked');
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Approved"
                            patientAppointmentStatus: "Approved",
                            id: d.apptid,
                            description: data1.Description
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].postmedicinerequestviewapproved, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                console.log("call 1");
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                console.log("call 2");
                                var petId = { patAppointmentID: _this.item.patAppointmentID };
                                _this.navCtrl.pop();
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    MedicinesrequestviewPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Confirmation",
            inputs: [
                {
                    name: "Description",
                    placeholder: "Description"
                }
            ],
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "SAVE",
                    handler: function (data1) {
                        console.log("Ok clicked");
                        //this.navCtrl.push(SignupPage,{item:data});
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            patientAppointmentStatus: "Rejected",
                            id: d.apptid,
                            description: data1.Description
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].postmedicinerequestviewapproved, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                console.log("call 2");
                                var petId = { patAppointmentID: _this.item.patAppointmentID };
                                _this.navCtrl.pop();
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    MedicinesrequestviewPage.prototype.PharmaDeliveres = function (data) {
        // console.log(data.apptid);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__deliverables_deliverables__["a" /* DeliverablesPage */], { apptid: data.apptid });
    };
    MedicinesrequestviewPage.prototype.Mediicinetracking = function (data) {
        var _this = this;
        var status = data.status;
        var packageChecked = false;
        var deliveryChecked = false;
        var deliveredChecked = false;
        var packageDisabled = false;
        var deliveryDisabled = false;
        var deliveredDisabled = false;
        var statustoset;
        if (status === "Dispatched") {
            packageChecked = true;
            deliveryChecked = true;
            deliveredChecked = false;
            packageDisabled = true;
            deliveryDisabled = true;
            deliveredDisabled = false;
            statustoset = "Completed";
        }
        else if (status === "Dispatching") {
            packageChecked = false;
            deliveryChecked = false;
            deliveredChecked = false;
            packageDisabled = false;
            deliveryDisabled = true;
            deliveredDisabled = true;
            statustoset = "Prepared";
        }
        else if (status === "Prepared") {
            packageChecked = true;
            deliveryChecked = false;
            deliveredChecked = false;
            packageDisabled = true;
            deliveryDisabled = false;
            deliveredDisabled = true;
            statustoset = "Dispatched";
        }
        console.log(status);
        var alert = this.alertCtrl.create({
            title: "Medicine Tracking",
            inputs: [
                {
                    name: "package",
                    type: "checkbox",
                    label: "Package Prepared",
                    value: "test1",
                    checked: packageChecked,
                    disabled: packageDisabled
                },
                {
                    name: "delivery",
                    type: "checkbox",
                    label: "Out For Delivery",
                    value: "test1",
                    checked: deliveryChecked,
                    disabled: deliveryDisabled
                },
                {
                    name: "delivered",
                    type: "checkbox",
                    label: "Delivered",
                    value: "test1",
                    checked: deliveredChecked,
                    disabled: deliveredDisabled
                }
            ],
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Save",
                    handler: function () {
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            apptid: d.apptid,
                            status: statustoset
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].postmedicinestracking, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                console.log("call 2");
                                // let petId={patAppointmentID:this.item.patAppointmentID};
                                _this.navCtrl.pop();
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    MedicinesrequestviewPage.prototype.convertDate = function (date) {
        if (date) {
            var dateConvert = new Date(parseInt(date));
            var Year = dateConvert.getUTCFullYear();
            var Month = dateConvert.getUTCMonth() + 1;
            var Day = dateConvert.getUTCDate();
            return Day + "-" + Month + "-" + Year;
        }
        else {
            return "";
        }
    };
    MedicinesrequestviewPage.prototype.convertTimeTo = function (time) {
        if (time) {
            // var dateTime = new Date(parseInt(time));
            var dateTime = new Date(time);
            // var Hours= dateTime.getUTCHours() ;
            // var Minutes= dateTime.getUTCMinutes();
            // var Seconds= dateTime.getUTCSeconds();
            var Hours = dateTime.getHours();
            var Minutes = dateTime.getMinutes();
            var Seconds = dateTime.getSeconds();
            return Hours + ":" + Minutes;
        }
        else {
            return "";
        }
    };
    MedicinesrequestviewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-medicinesrequestview",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/medicinesrequestview/medicinesrequestview.html"*/'<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Medicines Request View</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="view-list">\n    <div *ngIf="selectRole == \'Patient\'">\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Date\n        </div>\n        <div class="view-list-val pull-right">\n          {{ apptdate }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Time\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ appttime }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Chemist Name\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.providerName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Facility\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.facilityCenterName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Location\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.fcLocationName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Medicine Name\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.medname }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Medicine Detail\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.meddetail }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Visit type\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.visittype }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Status\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.status == \'Approved\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.status == \'Cancel\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl cancelled">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div\n          *ngIf="ViewAppointment.status == \'Pending\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl pending">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.status == \'Rejected\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl rejected">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div\n          *ngIf="ViewAppointment.status == \'Completed\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n\n        <!-- <div class="view-list-val  pull-right">\n          <span class="accepted-lbl">{{ ViewAppointment.status }}</span>\n        </div> -->\n      </div>\n\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Pending\'">\n        <button\n          ion-button\n          color="calm"\n          (click)="editItem(ViewAppointment.patAppointmentID)"\n        >\n          Edit\n        </button>\n        <!-- <button ion-button color="danger" (click)="Cancel(ViewAppointment)">Cancel</button> -->\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Completed\'">\n        <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Approved\'">\n        <button ion-button color="danger" (click)="Cancel(ViewAppointment)">\n          Cancel\n        </button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Rejected\'">\n        <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Cancel\'">\n        <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n      </ion-item>\n    </div>\n\n    <div *ngIf="selectRole == \'Doctor\'">\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Date\n        </div>\n        <div class="view-list-val pull-right">\n          {{ Date }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Time\n        </div>\n        <div class="view-list-val pull-right">\n          {{ Time }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Chemist Name\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.providerName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Facility\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.facilityCenterName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Location\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.fcLocationName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Medicine Name\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.medname }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Medicine Detail\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.meddetail }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Visit type\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.visittype }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Status\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.status == \'Approved\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.status == \'Cancel\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl cancelled">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div\n          *ngIf="ViewAppointment.status == \'Pending\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl pending">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.status == \'Rejected\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl rejected">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div\n          *ngIf="ViewAppointment.status == \'Completed\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n\n        <!-- <div class="view-list-val pull-right">\n          <span class="accepted-lbl">{{ ViewAppointment.status }}</span>\n        </div> -->\n      </div>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Pending\'">\n        <button ion-button (click)="Approved(ViewAppointment)">Approve</button>\n        <button ion-button color="danger" (click)="Rejected(ViewAppointment)">\n          Reject\n        </button>\n        <button ion-button color="danger" (click)="Canceled(ViewAppointment)">\n          Cancel\n        </button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Approved\'">\n        <!-- <button ion-button (click)="Addvisit(ViewAppointment)">Add Visit</button> -->\n        <button ion-button color="danger" (click)="Canceled(ViewAppointment)">\n          Cancel\n        </button>\n      </ion-item>\n    </div>\n    <div *ngIf="selectRole == \'MedicalCenter\'">\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Date\n        </div>\n        <div class="view-list-val pull-right">\n          {{ Date }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Time\n        </div>\n        <div class="view-list-val pull-right">\n          {{ Time }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Chemist Name\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.providerName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Facility\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.facilityCenterName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Location\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.fcLocationName}}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Medicine Name\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.medname }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Medicine Detail\n        </div>\n        <div class="view-list-val pull-right">\n          {{ Date }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Visit type\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.visittype }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Status\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.status == \'Approved\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.status == \'Cancel\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl cancelled">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div\n          *ngIf="ViewAppointment.status == \'Pending\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl pending">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n\n        <div\n          *ngIf="ViewAppointment.status == \'Rejected\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl rejected">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div\n          *ngIf="ViewAppointment.status == \'Completed\'"\n          class="view-list-val pull-right"\n        >\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n\n        <!-- <div class="view-list-val pull-right">\n          <span class="accepted-lbl"> {{ ViewAppointment.status }}</span>\n        </div> -->\n      </div>\n      <ion-item *ngIf="ViewAppointment.status == \'Pending\'">\n        <button ion-button (click)="Approved(ViewAppointment)">Approve</button>\n        <button ion-button color="danger" (click)="Rejected(ViewAppointment)">\n          Reject\n        </button>\n        <!-- <button ion-button color="danger" (click)="Canceled(ViewAppointment)">Cancel</button> -->\n      </ion-item>\n\n      <ion-item *ngIf="ViewAppointment.status == \'Dispatching\'">\n        <button ion-button (click)="Mediicinetracking(ViewAppointment)">\n          Medicine Tracking\n        </button>\n      </ion-item>\n\n      <ion-item *ngIf="ViewAppointment.status == \'Dispatched\'">\n        <button ion-button (click)="Mediicinetracking(ViewAppointment)">\n          Medicine Tracking\n        </button>\n      </ion-item>\n\n      <ion-item *ngIf="ViewAppointment.status == \'Prepared\'">\n        <button ion-button (click)="Mediicinetracking(ViewAppointment)">\n          Medicine Tracking\n        </button>\n      </ion-item>\n\n      <ion-item *ngIf="ViewAppointment.status == \'Approved\'">\n        <button ion-button color="danger" (click)="Rejected(ViewAppointment)">\n          Reject\n        </button>\n        <button ion-button (click)="PharmaDeliveres(ViewAppointment)">\n          Add Pharma Deliveries\n        </button>\n      </ion-item>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <form text-center class="login-inner-hc" style="height: 50%;">\n  <ion-list *ngIf="selectRole == \'Patient\'">\n    <div class="login-signin-hc">\n      <div class="login-head-hc">\n        <h5>Medicines Request View</h5>\n      </div>\n\n      <ion-item>\n        <ion-label color="">Appointment Date :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="apptdate"\n          name="date"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Appointment Time :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="appttime"\n          name="Time"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Chemist Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.providerName"\n          name="Consulting"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Facility :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.facilityCenterName"\n          name="Facility"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Location :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.fcLocationName"\n          name="Location"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Medicine Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.medname"\n          name="Reason"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Medicine Detail :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.meddetail"\n          name="Description"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Visit type :</ion-label>\n        <ion-input\n          [(ngModel)]="ViewAppointment.visittype"\n          type="text"\n          name="type"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Status :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.status"\n          name="Status"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n      \n    </div>\n\n    <ion-item *ngIf="ViewAppointment.patAppStatus == \'Pending\'">\n      <button\n        ion-button\n        color="calm"\n        (click)="editItem(ViewAppointment.patAppointmentID)"\n      >\n        Edit\n      </button>\n    </ion-item>\n    <ion-item *ngIf="ViewAppointment.patAppStatus == \'Completed\'">\n      <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n    </ion-item>\n    <ion-item *ngIf="ViewAppointment.patAppStatus == \'Approved\'">\n      <button ion-button color="danger" (click)="Cancel(ViewAppointment)">\n        Cancel\n      </button>\n    </ion-item>\n    <ion-item *ngIf="ViewAppointment.patAppStatus == \'Rejected\'">\n      <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n    </ion-item>\n    <ion-item *ngIf="ViewAppointment.patAppStatus == \'Cancel\'">\n      <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n    </ion-item>\n  </ion-list>\n\n  <ion-list *ngIf="selectRole == \'Doctor\'">\n    <div class="login-signin-hc">\n      <div class="login-head-hc">\n        <h5>View Appointment</h5>\n      </div>\n\n      <ion-item>\n        <ion-label color="">Appointment Date :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.apptdate"\n          name="date"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Appointment Time :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.appttime"\n          name="Time"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Chemist Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.providerName"\n          name="Consulting"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Facility :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.facilityCenterName"\n          name="Facility"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Location :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.fcLocationName"\n          name="Location"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Medicine Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.medname"\n          name="Reason"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Medicine Detail :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.meddetail"\n          name="Description"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Visit type :</ion-label>\n        <ion-input\n          [(ngModel)]="ViewAppointment.visittype"\n          type="text"\n          name="type"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Status :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.status"\n          name="Status"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n    </div>\n\n    <ion-item *ngIf="ViewAppointment.patAppStatus == \'Pending\'">\n      <button ion-button (click)="Approved(ViewAppointment)">Approve</button>\n      <button ion-button color="danger" (click)="Rejected(ViewAppointment)">\n        Reject\n      </button>\n      <button ion-button color="danger" (click)="Canceled(ViewAppointment)">\n        Cancel\n      </button>\n    </ion-item>\n    <ion-item *ngIf="ViewAppointment.patAppStatus == \'Approved\'">\n      <button ion-button color="danger" (click)="Canceled(ViewAppointment)">\n        Cancel\n      </button>\n    </ion-item>\n  </ion-list>\n\n  <ion-list *ngIf="selectRole == \'MedicalCenter\'">\n    <div class="login-signin-hc">\n      <div class="login-head-hc">\n        <h5>Medicine Requsit view</h5>\n      </div>\n\n      <ion-item>\n        <ion-label color="">Appointment Date :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.apptdate"\n          name="date"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Appointment Time :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.appttime"\n          name="Time"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Chemist Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.providerName"\n          name="Consulting"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Facility :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.facilityCenterName"\n          name="Facility"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Location :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.fcLocationName"\n          name="Location"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Medicine Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.medname"\n          name="Reason"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Medicine Detail :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.meddetail"\n          name="Description"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Visit type :</ion-label>\n        <ion-input\n          [(ngModel)]="ViewAppointment.visittype"\n          type="text"\n          name="type"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Status :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.status"\n          name="Status"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n    </div>\n\n    <ion-item *ngIf="ViewAppointment.status == \'Pending\'">\n      <button ion-button (click)="Approved(ViewAppointment)">Approve</button>\n      <button ion-button color="danger" (click)="Rejected(ViewAppointment)">\n        Reject\n      </button>\n    </ion-item>\n\n    <ion-item *ngIf="ViewAppointment.status == \'Dispatching\'">\n      <button ion-button (click)="Mediicinetracking(ViewAppointment)">\n        Medicine Tracking\n      </button>\n    </ion-item>\n\n    <ion-item *ngIf="ViewAppointment.status == \'Dispatched\'">\n      <button ion-button (click)="Mediicinetracking(ViewAppointment)">\n        Medicine Tracking\n      </button>\n    </ion-item>\n\n    <ion-item *ngIf="ViewAppointment.status == \'Prepared\'">\n      <button ion-button (click)="Mediicinetracking(ViewAppointment)">\n        Medicine Tracking\n      </button>\n    </ion-item>\n\n    <ion-item *ngIf="ViewAppointment.status == \'Approved\'">\n      <button ion-button color="danger" (click)="Rejected(ViewAppointment)">\n        Reject\n      </button>\n      <button ion-button (click)="PharmaDeliveres(ViewAppointment)">\n        Add Pharma Deliveries\n      </button>\n    </ion-item>\n  </ion-list>\n</form> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/medicinesrequestview/medicinesrequestview.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_3__angular_common__["d" /* DatePipe */]])
    ], MedicinesrequestviewPage);
    return MedicinesrequestviewPage;
}());

//# sourceMappingURL=medicinesrequestview.js.map

/***/ }),

/***/ 286:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PharmaAppointmentlistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__editappointment_editappointment__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__rebookappointment_rebookappointment__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__addpharmaappointment_addpharmaappointment__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__pharmaview_pharmaview__ = __webpack_require__(287);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the AppointmentlistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PharmaAppointmentlistPage = /** @class */ (function () {
    function PharmaAppointmentlistPage(navCtrl, navParams, api, alertCtrl, datepipe) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.datepipe = datepipe;
        this.appointmentTodayItems = [];
        this.currentAppointlist = [];
        this.pharmAppList = [];
        //localStorage.setItem(selectedRole, 'Patient');
        //localStorage.setItem(selectedRole, 'Doctor');
        this.currentAppointlist = this.appointmentTodayItems;
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        // if (localStorage.getItem(selectedRole) == 'Patient') {
        //   this.api.wsPostHeader(APIName.getAppointmentPatient, '').then((resp:any) => {
        //     this.appointmentTodayItems = resp.data;
        //     this.currentAppointlist = resp.data;
        //   });
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Patient") {
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getPharmaAppointments, "").then(function (resp) {
                // this.appointmentTodayItems = resp.data.patAppointmentPojo;
                // this.currentAppointlist = resp.data.patAppointmentPojo;
                _this.pharmAppList = resp.data.pharmapojolist;
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
            // this.api.wsPostHeader(APIName.getAppointmentDoctor, '').then((resp:any) => {
            //   this.appointmentTodayItems = resp.data;
            //   this.currentAppointlist = resp.data;
            // });
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, "").then(function (resp) {
                // this.appointmentTodayItems = resp.data.patAppointmentPojo;
                // this.currentAppointlist = resp.data.patAppointmentPojo;
                _this.pharmAppList = resp.data.pharmapojolist;
            });
        }
    }
    PharmaAppointmentlistPage.prototype.ionViewDidLoad = function () { };
    PharmaAppointmentlistPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__addpharmaappointment_addpharmaappointment__["a" /* AddPharmaAppointmentPage */]);
    };
    PharmaAppointmentlistPage.prototype.editItem = function (id) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__editappointment_editappointment__["a" /* EditappointmentPage */], { patAppointmentID: id });
    };
    PharmaAppointmentlistPage.prototype.changeItem = function (stateInt) {
        switch (stateInt) {
            case 1:
                this.currentAppointlist = this.appointmentTodayItems;
                break;
            default:
        }
    };
    PharmaAppointmentlistPage.prototype.openItem = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__pharmaview_pharmaview__["a" /* PharmaviewPage */], { item: item });
    };
    PharmaAppointmentlistPage.prototype.Canceled = function (data) {
        var _this = this;
        console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to cancel?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            patientAppointmentStatus: "Cancel",
                            id: d.patAppointmentID,
                            description: ""
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Cancel",
                            // "patAppDescription":''
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                // this.api.wsPostHeaderBackground(APIName.getAppointmentDoctor, '').then((resp:any) => {
                                //   this.appointmentTodayItems = resp.data;
                                //   this.currentAppointlist = resp.data;
                                // });
                                _this.api
                                    .wsGetBG(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, "")
                                    .then(function (resp) {
                                    _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaAppointmentlistPage.prototype.checkNulldata = function (data) {
        if (data.fclProviderMapID === null) {
            data.fclProviderMapID = "";
        }
        if (data.specialityID === null) {
            data.specialityID = "";
        }
        if (data.patAppDate === null) {
            data.patAppDate = 1524123001;
        }
        if (data.patAppTimeFrom === null) {
            data.patAppTimeFrom = 1524123001;
        }
        if (data.patAppTimeTo === null) {
            data.patAppTimeTo = 1524123001;
        }
        if (data.patAppType === null) {
            data.patAppType = "New";
        }
        if (data.patAppReason === null) {
            data.patAppReason = "BP";
        }
        if (data.patAppDescription === null) {
            data.patAppDescription = "dsfdsfdf";
        }
        return data;
    };
    PharmaAppointmentlistPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to reject?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        //this.navCtrl.push(SignupPage,{item:data});
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Rejected",
                            // "patAppDescription":''
                            patientAppointmentStatus: "Rejected",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                // this.api.wsPostHeaderBackground(APIName.getAppointmentDoctor, '').then((resp:any) => {
                                //   this.appointmentTodayItems = resp.data;
                                //   this.currentAppointlist = resp.data;
                                // });
                                _this.api
                                    .wsGetBG(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, "")
                                    .then(function (resp) {
                                    _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaAppointmentlistPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to approve?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        // console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Approved",
                            // "patAppDescription":''
                            patientAppointmentStatus: "Approved",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        //console.log(passParam);
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                // this.api.wsPostHeaderBackground(APIName.getAppointmentDoctor, '').then((resp:any) => {
                                //   this.appointmentTodayItems = resp.data;
                                //   this.currentAppointlist = resp.data;
                                // });
                                _this.api
                                    .wsGetBG(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, "")
                                    .then(function (resp) {
                                    _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaAppointmentlistPage.prototype.Addvisit = function (data) {
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to Add visit?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaAppointmentlistPage.prototype.Edit = function (data) {
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to edit?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaAppointmentlistPage.prototype.Cancel = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to cancel?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        //this.navCtrl.push(SignupPage,{item:data});
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Cancel",
                            // "patAppDescription":''
                            patientAppointmentStatus: "Cancel",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                // this.api.wsPostHeaderBackground(APIName.getAppointmentPatient, '').then((resp:any) => {
                                //   this.appointmentTodayItems = resp.data;
                                //   this.currentAppointlist = resp.data;
                                // });
                                _this.api
                                    .wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, "")
                                    .then(function (resp) {
                                    _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaAppointmentlistPage.prototype.ReBook = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to re-book?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var id = d.patAppointmentID;
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__rebookappointment_rebookappointment__["a" /* RebookappointmentPage */], { patAppointmentID: id });
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaAppointmentlistPage.prototype.changeStringToDate = function (dateString, format) {
        if (format) {
            console.log("StringToDate==>", this.changeDateFormat(new Date(dateString), format));
            return this.changeDateFormat(new Date(dateString), format);
        }
        else {
            console.log("completeString=>>>>>>", dateString);
            console.log("StringToDate==>", new Date(dateString).toISOString());
            return new Date(dateString).toISOString();
        }
    };
    //date to any format
    PharmaAppointmentlistPage.prototype.changeDateFormat = function (date, formate) {
        var latest_date = this.datepipe.transform(date, formate);
        console.log("ChangeDateFormat", latest_date);
        return latest_date;
    };
    PharmaAppointmentlistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-appointmentlist",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/pharmaappointmentlist/pharmaappointmentlist.html"*/'<!--\n  Generated template for the AppointmentlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Pharma Appointment List</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="cmn-list-page">\n    <div *ngIf="selectRole == \'Patient\'">\n      <div\n        class="cmn-apmnt-row clearfix w-100 clearfix"\n        #slidingItem\n        *ngFor="let item of pharmAppList"\n      >\n        <div>\n          <div class="apmn-lft" (click)="openItem(item)">\n            <div class="dr-name">{{ item.providerName }}</div>\n            <div class="dr-adrs">\n              <img src="assets/images/location.png" />\n              {{ item.facilityCenterName }} {{ item.facilityCenterType }} - {{\n              item.fcLocationName }}\n            </div>\n            <div class="apmnt-dt-tm">\n              <img src="assets/images/cal.png" />\n              {{ item.apptdate | date: "dd/MM/yyyy" }}<span class="apmn-time"\n                >{{ item.appttime | date: "shortTime" }}</span\n              >\n            </div>\n          </div>\n          <div\n            *ngIf="item.status == \'Approved\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl accepted">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.status == \'Reject\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl cancelled">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.status == \'Dispatching\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl dispatching">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.status == \'Pending\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl pending">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div\n            *ngIf="item.status == \'Completed\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl accepted">\n              {{ item.status }}\n            </span>\n          </div>\n          <div\n            *ngIf="item.status == \'Prepared\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl prepared">\n              {{ item.status }}\n            </span>\n          </div>\n          <div\n            *ngIf="item.status == \'Dispatched\'"\n            class="apmn-rgt"\n            (click)="openItem(item)"\n          >\n            <span class="apmnt-lbl dispatched">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <!-- <div class="apmn-rgt" (click)="openItem(item)">\n            <span class="apmnt-lbl accepted">\n              {{ item.status }}\n            </span>\n          </div> -->\n          <ion-item-options *ngIf="item.patAppStatus == \'Pending\'">\n            <button\n              ion-button\n              color="calm"\n              (click)="editItem(item.patAppointmentID)"\n            >\n              Edit\n            </button>\n            <button ion-button color="danger" (click)="Cancel(item)">\n              Cancel\n            </button>\n          </ion-item-options>\n\n          <ion-item-options *ngIf="item.patAppStatus == \'Completed\'">\n            <button ion-button color="danger" (click)="ReBook(item)">\n              Re-Book\n            </button>\n          </ion-item-options>\n\n          <ion-item-options *ngIf="item.patAppStatus == \'Approved\'">\n            <button ion-button color="danger" (click)="Cancel(item)">\n              Cancel\n            </button>\n          </ion-item-options>\n\n          <ion-item-options *ngIf="item.patAppStatus == \'Rejected\'">\n            <button ion-button (click)="ReBook(item)">Re-Book</button>\n          </ion-item-options>\n\n          <ion-item-options *ngIf="item.patAppStatus == \'Cancel\'">\n            <button ion-button (click)="ReBook(item)">Re-Book</button>\n          </ion-item-options>\n        </div>\n      </div>\n      <div class="cmn-apmnt-row clearfix" *ngIf="selectRole == \'Doctor\'">\n        <div\n          #slidingItem\n          *ngFor="let item of currentAppointlist"\n          class="w-100 clearfix"\n        >\n          <div class="apmn-lft" (click)="openItem(item)">\n            <div class="dr-name">{{ item.name }}</div>\n            <div class="dctr-vst-typ">\n              <img src="assets/images/dis-ic.png" />\n              {{ item.patAppReason }}\n            </div>\n            <div class="apmnt-dt-tm">\n              <img src="assets/images/cal.png" />\n              {{ item.patAppDate | date: "dd/MM/yyyy" }}<span class="apmn-time"\n                >{{ item.patAppTimeTo | date: "shortTime" }}</span\n              >\n            </div>\n          </div>\n          <div class="apmn-rgt">\n            <span class="apmnt-lbl accepted">\n              {{ item.patAppStatus }}\n            </span>\n          </div>\n          <ion-item-options *ngIf="item.patAppStatus == \'Pending\'">\n            <button ion-button (click)="Approved(item)">Approve</button>\n            <button ion-button color="danger" (click)="Rejected(item)">\n              Reject\n            </button>\n            <button ion-button color="danger" (click)="Canceled(item)">\n              Cancel\n            </button>\n          </ion-item-options>\n\n          <ion-item-options *ngIf="item.patAppStatus == \'Approved\'">\n            <button ion-button (click)="Addvisit(item)">Add Visit</button>\n            <button ion-button color="danger" (click)="Canceled(item)">\n              Cancel\n            </button>\n          </ion-item-options>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ion-fab bottom right *ngIf="selectRole == \'Patient\'">\n    <button class="cmn-create-btn" ion-fab (click)="addItem()">\n      <ion-icon name="add"></ion-icon>\n    </button>\n  </ion-fab>\n</ion-content>\n\n<!-- <div class="cmn-list-page">\n          <ion-list class="cmn-tb-cntnt" *ngIf="selectRole == \'Patient\'">\n            <ion-item-sliding #slidingItem *ngFor="let item of pharmAppList">\n              <ion-item (click)="openItem(item)">\n                <div class="ptnt-name">{{ item.providerName }}</div>\n      \n                <div class="rson-fr-meet">\n                  {{ item.medname }}\n                </div>\n      \n                <div class="rson-fr-meet">\n                  {{ item.facilityCenterName }} {{ item.facilityCenterType }} -\n                  {{ item.fcLocationName }}\n                </div>\n                <div class="apmnt-tm">\n                  {{ item.apptdate | date: "dd/MM/yyyy" }}\n                  {{ item.appttime | date: "shortTime" }}\n                </div>\n                <div class="apmnt-status">{{ item.status }}</div>\n              </ion-item>\n              <ion-item-options *ngIf="item.patAppStatus == \'Pending\'">\n                <button\n                  ion-button\n                  color="calm"\n                  (click)="editItem(item.patAppointmentID)"\n                >\n                  Edit\n                </button>\n                <button ion-button color="danger" (click)="Cancel(item)">\n                  Cancel\n                </button>\n              </ion-item-options>\n      \n              <ion-item-options *ngIf="item.patAppStatus == \'Completed\'">\n                <button ion-button color="danger" (click)="ReBook(item)">\n                  Re-Book\n                </button>\n              </ion-item-options>\n      \n              <ion-item-options *ngIf="item.patAppStatus == \'Approved\'">\n                <button ion-button color="danger" (click)="Cancel(item)">\n                  Cancel\n                </button>\n              </ion-item-options>\n      \n              <ion-item-options *ngIf="item.patAppStatus == \'Rejected\'">\n                <button ion-button (click)="ReBook(item)">Re-Book</button>\n              </ion-item-options>\n      \n              <ion-item-options *ngIf="item.patAppStatus == \'Cancel\'">\n                <button ion-button (click)="ReBook(item)">Re-Book</button>\n              </ion-item-options>\n            </ion-item-sliding>\n          </ion-list>\n      \n          <ion-list class="cmn-tb-cntnt" *ngIf="selectRole == \'Doctor\'">\n            <ion-item-sliding #slidingItem *ngFor="let item of currentAppointlist">\n              <ion-item (click)="openItem(item)">\n                <div class="ptnt-name">{{ item.name }}</div>\n                <div class="rson-fr-meet">{{ item.patAppReason }}</div>\n                <div class="apmnt-tm">\n                  {{ item.patAppDate | date: "dd/MM/yyyy" }}\n                  {{ item.patAppTimeTo | date: "shortTime" }}\n                </div>\n                <div class="apmnt-status">{{ item.patAppStatus }}</div>\n              </ion-item>\n              <ion-item-options *ngIf="item.patAppStatus == \'Pending\'">\n                <button ion-button (click)="Approved(item)">Approve</button>\n                <button ion-button color="danger" (click)="Rejected(item)">\n                  Reject\n                </button>\n                <button ion-button color="danger" (click)="Canceled(item)">\n                  Cancel\n                </button>\n              </ion-item-options>\n      \n              <ion-item-options *ngIf="item.patAppStatus == \'Approved\'">\n                <button ion-button (click)="Addvisit(item)">Add Visit</button>\n                <button ion-button color="danger" (click)="Canceled(item)">\n                  Cancel\n                </button>\n              </ion-item-options>\n            </ion-item-sliding>\n          </ion-list>\n        </div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/pharmaappointmentlist/pharmaappointmentlist.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_5__angular_common__["d" /* DatePipe */]])
    ], PharmaAppointmentlistPage);
    return PharmaAppointmentlistPage;
}());

//# sourceMappingURL=pharmaappointmentlist.js.map

/***/ }),

/***/ 287:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PharmaviewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__patient_addappointment_addappointment__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patient_rebookappointment_rebookappointment__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__patient_editpharmaappointment_editpharmaappointment__ = __webpack_require__(288);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








/**
 * Generated class for the PharmaviewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PharmaviewPage = /** @class */ (function () {
    function PharmaviewPage(navCtrl, navParams, api, alertCtrl, datepipe) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.datepipe = datepipe;
        this.ViewAppointment = [];
        this.item = [];
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        this.item = this.navParams.get("item");
        console.log("POP");
        console.log(this.item);
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Patient") {
            var petId = { apptid: this.item.apptid };
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getpharmaview, petId).then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    _this.ViewAppointment = resp.data;
                    _this.ViewAppointment.facilityCenterType =
                        _this.ViewAppointment.facilityCenterType +
                            " - " +
                            _this.ViewAppointment.fcLocationName;
                    var timediff = resp.data.appttime - 19800000;
                    _this.Time = _this.convertTimeTo(timediff);
                    _this.Date = _this.convertDate(resp.data.apptdate);
                }
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
            var petId = { apptid: this.item.apptid };
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getpharmaview, petId).then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    _this.ViewAppointment = resp.data;
                    _this.ViewAppointment.facilityCenterType =
                        _this.ViewAppointment.facilityCenterType +
                            " - " +
                            _this.ViewAppointment.fcLocationName;
                    _this.Time = _this.convertTimeTo(resp.data.appttime);
                    _this.Date = _this.convertDate(resp.data.apptdate);
                }
            });
        }
    }
    PharmaviewPage.prototype.goBack = function () {
        this.navCtrl.pop();
    };
    PharmaviewPage.prototype.ionViewDidLoad = function () { };
    PharmaviewPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__patient_addappointment_addappointment__["a" /* AddappointmentPage */]);
    };
    PharmaviewPage.prototype.editItem = function (id) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__patient_editpharmaappointment_editpharmaappointment__["a" /* EditPharmaAppointmentPage */], { apptID: id });
    };
    PharmaviewPage.prototype.Canceled = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to cancel?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Cancel"
                            patientAppointmentStatus: "Cancel",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getpharmaview, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                var petId = { patAppointmentID: _this.item.patAppointmentID };
                                _this.api
                                    .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditAppointmentDoctor, petId)
                                    .then(function (resp) {
                                    if (resp.status === 500) {
                                        // showToast( resp.error.message, this.toastCtrl)
                                    }
                                    else {
                                        _this.ViewAppointment = resp.data;
                                        console.log("wbfbwfbuiwbuiwbfuwb - > " +
                                            JSON.stringify(_this.ViewAppointment));
                                        _this.Time = _this.convertTimeTo(resp.data.appttime);
                                        _this.Date = _this.convertDate(resp.data.apptdate);
                                    }
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaviewPage.prototype.checkNulldata = function (data) {
        if (data.fclProviderMapID === null) {
            data.fclProviderMapID = "";
        }
        if (data.specialityID === null) {
            data.specialityID = "";
        }
        if (data.patAppDate === null) {
            data.patAppDate = 1524123001;
        }
        if (data.patAppTimeFrom === null) {
            data.patAppTimeFrom = 1524123001;
        }
        if (data.patAppTimeTo === null) {
            data.patAppTimeTo = 1524123001;
        }
        if (data.patAppType === null) {
            data.patAppType = "New";
        }
        if (data.patAppReason === null) {
            data.patAppReason = "BP";
        }
        if (data.patAppDescription === null) {
            data.patAppDescription = "dsfdsfdf";
        }
        return data;
    };
    PharmaviewPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to reject?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Rejected"
                            patientAppointmentStatus: "Rejected",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                var petId = { patAppointmentID: _this.item.patAppointmentID };
                                _this.api
                                    .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditAppointmentDoctor, petId)
                                    .then(function (resp) {
                                    if (resp.status === 500) {
                                        // showToast( resp.error.message, this.toastCtrl)
                                    }
                                    else {
                                        _this.ViewAppointment = resp.data;
                                        _this.Time = _this.convertTimeTo(resp.data.appttime);
                                        _this.Date = _this.convertDate(resp.data.apptdate);
                                    }
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaviewPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to approve?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        // console.log('Ok clicked');
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Approved"
                            patientAppointmentStatus: "Approved",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                var petId = { patAppointmentID: _this.item.patAppointmentID };
                                _this.api
                                    .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditAppointmentDoctor, petId)
                                    .then(function (resp) {
                                    if (resp.status === 500) {
                                        // showToast( resp.error.message, this.toastCtrl)
                                    }
                                    else {
                                        _this.ViewAppointment = resp.data;
                                        _this.Time = _this.convertTimeTo(resp.data.appttime);
                                        _this.Date = _this.convertDate(resp.data.apptdate);
                                    }
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaviewPage.prototype.Addvisit = function (data) {
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to Add visit?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaviewPage.prototype.Edit = function (data) {
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to edit?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaviewPage.prototype.Cancel = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to cancel?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        //this.navCtrl.push(SignupPage,{item:data});
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Cancel"
                            patientAppointmentStatus: "Cancel",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                var petId = { patAppointmentID: _this.item.patAppointmentID };
                                _this.api
                                    .wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditAppointmentDoctor, petId)
                                    .then(function (resp) {
                                    if (resp.status === 500) {
                                        // showToast( resp.error.message, this.toastCtrl)
                                    }
                                    else {
                                        _this.ViewAppointment = resp.data;
                                        _this.Time = _this.convertTimeTo(resp.data.appttime);
                                        _this.Date = _this.convertDate(resp.data.apptdate);
                                    }
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaviewPage.prototype.ReBook = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to re-book?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var id = d.patAppointmentID;
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patient_rebookappointment_rebookappointment__["a" /* RebookappointmentPage */], { patAppointmentID: id });
                    }
                }
            ]
        });
        alert.present();
    };
    PharmaviewPage.prototype.convertDate = function (date) {
        if (date) {
            var dateConvert = new Date(date);
            var Year = dateConvert.getUTCFullYear();
            var Month = dateConvert.getUTCMonth() + 1;
            var Day = dateConvert.getUTCDate();
            return Day + "-" + Month + "-" + Year;
        }
        else {
            return "";
        }
    };
    PharmaviewPage.prototype.convertTimeTo = function (time) {
        if (time) {
            // var dateTime = new Date(parseInt(time));
            var dateTime = new Date(time);
            // var Hours= dateTime.getUTCHours() ;
            // var Minutes= dateTime.getUTCMinutes();
            // var Seconds= dateTime.getUTCSeconds();
            var Hours = dateTime.getHours();
            var Minutes = dateTime.getMinutes();
            var Seconds = dateTime.getSeconds();
            return Hours + ":" + Minutes;
        }
        else {
            return "";
        }
    };
    PharmaviewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-pharmaview",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/pharmaview/pharmaview.html"*/'<ion-header>\n  <ion-navbar hideBackButton="false">\n    <ion-buttons>\n      <!-- <button ion-button icon-only (click)="goBack()" class="my-style-for-modal">\n          <ion-icon style="color:#fff" name="arrow-back"></ion-icon>\n      </button> -->\n    </ion-buttons>\n    <ion-title>View Pharma Appointment</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="view-list">\n    <div *ngIf="selectRole == \'Patient\'">\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Date\n        </div>\n        <div class="view-list-val pull-right">\n          {{ Date }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Time\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ Time }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Chemist Name\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.providerName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Facility\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.facilityCenterName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Location\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.fcLocationName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Medicine Name\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.medname }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Medicine Detail\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.meddetail }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Visit type\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.visittype }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Status\n        </div>\n\n        <div *ngIf="ViewAppointment.status == \'Approved\'" class="apmn-rgt">\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div *ngIf="ViewAppointment.status == \'Pending\'" class="apmn-rgt">\n          <span class="apmnt-lbl pending">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div *ngIf="ViewAppointment.status == \'Cancel\'" class="apmn-rgt">\n          <span class="apmnt-lbl cancelled">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div *ngIf="ViewAppointment.status == \'Rejected\'" class="apmn-rgt">\n          <span class="apmnt-lbl rejected">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div *ngIf="ViewAppointment.status == \'Completed\'" class="apmn-rgt">\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n\n        <!-- <div class="apmn-rgt">\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.status }}\n          </span>\n        </div> -->\n      </div>\n\n      <ion-item *ngIf="ViewAppointment.status == \'Pending\'">\n        <button\n          ion-button\n          color="calm"\n          (click)="editItem(ViewAppointment.apptid)"\n        >\n          Edit\n        </button>\n        <button ion-button color="danger" (click)="Cancel(ViewAppointment)">\n          Cancel\n        </button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.status == \'Completed\'">\n        <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.status == \'Approved\'">\n        <button\n          ion-button\n          color="danger"\n          (click)="Cancel(ViewAppointment.apptid)"\n        >\n          Cancel\n        </button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.status == \'Rejected\'">\n        <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.status == \'Cancel\'">\n        <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n      </ion-item>\n    </div>\n\n    <div *ngIf="selectRole == \'Doctor\'">\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Date\n        </div>\n        <div class="view-list-val pull-right">\n          {{ ViewAppointment.apptdate }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Appointment Time\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.appttime }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Chemist Name\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.providerName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Facility\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.facilityCenterName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Location\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.fcLocationName }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Medicine Name\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.medname }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Medicine Detail\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.meddetail }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Visit type\n        </div>\n        <div class="view-list-val  pull-right">\n          {{ ViewAppointment.visittype }}\n        </div>\n      </div>\n      <div class="view-lst-row clearfix">\n        <div class="view-lst-lbl pull-left">\n          Status\n        </div>\n        <div *ngIf="ViewAppointment.status == \'Approved\'" class="apmn-rgt">\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div *ngIf="ViewAppointment.status == \'Pending\'" class="apmn-rgt">\n          <span class="apmnt-lbl pending">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div *ngIf="ViewAppointment.status == \'Cancel\'" class="apmn-rgt">\n          <span class="apmnt-lbl cancelled">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div *ngIf="ViewAppointment.status == \'Rejected\'" class="apmn-rgt">\n          <span class="apmnt-lbl rejected">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n        <div *ngIf="ViewAppointment.status == \'Completed\'" class="apmn-rgt">\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.status }}\n          </span>\n        </div>\n\n        <!-- <div class="apmn-rgt">\n          <span class="apmnt-lbl accepted">\n            {{ ViewAppointment.status }}\n          </span>\n        </div> -->\n      </div>\n\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Pending\'">\n        <button ion-button (click)="Approved(ViewAppointment)">Approve</button>\n        <button ion-button color="danger" (click)="Rejected(ViewAppointment)">\n          Reject\n        </button>\n        <button ion-button color="danger" (click)="Canceled(ViewAppointment)">\n          Cancel\n        </button>\n      </ion-item>\n      <ion-item *ngIf="ViewAppointment.patAppStatus == \'Approved\'">\n        <!-- <button ion-button (click)="Addvisit(ViewAppointment)">Add Visit</button> -->\n        <button ion-button color="danger" (click)="Canceled(ViewAppointment)">\n          Cancel\n        </button>\n      </ion-item>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <form text-center class="login-inner-hc" style="height: 50%;">\n  <ion-list *ngIf="selectRole == \'Patient\'">\n    <div class="login-signin-hc">\n      <div class="login-head-hc">\n        <h5>View Pharma Appointment</h5>\n      </div>\n\n      <ion-item>\n        <ion-label color="">Appointment Date :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="Date"\n          name="date"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Appointment Time :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="Time"\n          name="Time"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Chemist Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.providerName"\n          name="Consulting"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Facility :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.facilityCenterName"\n          name="Facility"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Location :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.fcLocationName"\n          name="Location"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Medicine Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.medname"\n          name="Reason"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Medicine Detail :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.meddetail"\n          name="Description"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Visit type :</ion-label>\n        <ion-input\n          [(ngModel)]="ViewAppointment.visittype"\n          type="text"\n          name="type"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Status :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.status"\n          name="Status"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n    </div>\n\n    <ion-item *ngIf="ViewAppointment.status == \'Pending\'">\n      <button\n        ion-button\n        color="calm"\n        (click)="editItem(ViewAppointment.apptid)"\n      >\n        Edit\n      </button>\n      <button ion-button color="danger" (click)="Cancel(ViewAppointment)">\n        Cancel\n      </button>\n    </ion-item>\n\n    <ion-item *ngIf="ViewAppointment.status == \'Completed\'">\n      <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n    </ion-item>\n    <ion-item *ngIf="ViewAppointment.status == \'Approved\'">\n      <button\n        ion-button\n        color="danger"\n        (click)="Cancel(ViewAppointment.apptid)"\n      >\n        Cancel\n      </button>\n    </ion-item>\n    <ion-item *ngIf="ViewAppointment.status == \'Rejected\'">\n      <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n    </ion-item>\n    <ion-item *ngIf="ViewAppointment.status == \'Cancel\'">\n      <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n    </ion-item>\n  </ion-list>\n  <ion-list *ngIf="selectRole == \'Doctor\'">\n    <div class="login-signin-hc">\n      <div class="login-head-hc">\n        <h5>View Appointment</h5>\n      </div>\n\n      <ion-item>\n        <ion-label color="">Appointment Date :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.apptdate"\n          name="date"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Appointment Time :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.appttime"\n          name="Time"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Chemist Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.providerName"\n          name="Consulting"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Facility :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.facilityCenterName"\n          name="Facility"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Location :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.fcLocationName"\n          name="Location"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Medicine Name :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.medname"\n          name="Reason"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Medicine Detail :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.meddetail"\n          name="Description"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Visit type :</ion-label>\n        <ion-input\n          [(ngModel)]="ViewAppointment.visittype"\n          type="text"\n          name="type"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="">Status :</ion-label>\n        <ion-input\n          type="text"\n          [(ngModel)]="ViewAppointment.status"\n          name="Status"\n          disabled="true"\n        ></ion-input>\n      </ion-item>\n    </div>\n\n    <ion-item *ngIf="ViewAppointment.patAppStatus == \'Pending\'">\n      <button ion-button (click)="Approved(ViewAppointment)">Approve</button>\n      <button ion-button color="danger" (click)="Rejected(ViewAppointment)">\n        Reject\n      </button>\n      <button ion-button color="danger" (click)="Canceled(ViewAppointment)">\n        Cancel\n      </button>\n    </ion-item>\n    <ion-item *ngIf="ViewAppointment.patAppStatus == \'Approved\'">\n      <button ion-button color="danger" (click)="Canceled(ViewAppointment)">\n        Cancel\n      </button>\n    </ion-item>\n  </ion-list>\n</form> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/pharmaview/pharmaview.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_5__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_6__angular_common__["d" /* DatePipe */]])
    ], PharmaviewPage);
    return PharmaviewPage;
}());

//# sourceMappingURL=pharmaview.js.map

/***/ }),

/***/ 288:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditPharmaAppointmentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_in_app_browser__ = __webpack_require__(195);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





// import { callbackify } from "util";

var checksum_lib = __webpack_require__(178);
var paytm_config = __webpack_require__(391).paytm_config;
var EditPharmaAppointmentPage = /** @class */ (function () {
    function EditPharmaAppointmentPage(navCtrl, navParams, api, datepipe, toastCtrl, iab, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.datepipe = datepipe;
        this.toastCtrl = toastCtrl;
        this.iab = iab;
        this.alertCtrl = alertCtrl;
        this.facilitiesArray = [];
        this.locationArray = [];
        this.MedicalStoreArray = [];
        this.MedByPharmaArray = [];
        this.doctorArray = [];
        this.visittypeArray = [];
        this.visitreasonArray = [];
        this.facilityCenterID = "";
        this.fcLocationMapID = "";
        this.fclProviderMapID = "";
        this.drugcompundID = "";
        this.visittypeId = "Home";
        this.visitreasonId = "";
        this.patAppDate = "";
        this.patAppTime = "";
        this.patAppTimeTo = "";
        this.patAppDescription = "";
        this.fees = "";
        this.orderID = 0;
        this.custID = 0;
        this.txnAmount = "";
        this.providerId = "";
        this.paramarray = {};
        this.apptID = [];
        this.viewgetappointmentArray = [];
        this.paramarray["MID"] = paytm_config.MID; //Provided by Paytm
        this.paramarray["INDUSTRY_TYPE_ID"] = "Retail"; //Provided by Paytm
        this.paramarray["CHANNEL_ID"] = "WAP"; //Provided by Paytm
        this.paramarray["WEBSITE"] = "WEBSTAGING"; //Provided by Paytm
        this.paramarray["ENVIRONMENT"] = "staging";
        this.paramarray["CHECKSUMHASH"] = "";
    }
    // constructor(public datepipe:DatePipe, public navCtrl: NavController, public navParams: NavParams, public api: ApiProvider,public toastCtrl:ToastController) {
    //   this.patAppointmentID = this.navParams.get('patAppointmentID');
    //   this.getviewgetappointment();
    // }
    EditPharmaAppointmentPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad AddappointmentPage");
        ///to call all facility////
        // this.getallFacilities();
        this.visitreason();
        this.visittype();
        this.apptID = this.navParams.get("apptID");
        this.getviewgetpharmaappointment();
        console.log(this.apptID);
        // this.getAllMedicalStore();
        // this.getfees();
    };
    /// facility////
    EditPharmaAppointmentPage.prototype.getallFacilities = function () {
        var _this = this;
        var data1 = {
            facilityCenterType: "MedicalStore"
        };
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllFacilityByPerameter, data1)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.facilitiesArray = resp.data;
                if (_this.facilityCenterID.length) {
                }
                else {
                    _this.facilityCenterID = _this.selectedfacilityCenterID;
                }
                // this.facilityCenterID = this.facilitiesArray[0].facilityCenterID;
            }
        });
    };
    EditPharmaAppointmentPage.prototype.getFacilityid = function (facilityid) {
        this.facilityCenterID = facilityid;
        this.getAllLocations();
        console.log("facilityCenterID", "" + this.facilityCenterID);
    };
    // fetchFees(fetch: Number) {
    //   console.log("Called");
    //   console.log("fetched:" + fetch);
    //   let feesRequestmodel = new FeesRequestModel(fetch);
    //   this.addAppointmentService.getFees(feesRequestmodel).subscribe(
    //     response => {
    //       this.fees = response.data.fees;
    //       console.log(this.fees);
    //     },
    //     error => {}
    //   );
    // }
    // getfees() {
    // this.api.wsPostHeader(APIName.getfeesofdoctor, "").then((resp: any) => {
    //   if (resp.status === 500) {
    //     // showToast( resp.error.message, this.toastCtrl)
    //   } else {
    //     this.fees = resp.data.fees;
    //     console.log(this.fees);
    //   }
    // });
    //   this.fees = "400.00";
    // }
    /// locations////
    EditPharmaAppointmentPage.prototype.getAllLocations = function () {
        var _this = this;
        var data = {
            facilityCenterID: this.facilityCenterID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLocationByFacility, data)
            .then(function (resp) {
            _this.locationArray = resp.data;
            // if (this.locationArray.length > 0) {
            //   this.fcLocationMapID = this.locationArray[0].fcLocationMapID;
            // } else {
            //   this.fcLocationMapID = "";
            // }
            _this.getlocationid(_this.selectedfcLocationMapID);
        });
    };
    EditPharmaAppointmentPage.prototype.getlocationid = function (locationid) {
        this.fcLocationMapID = locationid;
        this.getAllMedicalStore();
    };
    /// MedicalStore////
    EditPharmaAppointmentPage.prototype.getAllMedicalStore = function () {
        var _this = this;
        var data = {
            fcLocationMapID: this.fcLocationMapID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllMedicalStore, data)
            .then(function (resp) {
            _this.MedicalStoreArray = resp.data;
            // if (this.MedicalStoreArray.length > 0) {
            //   this.fclProviderMapID = this.MedicalStoreArray[0].fclProviderMapID;
            //   this.providerId = this.MedicalStoreArray[0].providerID;
            // } else {
            //   this.fclProviderMapID = "";
            //   this.providerId = "";
            // }
            _this.getmedicalStoreID(_this.selectedfclProviderMapID);
        });
    };
    EditPharmaAppointmentPage.prototype.getmedicalStoreID = function (medicalStore) {
        console.log(medicalStore);
        this.fclProviderMapID = medicalStore;
        this.getMedByPharma();
    };
    EditPharmaAppointmentPage.prototype.getMedByPharma = function () {
        var _this = this;
        var data = {
            fclProviderMapID: this.fclProviderMapID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getMedByPharma, data)
            .then(function (resp) {
            _this.MedByPharmaArray = resp.data.medicinePojoList;
            console.log("drugCompundID:", _this.selecteddrugcompundID);
            if (_this.drugcompundID.length) {
            }
            else {
                _this.drugcompundID = _this.selecteddrugcompundID;
            }
            // if (this.MedByPharmaArray.length > 0) {
            //   this.drugcompundID = this.MedByPharmaArray[0].drugcompundID;
            // } else {
            //   this.drugcompundID = "";
            // }
            // this.getMedByPharmaID(this.selecteddrugcompundID);
        });
    };
    EditPharmaAppointmentPage.prototype.getMedByPharmaID = function (medByPharma) {
        this.drugcompundID = medByPharma;
        // this.getAllDoctors();
    };
    /// get all doctors////
    // getAllDoctors() {
    //   var data = {
    //     FcLocationMapID: this.fcLocationMapID,
    //     fclProviderMapID: this.medicalStoreID
    //   };
    //   this.api
    //     .wsPostHeaderBackground(APIName.getAllDoctorByLocationAndspeciality, data)
    //     .then((resp: any) => {
    //       this.doctorArray = resp.data;
    //       if (this.doctorArray.length > 0) {
    //         this.fclProviderMapID = this.doctorArray[0].fclProviderMapID;
    //       } else {
    //         this.fclProviderMapID = "";
    //       }
    //     });
    // }
    // getdoctorid(doctorid: any) {
    //   this.fclProviderMapID = doctorid;
    // }
    /// get visit type////
    EditPharmaAppointmentPage.prototype.visittype = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentType, "")
            .then(function (resp) {
            _this.visittypeArray = resp.data;
            if (_this.visittypeArray.length > 0) {
                _this.visittypeId = _this.visittypeArray[0].key;
            }
            else {
                _this.visittypeId = "";
            }
        });
    };
    EditPharmaAppointmentPage.prototype.getvisittypeid = function (visit) {
        this.visittypeId = visit;
    };
    /// visit reason////
    EditPharmaAppointmentPage.prototype.visitreason = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentReason, "")
            .then(function (resp) {
            _this.visitreasonArray = resp.data;
            if (_this.visitreasonArray.length > 0) {
                _this.visitreasonId = _this.visitreasonArray[0].key;
            }
            else {
                _this.visitreasonId = "";
            }
        });
    };
    EditPharmaAppointmentPage.prototype.getvisitreasonid = function (visit) {
        this.visitreasonId = visit;
    };
    ///available schedule////
    // availableschedule = [
    //   {
    //     time: " Mon: 12:00 pm to 4:00 pm ",
    //     time1: " Wed: 12:00 pm to 4:00 pm "
    //   },
    //   {
    //     time: " Fri: 06:00 pm to 08:00 pm ",
    //     time1: "Sat: 06:00 pm to 08:00 pm"
    //   }
    // ];
    EditPharmaAppointmentPage.prototype.callAddAppointmentApi = function () {
        var _this = this;
        if (this.facilityCenterID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select facility", this.toastCtrl);
            return;
        }
        if (this.fcLocationMapID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Location", this.toastCtrl);
            return;
        }
        if (this.fclProviderMapID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Speciality", this.toastCtrl);
            return;
        }
        if (this.drugcompundID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Medicine", this.toastCtrl);
            return;
        }
        // if (this.fclProviderMapID.length == 0) {
        //   showToast("Please select Doctor", this.toastCtrl);
        //   return;
        // }
        if (this.selectedpatAppDate.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment date", this.toastCtrl);
            return;
        }
        if (this.selectedpatAppTime.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment time", this.toastCtrl);
            return;
        }
        // if (this.patAppTimeTo.length == 0) {
        //   showToast("Please select Appointment end time", this.toastCtrl);
        //   return;
        // }
        if (this.visittypeId.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select type Of Visit", this.toastCtrl);
            return;
        }
        // if (this.visitreasonId.length == 0) {
        //   showToast("Please select Reason to Visit", this.toastCtrl);
        //   return;
        // }
        if (this.selectedpatAppDescription.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please add Medicine detail", this.toastCtrl);
            return;
        }
        var date = new Date(this.selectedpatAppDate);
        var datetopass = date.getTime();
        console.log("datebefore", "" + datetopass);
        var timefrom = new Date(this.selectedpatAppTime);
        var timefromtopass = timefrom.getTime();
        // let date = new Date(
        //   this.selectedpatAppDate + " " + this.selectedpatAppTime
        // );
        // let datetopass = date.getTime();
        // var date1 = date.getUTCDate();
        // console.log("datebefore", "" + datetopass);
        // let time = new Date(
        //   this.selectedpatAppDate + " " + this.selectedpatAppTime
        // );
        // let timepass = time.getTime();
        // console.log("timebefrm", "" + timepass);
        // let drugname = this.MedByPharmaArray.find(
        //   item => item.drugcompundID === this.drugcompundID
        // ).medicineName;
        var data = JSON.stringify({
            apptdate: datetopass,
            appttime: timefromtopass,
            apptid: this.apptID,
            medstorename: this.selectedMedStoreName,
            providerID: this.selectedProviderID,
            status: this.selectedStatus,
            fclProviderMapID: { fclProviderMapID: this.fclProviderMapID },
            meddetail: this.selectedpatAppDescription,
            medname: this.drugcompundID,
            // providerID: "511",
            visittype: this.visittypeId.trim()
        });
        console.log(data);
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getmedicineboughtlist, data)
            .then(function (resp) {
            if (resp.status === 500) {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("" + resp.message, _this.toastCtrl);
                _this.navCtrl.pop();
            }
        });
        // this.makePayment();
        // this.makePaymentPlugin();
    };
    ///to convert date and time////
    EditPharmaAppointmentPage.prototype.changeDateToString = function (date, format) {
        // this.changeStringToDate(this.selectedDate +' '+this.TimeFrom)
        var date1 = date.toISOString();
        // var date2 = this.changeStringToDate(date1,s)
        console.log("dateString=>", date1);
    };
    ///to convert date and time////
    EditPharmaAppointmentPage.prototype.changeStringToDate = function (dateString, format //date
    ) {
        if (format) {
            //19800000
            //
            return this.changeDateFormat(new Date(new Date(dateString).getTime() -
                new Date(dateString).getTimezoneOffset() * 60000), format);
        }
        else {
            return new Date(new Date(dateString).getTime() -
                new Date(dateString).getTimezoneOffset() * 60000).toISOString();
        }
    };
    EditPharmaAppointmentPage.prototype.changeDateFormat = function (date, formate //date to any format
    ) {
        var latest_date = this.datepipe.transform(date, formate);
        return latest_date;
    };
    EditPharmaAppointmentPage.prototype.makePaymentPlugin = function () {
        var self = this;
        var min = 0;
        var max = 9999;
        var ORDER_ID = Math.floor(Math.random() * (+max - +min)) + +min;
        var CUST_ID = Math.floor(Math.random() * (+max + -min)) + +min;
        this.orderID = ORDER_ID;
        this.custID = CUST_ID;
        this.txnAmount = this.fees;
        this.paramarray["ORDER_ID"] = this.orderID; //unique OrderId for every request
        this.paramarray["CUST_ID"] = this.custID;
        this.paramarray["TXN_AMOUNT"] = this.fees;
        this.paramarray["CALLBACK_URL"] =
            "https://pguat.paytm.com/paytmchecksum/paytmCallback.jsp"; //Provided by Paytm
        // var checksum =  checksum_lib.genchecksum(paytmParams, "!29FEIkWuEqB@GEG");
        checksum_lib.genchecksumbystring(this.paramarray, paytm_config.MERCHANT_KEY, function (err, checksum) {
            console.log(checksum);
            console.log(JSON.stringify(checksum));
            // callback(checksum);
            self.pay(checksum, self.orderID.toString());
        });
    };
    EditPharmaAppointmentPage.prototype.pay = function (checksum, orderID) {
        var isValidChecksum = checksum_lib.verifychecksumbystring(this.paramarray, paytm_config.MERCHANT_KEY, checksum);
        if (isValidChecksum) {
            console.log("Checksum Matched");
        }
        else {
            console.log("Checksum Mismatched");
        }
        this.paramarray["CALLBACK_URL"] =
            "https://securegw-stage.paytm.in/theia/paytmCallback?ORDER_ID=" + orderID;
        this.paramarray["CHECKSUMHASH"] = checksum;
        window.paytm.startPayment(this.paramarray, this.successCallback, this.failureCallback);
    };
    EditPharmaAppointmentPage.prototype.makePayment = function () {
        console.log("make PAyment");
        var min = 0;
        var max = 9999;
        var ORDER_ID = Math.floor(Math.random() * (+max - +min)) + +min;
        var CUST_ID = Math.floor(Math.random() * (+max + -min)) + +min;
        this.orderID = ORDER_ID;
        this.custID = CUST_ID;
        this.txnAmount = this.fees;
        // this.navCtrl.loadUrl(url, { openExternal:true });
        var options = {
            zoom: "no",
            fullscreen: "yes",
            hidenavigationbuttons: "no",
            toolbar: "no",
            hideurlbar: "yes"
        };
        var browser = this.iab.create("http://client.attuneinfocom.com/paytm_payment_demo/pgRedirect.php?ORDER_ID=" +
            this.orderID +
            "&CUST_ID=" +
            this.custID +
            "&TXN_AMOUNT=" +
            this.txnAmount +
            "&redirect_url=ionic", "_blank", {
            toolbar: "no",
            hideurlbar: "yes",
            fullscreen: "yes",
            location: "no",
            options: options
        });
        browser.on("loadstop").subscribe(function (event) {
            console.log("Stopeed");
            browser.insertCSS({ code: "toolbar{display: none;" });
        });
        // window.open(
        //   "http://client.attuneinfocom.com/paytm_payment_demo/pgRedirect.php?ORDER_ID=" +
        //     this.orderID +
        //     "&CUST_ID=" +
        //     this.custID +
        //     "&TXN_AMOUNT=" +
        //     this.txnAmount +
        //     "&redirect_url=ionic",
        //   "_self"
        // );
    };
    EditPharmaAppointmentPage.prototype.successCallback = function (response) {
        if (response.STATUS == "TXN_SUCCESS") {
            var txn_id = response.TXNID;
            var paymentmode = response.PAYMENTMODE;
            // other details and function after payment transaction
            console.log("payment succes ");
        }
        else {
            // error code will be available in RESPCODE
            // error list page https://docs.google.com/spreadsheets/d/1h63fSrAmEml3CYV-vBdHNErxjJjg8-YBSpNyZby6kkQ/edit#gid=2058248999
            console.log("Transaction Failed for reason " + response.RESPMSG);
            console.log(response);
            // console.log(response.stringify())
            // showToast
        }
    };
    EditPharmaAppointmentPage.prototype.failureCallback = function (error) {
        // error code will be available in RESCODE
        // error list page https://docs.google.com/spreadsheets/d/1h63fSrAmEml3CYV-vBdHNErxjJjg8-YBSpNyZby6kkQ/edit#gid=2058248999
        console.log("Transaction Failed for reason " + error.RESPMSG);
        console.log(error);
        // console.log(error.stringify())
    };
    /// view and get appointment api////
    EditPharmaAppointmentPage.prototype.getviewgetpharmaappointment = function () {
        var _this = this;
        var data1 = {
            apptid: this.apptID
            // patAppointmentID: 107
        };
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getpharmaview, data1).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("RESPONNSE:--- " + JSON.stringify(resp));
                _this.viewgetappointmentArray = resp.data;
                // var obj = JSON.stringify(resp);
                // this.specialityArray = JSON.parse(obj);
                // this.specialityArray=resp.data.filter(item => item.specialityName === 'Skin')
                console.log("successsssssss=> apointmentpage", _this.viewgetappointmentArray);
                _this.getallFacilities();
                _this.selectedfacilityCenterID = resp.data.facilityCenterID;
                console.log("centered ID", _this.selectedfacilityCenterID);
                _this.selectedfcLocationMapID = resp.data.fcLocationMapID;
                _this.selectedfclProviderMapID = resp.data.fclProviderMapID;
                _this.selectedvisittypeId = resp.data.visittype;
                _this.selecteddrugcompundID = resp.data.medname;
                _this.selectedMedStoreName = resp.data.medstorename;
                _this.selectedProviderID = resp.data.providerID;
                _this.selectedStatus = resp.data.status;
                console.log("SelectedVisiteType", _this.selectedvisittypeId);
                var timediff = resp.data.appttime - 19800000;
                // let timediffTo: number = resp.data.patAppTimeTo - 19800000;
                _this.selectedpatAppDate = _this.changeStringToDate(new Date(resp.data.apptdate).toISOString());
                console.log("datettttttttttttttttttt", _this.selectedpatAppDate);
                _this.selectedpatAppTime = _this.changeStringToDate(new Date(timediff).toISOString());
                console.log("time", _this.selectedpatAppTime);
                // this.selectedpatAppTimeTo = this.changeStringToDate(
                //   new Date(timediffTo).toISOString()
                // );
                // console.log("datettttttttttttttttttt", this.selectedpatAppTimeTo);
                // this.selectedpatAppTime = resp.data.apptdate
                //   ? this.changeStringToDate(
                //       resp.data.apptdate + " " + resp.data.appttime
                //     )
                //   : "";
                _this.selectedpatAppDescription = resp.data.meddetail;
            }
        });
    };
    EditPharmaAppointmentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-editpharmaappointment",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/editpharmaappointment/editpharmaappointment.html"*/'<!--\n  Generated template for the AddAppointmentPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Edit Pharma Appointment</ion-title>\n    <ion-buttons left>\n      <button ion-button icon-only>\n        <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <div class="cmn-inr-form">\n    <ion-list>\n      <ion-item>\n        <ion-label color="" floating>Facility</ion-label>\n        <ion-select\n          [(ngModel)]="facilityCenterID"\n          [disabled]="facilitiesArray.length == 0"\n          (ionChange)="getFacilityid($event)"\n        >\n          <ion-option\n            *ngFor="let category of facilitiesArray; let idx = index"\n            [value]="category.facilityCenterID"\n            selected="{{ (idx == 0).facilityCenterID }}"\n            >{{ category.facilityCenterName }}</ion-option\n          >\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="" floating>Location</ion-label>\n        <ion-select\n          [disabled]="locationArray.length == 0"\n          [(ngModel)]="fcLocationMapID"\n          (ionChange)="getlocationid($event)"\n        >\n          <ion-option\n            *ngFor="let location of locationArray; let idx = index"\n            [value]="location.fcLocationMapID"\n            selected="{{ (idx == 0).fcLocationMapID }}"\n            >{{ location.fcLocationName }}</ion-option\n          >\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="" floating>Chemist</ion-label>\n        <ion-select\n          [disabled]="MedicalStoreArray.length == 0"\n          [(ngModel)]="fclProviderMapID"\n          (ionChange)="getmedicalStoreID($event)"\n        >\n          <ion-option\n            *ngFor="let medicalStore of MedicalStoreArray; let idx = index"\n            [value]="medicalStore.fclProviderMapID"\n            selected="{{ (idx == 0).fclProviderMapID }}"\n            >{{ medicalStore.providerName }}</ion-option\n          >\n        </ion-select>\n      </ion-item>\n\n      <!-- <ion-item>\n          <ion-label color="" floating>List of Doctors </ion-label>\n          <ion-select\n            [(ngModel)]="fclProviderMapID"\n            [disabled]="doctorArray.length == 0"\n            (ionChange)="getdoctorid($event)"\n          >\n            <ion-option\n              *ngFor="let doctor of doctorArray; let idx = index"\n              [value]="doctor.fclProviderMapID"\n              selected="{{ (idx == 0).fclProviderMapID }}"\n              >{{ doctor.providerName }}</ion-option\n            >\n          </ion-select>\n        </ion-item> -->\n      <!-- new  -->\n      <!-- <ion-item>\n          <ion-label floating> Fees of selected Doctor </ion-label>\n          <ion-input\n            type="number"\n            name="feesText"\n            [(ngModel)]="fees"\n            disabled\n          ></ion-input>\n  \n           <div class="col-md-5">\n                <input type="number" class="form-control input-height" required  [(ngModel)]="feesResponseModel" #feesResponseModelText="ngModel" name="feesResponseModelText" disabled>\n            </div>\n        </ion-item> -->\n\n      <ion-item>\n        <ion-label color="" floating>Date Of Appointment </ion-label>\n        <ion-datetime\n          displayFormat="DD MMMM YYYY"\n          pickerFormat="DD MMMM YYYY"\n          [(ngModel)]="selectedpatAppDate"\n        ></ion-datetime>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="" floating>Time Of Appointment</ion-label>\n        <ion-datetime\n          displayFormat="hh:mm a"\n          pickerFormat="hh:mm a"\n          [(ngModel)]="selectedpatAppTime"\n        ></ion-datetime>\n      </ion-item>\n\n      <!-- <ion-item>\n          <ion-label color="" floating>Time To</ion-label>\n          <ion-datetime\n            displayFormat="hh:mm a"\n            pickerFormat="hh:mm a"\n            [(ngModel)]="patAppTimeTo"\n          ></ion-datetime>\n        </ion-item> -->\n\n      <ion-item>\n        <ion-label color="" floating>Medicine Required</ion-label>\n        <ion-select\n          [(ngModel)]="selecteddrugcompundID"\n          (ionChange)="getMedByPharmaID($event)"\n        >\n          <ion-option\n            *ngFor="let pharmaID of MedByPharmaArray; let idx = index"\n            [value]="pharmaID.medicineName"\n            selected="{{ (idx == 0).medicineName }}"\n            >{{ pharmaID.medicineName }}</ion-option\n          >\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="" floating>Visit Type</ion-label>\n        <ion-select [(ngModel)]="selectedvisittypeId">\n          <ion-option>\n            Visit\n          </ion-option>\n          <ion-option>\n            Home\n          </ion-option>\n        </ion-select>\n\n        <!-- <ion-select\n            [(ngModel)]="visittypeId"\n            (ionChange)="getvisittypeid($event)"\n          >\n            <ion-option\n              *ngFor="let visit of visittypeArray; let idx = index"\n              [value]="visit.key"\n              selected="{{ (idx == 0).key }}"\n              >{{ visit.value }}</ion-option\n            >\n          </ion-select> -->\n      </ion-item>\n\n      <!-- <ion-item>\n          <ion-label color="" floating>Medicine Detail</ion-label>\n          <ion-select\n            [(ngModel)]="visitreasonId"\n            [disabled]="visitreasonArray.length == 0"\n            (ionChange)="getvisitreasonid($event)"\n          >\n            <ion-option\n              *ngFor="let reason of visitreasonArray; let idx = index"\n              [value]="reason.key"\n              selected="{{ (idx == 0).key }}"\n              >{{ reason.value }}</ion-option\n            >\n          </ion-select>\n        </ion-item> -->\n\n      <ion-item>\n        <ion-label color="" floating>Medicine Detail</ion-label>\n\n        <ion-input\n          type="text"\n          name="Desciption"\n          [(ngModel)]="selectedpatAppDescription"\n        ></ion-input>\n      </ion-item>\n\n      <div class="cmn-ftr-btn">\n        <button\n          (click)="callAddAppointmentApi()"\n          ion-button\n          class="cmn-btn-styl prpl-btn"\n          block\n        >\n          Edit\n        </button>\n      </div>\n    </ion-list>\n  </div>\n\n  <!-- <div class="add-action">\n              <button ion-button class="add-round"><img src="../assets/imgs/plus-ic.png"></button>\n            </div> -->\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/editpharmaappointment/editpharmaappointment.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_4__angular_common__["d" /* DatePipe */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_in_app_browser__["a" /* InAppBrowser */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], EditPharmaAppointmentPage);
    return EditPharmaAppointmentPage;
}());

//# sourceMappingURL=editpharmaappointment.js.map

/***/ }),

/***/ 299:
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 299;

/***/ }),

/***/ 3:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ApiProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common_http__ = __webpack_require__(172);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_network__ = __webpack_require__(177);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ApiProvider = /** @class */ (function () {
    function ApiProvider(http, toastCtrl, alertCtrl, loadingCtrl, network) {
        this.http = http;
        this.toastCtrl = toastCtrl;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.network = network;
        this.checkConnectionWatch();
    }
    // return this.http.get("api/foobar")
    // .map(response => response.json())
    // .retry(2)
    // .subscribe(onNext,
    //            error =>
    //            console.log("An error occurred when requesting api/foobar.", error));
    // wsGet(endpoint: string, params?: any, reqOpts?: any) {
    //   if (!reqOpts) {
    //     reqOpts = {
    //       params: new HttpParams()
    //     };
    //   }
    //   // Support easy query params for GET requests
    //   if (params) {
    //     reqOpts.params = new HttpParams();
    //     for (let k in params) {
    //       reqOpts.params = reqOpts.params.set(k, params[k]);
    //     }
    //   }
    //   return this.http.get(endpoint, reqOpts);
    // }
    ApiProvider.prototype.wsGet = function (endpoint, body) {
        var _this = this;
        // this.checkConnectionWatch();
        Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["i" /* showProgressbar */])(this.loadingCtrl);
        var strConcate = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["k" /* username */]) + ":" + localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["d" /* password */]);
        var strBase64 = "Basic " + btoa(strConcate);
        console.log("strConcate" + " = " + strConcate);
        var httpOptions = {
            // headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' })
            headers: new __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["d" /* HttpHeaders */]({
                "Content-Type": "application/json",
                Authorization: strBase64
            }),
            body: body
        };
        return (this.http
            .request("GET", endpoint, httpOptions)
            .toPromise()
            .then(function (resp) {
            console.log("wsGetHeader : success0 >>", resp);
            // If the API returned a successful response, mark the user as logged in
            Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["b" /* hideProgressbar */])(_this.loadingCtrl);
            return resp;
        })
            .catch(function (err) {
            if (err instanceof __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["c" /* HttpErrorResponse */]) {
                if (err.status === 401) {
                    Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["b" /* hideProgressbar */])(_this.loadingCtrl);
                    Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["h" /* showAlert */])(err.message, _this.alertCtrl, __WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["c" /* networkAlert */], 1).then(function (result) { });
                }
            }
        }));
    };
    ApiProvider.prototype.wsGetBG = function (endpoint, body) {
        var _this = this;
        // this.checkConnectionWatch();
        // showProgressbar(this.loadingCtrl);
        var strConcate = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["k" /* username */]) + ":" + localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["d" /* password */]);
        var strBase64 = "Basic " + btoa(strConcate);
        console.log("strConcate" + " = " + strConcate);
        var httpOptions = {
            // headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' })
            headers: new __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["d" /* HttpHeaders */]({
                "Content-Type": "application/json",
                Authorization: strBase64
            }),
            body: body
        };
        return (this.http
            .request("GET", endpoint, httpOptions)
            .toPromise()
            .then(function (resp) {
            console.log("wsGetHeader : success0 >>", resp);
            // If the API returned a successful response, mark the user as logged in
            // hideProgressbar(this.loadingCtrl);
            return resp;
        })
            .catch(function (err) {
            if (err instanceof __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["c" /* HttpErrorResponse */]) {
                if (err.status === 401) {
                    // hideProgressbar(this.loadingCtrl);
                    Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["h" /* showAlert */])(err.message, _this.alertCtrl, __WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["c" /* networkAlert */], 1).then(function (result) { });
                }
            }
        }));
    };
    ApiProvider.prototype.wsPost = function (endpoint, body) {
        var _this = this;
        // this.checkConnectionWatch();
        // return this.http.post(, body, reqOpts);
        Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["i" /* showProgressbar */])(this.loadingCtrl);
        var httpOptions = {
            headers: new __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["d" /* HttpHeaders */]({ "Content-Type": "application/json" })
        };
        var seq = this.http.post(endpoint, body, httpOptions);
        seq.subscribe(function (resp) {
            Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["b" /* hideProgressbar */])(_this.loadingCtrl);
            return seq;
        }, function (err) {
            Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["b" /* hideProgressbar */])(_this.loadingCtrl);
            Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["h" /* showAlert */])(err.error.message, _this.alertCtrl, __WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["c" /* networkAlert */], 1).then(function (result) {
                // if(result) {
                //   console.log('trueAkki:--- '+result);
                //   // do something
                // }
                // else{
                //   console.log('falseAkki:--- '+result);
                // }
            });
            return false;
        });
        return seq;
        // return this.http.post(this.url + '/' + endpoint, body,httpOptions);
    };
    ApiProvider.prototype.wsPostHeaderBackground = function (endpoint, body) {
        var _this = this;
        // this.checkConnectionWatch();
        var strConcate = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["k" /* username */]) + ":" + localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["d" /* password */]);
        var strBase64 = "Basic " + btoa(strConcate);
        console.log("strConcate" + " = " + strConcate);
        var httpOptions = {
            // headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' })
            headers: new __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["d" /* HttpHeaders */]({
                "Content-Type": "application/json",
                Authorization: strBase64
            })
        };
        return this.http
            .post(endpoint, body, httpOptions)
            .toPromise()
            .then(function (resp) {
            console.log("wsPostHeaderBackground : success0 >>", resp);
            return resp;
        })
            .catch(function (err) {
            if (err instanceof __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["c" /* HttpErrorResponse */]) {
                if (err.status === 401) {
                    console.log("Aditya");
                }
                if (err.status === 500) {
                    Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["j" /* showToast */])(err.error.message, _this.toastCtrl);
                    console.log("Error===*******", err.error.message);
                    return err;
                }
            }
        });
    };
    ApiProvider.prototype.wsPostMutlipartHeader = function (endpoint, formData) {
        var _this = this;
        // this.checkConnectionWatch();
        Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["i" /* showProgressbar */])(this.loadingCtrl);
        var strConcate = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["k" /* username */]) + ":" + localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["d" /* password */]);
        var strBase64 = "Basic " + btoa(strConcate);
        console.log("strConcate" + " = " + strConcate);
        var httpOptions = {
            headers: new __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["d" /* HttpHeaders */]({ Authorization: strBase64 }),
            body: formData
        };
        return this.http
            .request("POST", endpoint, httpOptions)
            .toPromise()
            .then(function (resp) {
            console.log("wsPostHeader : success >> ", resp);
            // If the API returned a successful response, mark the user as logged in
            Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["b" /* hideProgressbar */])(_this.loadingCtrl);
            return resp;
        })
            .catch(function (err) {
            console.log("wsPostHeader : failure >> ", err);
            Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["b" /* hideProgressbar */])(_this.loadingCtrl);
            if (err instanceof __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["c" /* HttpErrorResponse */]) {
                if (err.status === 401) {
                    console.log("Aditya");
                }
            }
            return false;
        });
    };
    ApiProvider.prototype.wsPostHeader = function (endpoint, body) {
        var _this = this;
        // this.checkConnectionWatch();
        Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["i" /* showProgressbar */])(this.loadingCtrl);
        var strConcate = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["k" /* username */]) + ":" + localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["d" /* password */]);
        var strBase64 = "Basic " + btoa(strConcate);
        console.log("strConcate" + " = " + strConcate);
        var httpOptions = {
            // headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' })
            headers: new __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["d" /* HttpHeaders */]({
                "Content-Type": "application/json",
                Authorization: strBase64
            }),
            body: body
        };
        return (this.http
            .request("POST", endpoint, httpOptions)
            .toPromise()
            .then(function (resp) {
            console.log("wsPostHeader : success0 >>", resp);
            // If the API returned a successful response, mark the user as logged in
            Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["b" /* hideProgressbar */])(_this.loadingCtrl);
            return resp;
        })
            .catch(function (err) {
            if (err instanceof __WEBPACK_IMPORTED_MODULE_0__angular_common_http__["c" /* HttpErrorResponse */]) {
                console.log("err.message = " + err.error.message);
                if (err.status === 401) {
                    Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["b" /* hideProgressbar */])(_this.loadingCtrl);
                    Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["h" /* showAlert */])(err.message, _this.alertCtrl, __WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["c" /* networkAlert */], 1).then(function (result) { });
                }
                else {
                    if (err.status === 500) {
                        Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["j" /* showToast */])(err.error.message, _this.toastCtrl);
                        Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["b" /* hideProgressbar */])(_this.loadingCtrl);
                        return err;
                        // showAlert(err.error.message,this.alertCtrl,networkAlert,1).then((result) => {
                        //  });
                    }
                }
            }
        }));
    };
    ApiProvider.prototype.checkConnectionWatch = function () {
        var _this = this;
        var networkState = this.network.type;
        if (networkState == "none") {
            this.toastCtrl
                .create({
                message: "please on your network connection",
                duration: 3000
            })
                .present();
        }
        console.log("in Connection Chck : " + this.network.type);
        this.network.onConnect().subscribe(function () {
            _this.toastCtrl
                .create({
                message: "NETWORK CONNECTED",
                duration: 3000
            })
                .present();
        });
        this.network.onDisconnect().subscribe(function () {
            _this.toastCtrl
                .create({
                message: "NETWORK DISCONNECTED",
                duration: 3000
            })
                .present();
        });
        this.network.onDisconnect().subscribe(function () {
            _this.toastCtrl
                .create({
                message: "please on your network connection",
                duration: 3000
            })
                .present();
        });
    };
    /*
      wsPostHeader(endpoint: string, body: any) {
        
        showProgressbar(this.loadingCtrl);
    
        let strConcate = localStorage.getItem(username) + ':' + localStorage.getItem(password)
        let strBase64 : string = 'Basic ' + btoa(strConcate)
        const httpOptions = {
          // headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' })
          headers: new HttpHeaders({ 'Content-Type': 'application/json','Authorization':strBase64 })
        };
        // return this.http.post(this.url + '/' + endpoint, body,httpOptions);
        let seq = this.http.post(endpoint, body,httpOptions);
        seq.subscribe((resp: any) => {
          console.log('wsPostHeader : success0 >>',resp);
          // If the API returned a successful response, mark the user as logged in
          hideProgressbar(this.loadingCtrl);
              return seq;
          
        }, (err) => {
          console.log('wsPostHeader : err >> ',err);
          hideProgressbar(this.loadingCtrl);
          showAlert(err.error.message,this.alertCtrl,networkAlert,1).then((result) => {
            // if(result){
            //   console.log('trueAkki:--- '+result);
            //   // do something
            // }
            // else{
            //   console.log('falseAkki:--- '+result);
            // }
          });
          return false
        });
        return seq;
      }
      wsPostHeaderBackground(endpoint: string, body: any) {
        
        //showProgressbar(this.loadingCtrl);
    
        let strConcate = localStorage.getItem(username) + ':' + localStorage.getItem(password)
        let strBase64 : string = 'Basic ' + btoa(strConcate)
        const httpOptions = {
          // headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' })
          headers: new HttpHeaders({ 'Content-Type': 'application/json','Authorization':strBase64 })
        };
        // return this.http.post(this.url + '/' + endpoint, body,httpOptions);
        let seq = this.http.post(endpoint, body,httpOptions);
        seq.subscribe((resp: any) => {
          console.log('wsPostHeader : success0 >>',resp);
              return seq;
          
        }, (err) => {
          console.log('wsPostHeader : err >> ',err);
          showAlert(err.error.message,this.alertCtrl,networkAlert,1).then((result) => {
          
            
          });
          return false
        });
        return seq;
      }
      */
    ApiProvider.prototype.uploadFile = function (endpoint, imageURI, options, transfer) {
        var _this = this;
        // this.checkConnectionWatch();
        Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["i" /* showProgressbar */])(this.loadingCtrl);
        var fileTransfer = transfer.create();
        return fileTransfer.upload(imageURI, endpoint, options).then(function (resp) {
            Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["b" /* hideProgressbar */])(_this.loadingCtrl);
            console.log("uploadFile >> ", JSON.stringify(resp));
            return resp;
        }, function (err) {
            console.log("uploadFile >> ", err);
            Object(__WEBPACK_IMPORTED_MODULE_2__commonfunction_commonfunction__["b" /* hideProgressbar */])(_this.loadingCtrl);
            return err;
        });
    };
    ApiProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_common_http__["a" /* HttpClient */],
            __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_3_ionic_angular__["i" /* LoadingController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_network__["a" /* Network */]])
    ], ApiProvider);
    return ApiProvider;
}());

//# sourceMappingURL=api.js.map

/***/ }),

/***/ 343:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"../pages/addpinlocation/addpinlocation.module": [
		987,
		109
	],
	"../pages/addreport/addreport.module": [
		988,
		108
	],
	"../pages/addresstopinmap/addresstopinmap.module": [
		989,
		107
	],
	"../pages/commonpages/changepassword/changepassword.module": [
		990,
		106
	],
	"../pages/commonpages/forgotpassword/forgotpassword.module": [
		991,
		105
	],
	"../pages/commonpages/login/login.module": [
		992,
		104
	],
	"../pages/commonpages/signup/signup.module": [
		993,
		103
	],
	"../pages/deliverables/deliverables.module": [
		994,
		102
	],
	"../pages/doctor/dash-board-for-doctor/dash-board-for-doctor.module": [
		995,
		101
	],
	"../pages/doctor/doctor-add-or-edit-visit/doctor-add-or-edit-visit.module": [
		1063,
		100
	],
	"../pages/doctor/doctorprofile/doctorprofile.module": [
		996,
		99
	],
	"../pages/doctor/doctorprofiledemographic/doctorprofiledemographic.module": [
		1064,
		98
	],
	"../pages/doctor/doctorprofiledocument/doctorprofiledocument.module": [
		1065,
		97
	],
	"../pages/doctor/doctorprofileextended/doctorprofileextended.module": [
		997,
		96
	],
	"../pages/doctor/doctorprofilepersonal/doctorprofilepersonal.module": [
		1066,
		95
	],
	"../pages/doctor/doctorprofileprofessionalinfo/doctorprofileprofessionalinfo.module": [
		998,
		94
	],
	"../pages/doctor/doctorvisitlist/doctorvisitlist.module": [
		999,
		93
	],
	"../pages/doctor/doctorvisitlistview/doctorvisitlistview.module": [
		1000,
		92
	],
	"../pages/doctor/transactionhistory/transactionhistory.module": [
		1001,
		91
	],
	"../pages/editemedicineinventory/editemedicineinventory.module": [
		1002,
		90
	],
	"../pages/hospital/dash-board-for-hospital/dash-board-for-hospital.module": [
		1003,
		89
	],
	"../pages/hospital/hospitalbasicdetail/hospitalbasicdetail.module": [
		1004,
		88
	],
	"../pages/hospital/hospitalchangepassword/hospitalchangepassword.module": [
		1005,
		87
	],
	"../pages/hospital/hospitalclaimedinsuranceincomingapporvallist/hospitalclaimedinsuranceincomingapporvallist.module": [
		1067,
		86
	],
	"../pages/hospital/hospitalclaimedinsuranceincomingapporvallistview/hospitalclaimedinsuranceincomingapporvallistview.module": [
		1006,
		85
	],
	"../pages/hospital/hospitalpatientadmitlist/hospitalpatientadmitlist.module": [
		1068,
		84
	],
	"../pages/hospital/hospitalprofile/hospitalprofile.module": [
		1007,
		83
	],
	"../pages/hospital/hospitalprofiledemographic/hospitalprofiledemographic.module": [
		1008,
		82
	],
	"../pages/hospital/hospitalprofileprofessional/hospitalprofileprofessional.module": [
		1009,
		81
	],
	"../pages/hospital/patientadmitform/patientadmitform.module": [
		1010,
		80
	],
	"../pages/insurance/addplan/addplan.module": [
		1011,
		79
	],
	"../pages/insurance/dash-board-for-insurance/dash-board-for-insurance.module": [
		1012,
		78
	],
	"../pages/insurance/insurancebasicdetail/insurancebasicdetail.module": [
		1013,
		77
	],
	"../pages/insurance/insurancechangepassword/insurancechangepassword.module": [
		1014,
		76
	],
	"../pages/insurance/insuranceincomingclaimlist/insuranceincomingclaimlist.module": [
		1069,
		75
	],
	"../pages/insurance/insuranceincomingclaimlistview/insuranceincomingclaimlistview.module": [
		1015,
		74
	],
	"../pages/insurance/insuranceplanlist/insuranceplanlist.module": [
		1070,
		73
	],
	"../pages/insurance/insuranceplanlistdetailview/insuranceplanlistdetailview.module": [
		1016,
		72
	],
	"../pages/insurance/insuranceprofile/insuranceprofile.module": [
		1017,
		71
	],
	"../pages/insurance/insuranceprofiledemographic/insuranceprofiledemographic.module": [
		1018,
		70
	],
	"../pages/insurance/insuranceprofileprofessional/insuranceprofileprofessional.module": [
		1019,
		69
	],
	"../pages/laboratory/addnewreport/addnewreport.module": [
		1020,
		68
	],
	"../pages/laboratory/addreportfees/addreportfees.module": [
		1021,
		67
	],
	"../pages/laboratory/demographiclab/demographiclab.module": [
		1022,
		1
	],
	"../pages/laboratory/editreportfees/editreportfees.module": [
		1023,
		66
	],
	"../pages/laboratory/labaddreport/labaddreport.module": [
		1071,
		65
	],
	"../pages/laboratory/labbookinglist/labbookinglist.module": [
		1024,
		64
	],
	"../pages/laboratory/labincomingappoinment/labincomingappoinment.module": [
		1025,
		63
	],
	"../pages/laboratory/laboratorviewappoinment/laboratorviewappoinment.module": [
		1072,
		62
	],
	"../pages/laboratory/laboratorydashboard/laboratorydashboard.module": [
		1026,
		61
	],
	"../pages/laboratory/laboratoryprofessionalinformation/laboratoryprofessionalinformation.module": [
		1027,
		0
	],
	"../pages/laboratory/labprofile/labprofile.module": [
		1028,
		60
	],
	"../pages/laboratory/labprofiledemographic/labprofiledemographic.module": [
		1073,
		59
	],
	"../pages/laboratory/labprofiledocument/labprofiledocument.module": [
		1074,
		58
	],
	"../pages/laboratory/labprofilelaboratory/labprofilelaboratory.module": [
		1075,
		57
	],
	"../pages/laboratory/labprofileprofessionalinfo/labprofileprofessionalinfo.module": [
		1076,
		56
	],
	"../pages/laboratory/labreport/labreport.module": [
		1029,
		55
	],
	"../pages/laboratory/labtransactionhistory/labtransactionhistory.module": [
		1030,
		54
	],
	"../pages/laboratory/labviewreport/labviewreport.module": [
		1031,
		53
	],
	"../pages/laboratory/reportfeeslist/reportfeeslist.module": [
		1032,
		52
	],
	"../pages/listmedicineinventory/listmedicineinventory.module": [
		1033,
		51
	],
	"../pages/mapdemo/mapdemo.module": [
		1034,
		50
	],
	"../pages/medicalstore/dash-board-for-medicalstore/dash-board-for-medicalstore.module": [
		1035,
		49
	],
	"../pages/medicalstore/incomingmedicinerequiredlist/incomingmedicinerequiredlist.module": [
		1077,
		48
	],
	"../pages/medicalstore/incomingmedicinerequiredlistview/incomingmedicinerequiredlistview.module": [
		1036,
		47
	],
	"../pages/medicalstore/medicalchangepassword/medicalchangepassword.module": [
		1037,
		46
	],
	"../pages/medicalstore/medicalprofile/medicalprofile.module": [
		1038,
		45
	],
	"../pages/medicalstore/medicalprofilebasicdetail/medicalprofilebasicdetail.module": [
		1039,
		44
	],
	"../pages/medicalstore/medicalprofiledemographic/medicalprofiledemographic.module": [
		1040,
		43
	],
	"../pages/medicalstore/medicalprofileprofessional/medicalprofileprofessional.module": [
		1041,
		42
	],
	"../pages/medicalstore/medicalstoreprofiledocument/medicalstoreprofiledocument.module": [
		1078,
		41
	],
	"../pages/medicalstore/tracking/tracking.module": [
		1042,
		40
	],
	"../pages/medicineinventory/medicineinventory.module": [
		1043,
		39
	],
	"../pages/medicinesrequestview/medicinesrequestview.module": [
		1079,
		38
	],
	"../pages/patient-order-details/patient-order-details.module": [
		1044,
		37
	],
	"../pages/patient/addappointment/addappointment.module": [
		1093,
		36
	],
	"../pages/patient/addbooklab/addbooklab.module": [
		1094,
		35
	],
	"../pages/patient/addpharmaappointment/addpharmaappointment.module": [
		1095,
		34
	],
	"../pages/patient/appointmentlist/appointmentlist.module": [
		1080,
		33
	],
	"../pages/patient/dash-board-for-patient/dash-board-for-patient.module": [
		1045,
		32
	],
	"../pages/patient/editappointment/editappointment.module": [
		1081,
		31
	],
	"../pages/patient/editpharmaappointment/editpharmaappointment.module": [
		1096,
		30
	],
	"../pages/patient/patientaddinsurance/patientaddinsurance.module": [
		1046,
		29
	],
	"../pages/patient/patientbooklablist/patientbooklablist.module": [
		1047,
		28
	],
	"../pages/patient/patientclaimedinsurancelist/patientclaimedinsurancelist.module": [
		1048,
		27
	],
	"../pages/patient/patientclaimedinsurancelistview/patientclaimedinsurancelistview.module": [
		1049,
		26
	],
	"../pages/patient/patientdoctorvisitlist/patientdoctorvisitlist.module": [
		1050,
		25
	],
	"../pages/patient/patientdoctorvisitlistview/patientdoctorvisitlistview.module": [
		1051,
		24
	],
	"../pages/patient/patienthospitaladmitlist/patienthospitaladmitlist.module": [
		1052,
		23
	],
	"../pages/patient/patienthospitaladmitlistview/patienthospitaladmitlistview.module": [
		1053,
		22
	],
	"../pages/patient/patientinsurancelist/patientinsurancelist.module": [
		1054,
		21
	],
	"../pages/patient/patientinsurancelistview/patientinsurancelistview.module": [
		1055,
		20
	],
	"../pages/patient/patientlabreportlist/patientlabreportlist.module": [
		1056,
		19
	],
	"../pages/patient/patientlabreportlistview/patientlabreportlistview.module": [
		1057,
		18
	],
	"../pages/patient/patientmedicineboughtlist/patientmedicineboughtlist.module": [
		1058,
		17
	],
	"../pages/patient/patientmedicineboughtlistview/patientmedicineboughtlistview.module": [
		1059,
		16
	],
	"../pages/patient/patientprofile/patientprofile.module": [
		1060,
		15
	],
	"../pages/patient/patientprofiledocuments/patientprofiledocuments.module": [
		1082,
		14
	],
	"../pages/patient/patientprofileextended/patientprofileextended.module": [
		1083,
		13
	],
	"../pages/patient/patientprofilepersonal/patientprofilepersonal.module": [
		1084,
		12
	],
	"../pages/patient/patienttracking/patienttracking.module": [
		1061,
		11
	],
	"../pages/patient/pharmaappointmentlist/pharmaappointmentlist.module": [
		1085,
		10
	],
	"../pages/patient/profiledemographic/profiledemographic.module": [
		1086,
		9
	],
	"../pages/patient/rebookappointment/rebookappointment.module": [
		1087,
		8
	],
	"../pages/patient/viewappointment/viewappointment.module": [
		1088,
		7
	],
	"../pages/patient/viewpatientbooklab/viewpatientbooklab.module": [
		1089,
		6
	],
	"../pages/patientreports/patientreports.module": [
		1090,
		5
	],
	"../pages/pharmadelivered/pharmadelivered.module": [
		1091,
		4
	],
	"../pages/pharmaview/pharmaview.module": [
		1092,
		3
	],
	"../pages/video/video.module": [
		1062,
		2
	]
};
function webpackAsyncContext(req) {
	var ids = map[req];
	if(!ids)
		return Promise.reject(new Error("Cannot find module '" + req + "'."));
	return __webpack_require__.e(ids[1]).then(function() {
		return __webpack_require__(ids[0]);
	});
};
webpackAsyncContext.keys = function webpackAsyncContextKeys() {
	return Object.keys(map);
};
webpackAsyncContext.id = 343;
module.exports = webpackAsyncContext;

/***/ }),

/***/ 35:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddappointmentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_common__ = __webpack_require__(14);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var checksum_lib = __webpack_require__(178);
var AddappointmentPage = /** @class */ (function () {
    function AddappointmentPage(navCtrl, navParams, api, datepipe, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.datepipe = datepipe;
        this.toastCtrl = toastCtrl;
        this.facilitiesArray = [];
        this.addressArray = [];
        this.drAvailableArray = [];
        this.add1 = [];
        this.patAddressPojo = [];
        this.locationArray = [];
        this.specialityArray = [];
        this.doctorArray = [];
        this.timestampArray = [];
        this.visittypeArray = [];
        this.promocodeArray = [];
        this.feesamountArray = [];
        this.visitreasonArray = [];
        this.facilityCenterID = "";
        this.addressLine1 = "";
        this.fcLocationMapID = "";
        this.fclProviderMapID = "";
        this.specialityID = "";
        this.fcLocationDoctorID = "";
        this.visittypeId = "";
        this.facilityProviderMapId = "";
        this.coupounID = "";
        this.visitreasonId = "";
        this.patAppDate = "";
        this.coupounCode = "";
        this.patAppAmount = "";
        this.patAppTimeFrom = "";
        this.patAppTimeFromStatus = "";
        this.patAppTimeTo = "";
        this.patAppDescription = "";
        this.fees = "";
        this.oldAptFees = "";
        this.feesAmount = "";
        this.orderID = 0;
        this.custID = 0;
        this.txnAmount = "";
        this.checked = false;
        this.isDisabled = false;
        // getavlSchedule(doctorid: any) {
        //   this.fcLocationDoctorID = doctorid;
        //   this.visittype();
        // }
        ///available schedule////
        this.availableschedule = [
            {
                time: " Mon: 12:00 pm to 4:00 pm ",
                time1: " Wed: 12:00 pm to 4:00 pm "
            },
            {
                time: " Fri: 06:00 pm to 08:00 pm ",
                time1: "Sat: 06:00 pm to 08:00 pm"
            }
        ];
    }
    AddappointmentPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad AddappointmentPage");
        ///to call all facility////
        this.getallAddress();
        // this.getallFacilities();
        // this.visitreason();
        // this.visittype();
        // this.applypromocode();
        // this.feesType();
    };
    /// facility////
    // getallFacilities() {
    //   var data1 = {
    //     facilityCenterType: "Hospital"
    //   };
    //   this.api
    //     .wsPostHeader(APIName.getAllFacilityByPerameter, data1)
    //     .then((resp: any) => {
    //       if (resp.status === 500) {
    //         // showToast( resp.error.message, this.toastCtrl)
    //       } else {
    //         this.facilitiesArray = resp.data;
    //         this.facilityCenterID = this.facilitiesArray[0].facilityCenterID;
    //         this.getFacilityid(this.facilityCenterID);
    //       }
    //     });
    // }
    // getFacilityid(facilityid: any) {
    //   this.facilityCenterID = facilityid;
    //   this.getAllLocations();
    //   console.log("facilityCenterID", "" + this.facilityCenterID);
    // }
    /// Address////
    AddappointmentPage.prototype.getallAddress = function () {
        var _this = this;
        var data1 = {};
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllPatientLocation, data1)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.addressArray = resp.data.patAddressPojo;
                // this.add1 = this.addressArray.patAddressPojo;
                _this.addressLine1 = _this.addressArray[0].addressLine1;
                _this.getAddressid(_this.addressLine1);
            }
        });
    };
    AddappointmentPage.prototype.getAddressid = function (facilityid) {
        this.addressLine1 = facilityid;
        this.getallAvailableDoctor();
        console.log("addressID", "" + this.addressLine1);
    };
    /// Available Doctor////
    AddappointmentPage.prototype.getallAvailableDoctor = function () {
        var _this = this;
        var data1 = {
            addressLine1: this.addressLine1
        };
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getallavailabaledoctor, data1)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.drAvailableArray = resp.data;
                // this.add1 = this.addressArray.patAddressPojo;
                if (_this.drAvailableArray.length > 0) {
                    _this.fcLocationMapID = _this.drAvailableArray[0].fcLocationMapID;
                    _this.facilityProviderMapId = _this.drAvailableArray[0].facilityProviderMapId;
                    _this.getAvailableDoctor(_this.fcLocationMapID);
                }
            }
        });
    };
    AddappointmentPage.prototype.getAvailableDoctor = function (facilityid) {
        this.fcLocationMapID = facilityid;
        this.getAllDoctors();
        console.log("availableID", "" + this.fcLocationMapID);
    };
    // fetchFees(fetch: Number) {
    //   console.log("Called");
    //   console.log("fetched:" + fetch);
    //   let feesRequestmodel = new FeesRequestModel(fetch);
    //   this.addAppointmentService.getFees(feesRequestmodel).subscribe(
    //     response => {
    //       this.fees = response.data.fees;
    //       console.log(this.fees);
    //     },
    //     error => {}
    //   );
    // }
    /// locations////
    // getAllLocations() {
    //   var data = {
    //     facilityCenterID: this.facilityCenterID
    //   };
    //   this.api
    //     .wsPostHeaderBackground(APIName.getAllLocationByFacility, data)
    //     .then((resp: any) => {
    //       this.locationArray = resp.data;
    //       if (this.locationArray.length > 0) {
    //         this.fcLocationMapID = this.locationArray[0].fcLocationMapID;
    //         this.getlocationid(this.fcLocationMapID);
    //       } else {
    //         this.fcLocationMapID = "";
    //       }
    //     });
    // }
    // getlocationid(locationid: any) {
    //   this.fcLocationMapID = locationid;
    //   this.getAllSpeciality();
    // }
    // /// Speciality////
    // getAllSpeciality() {
    //   var data = {
    //     fcLocationMapID: this.fcLocationMapID
    //   };
    //   this.api
    //     .wsPostHeaderBackground(
    //       APIName.getAllSpecialityByLocationAndFacility,
    //       data
    //     )
    //     .then((resp: any) => {
    //       this.specialityArray = resp.data;
    //       if (this.specialityArray.length > 0) {
    //         this.specialityID = this.specialityArray[0].specialityID;
    //         this.getspecialityid(this.specialityID);
    //       } else {
    //         this.specialityID = "";
    //       }
    //     });
    // }
    // getspecialityid(speciality: any) {
    //   this.specialityID = speciality;
    //   this.getAllDoctors();
    // }
    /// get all doctors////
    AddappointmentPage.prototype.getAllDoctors = function () {
        var _this = this;
        var data = {
            fcLocationMapID: this.fcLocationMapID
            // SpecialityID: this.specialityID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDoctorByLocationAndFacility, data)
            .then(function (resp) {
            console.log("FCLPROVIDER= ", resp.data.fclProviderMapID);
            _this.doctorArray = resp.data;
            // this.add1 = this.addressArray.patAddressPojo;
            _this.fcLocationDoctorID = _this.doctorArray[0].fcLocationMapID;
            _this.fclProviderMapID = _this.doctorArray[0].fclProviderMapID;
            _this.getdoctorid(_this.fcLocationDoctorID);
        });
    };
    AddappointmentPage.prototype.getdoctorid = function (doctorid) {
        this.fcLocationDoctorID = doctorid;
        this.visittype();
    };
    /// get visit type////
    AddappointmentPage.prototype.visittype = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentType, "")
            .then(function (resp) {
            _this.visittypeArray = resp.data;
            if (_this.visittypeArray.length > 0) {
                _this.visittypeId = _this.visittypeArray[0].key;
                _this.getvisittypeid(_this.visittypeId);
            }
            else {
                _this.visittypeId = "";
            }
        });
    };
    AddappointmentPage.prototype.getvisittypeid = function (visit) {
        this.visittypeId = visit;
        this.feesType();
    };
    // fees
    AddappointmentPage.prototype.feesType = function () {
        var _this = this;
        var data = {
            fclProviderMapID: this.fclProviderMapID
        };
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getfeesofdoctor, data).then(function (resp) {
            console.log("FCLOCATIONID= ", resp.data);
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.fees = resp.data.fees;
                _this.oldAptFees = resp.data.oldAptFees;
                if (_this.visittypeId == "New") {
                    _this.getFees(_this.fees);
                }
                else if (_this.visittypeId == "Followup") {
                    _this.getFees(_this.oldAptFees);
                }
                console.log(_this.fees);
            }
        });
    };
    AddappointmentPage.prototype.getFees = function (fees) {
        this.fees = fees;
        this.promocodeList();
    };
    /// Apply Coupan Code ///
    AddappointmentPage.prototype.promocodeList = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllCoupons, "")
            .then(function (resp) {
            _this.promocodeArray = resp.data;
            if (_this.promocodeArray.length > 0) {
                // this.coupounID = this.promocodeArray[0].coupounID;
                _this.coupounCode = _this.promocodeArray[0].coupounCode;
                _this.getapplypromocode(_this.coupounCode);
            }
            else {
                _this.coupounCode = "";
            }
        });
    };
    AddappointmentPage.prototype.getapplypromocode = function (promo) {
        this.coupounCode = promo;
        this.feesamount();
    };
    /// Fees Amount ///
    AddappointmentPage.prototype.feesamount = function () {
        var _this = this;
        var data = {
            coupounCode: this.coupounCode,
            patAppAmount: this.fees
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].applyCouponCode, data)
            .then(function (resp) {
            _this.feesAmount = resp.data;
            _this.getfeesamount(_this.feesAmount);
        });
    };
    AddappointmentPage.prototype.getfeesamount = function (fees) {
        this.feesAmount = fees;
        this.visitreason();
    };
    /// visit reason////
    AddappointmentPage.prototype.visitreason = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentReason, "")
            .then(function (resp) {
            _this.visitreasonArray = resp.data;
            if (_this.visitreasonArray.length > 0) {
                _this.visitreasonId = _this.visitreasonArray[0].key;
            }
            else {
                _this.visitreasonId = "";
            }
        });
    };
    AddappointmentPage.prototype.getvisitreasonid = function (visit) {
        this.visitreasonId = visit;
    };
    ///available schedule////
    AddappointmentPage.prototype.avlSchedule = function () {
        var _this = this;
        var date = new Date(this.patAppDate);
        // let datetopass = date.getTime();
        // var date1 = date.toISOString();
        var data = {
            date: date,
            doctorId: String(this.fclProviderMapID),
            facilityProviderMapID: String(this.fcLocationMapID)
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentSchedule, data)
            .then(function (resp) {
            var data = resp.data;
            _this.timestampArray = data;
            // this.patAppTimeFrom = this.timestampArray[0].timeIntervals;
            _this.patAppTimeFromStatus = _this.timestampArray[0].taken;
        });
    };
    AddappointmentPage.prototype.getavailableTime = function (time, event) {
        this.patAppTimeFrom = time;
        console.log("event", event);
        if (event == true) {
            console.log("no");
            this.isDisabled = true;
        }
        else {
            console.log("yes");
            this.isDisabled = false;
        }
    };
    AddappointmentPage.prototype.callAddAppointmentApi = function () {
        var _this = this;
        // if (this.addressLine1.length == 0) {
        //   showToast("Please select Address", this.toastCtrl);
        //   return;
        // }
        // if (this.fcLocationMapID.length == 0) {
        //   showToast("Please select Location", this.toastCtrl);
        //   return;
        // }
        // if (this.fcLocationDoctorID.length == 0) {
        //   showToast("Please select Doctor", this.toastCtrl);
        //   return;
        // }
        // if (this.fclProviderMapID.length == 0) {
        //   showToast("Please select Doctor", this.toastCtrl);
        //   return;
        // }
        if (this.patAppDate.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment date", this.toastCtrl);
            return;
        }
        if (this.patAppTimeFrom.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment start time", this.toastCtrl);
            return;
        }
        // if (this.patAppTimeTo.length == 0) {
        //   showToast("Please select Appointment end time", this.toastCtrl);
        //   return;
        // }
        if (this.visittypeId.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select type Of Visit", this.toastCtrl);
            return;
        }
        if (this.visitreasonId.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Reason to Visit", this.toastCtrl);
            return;
        }
        if (this.patAppDescription.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please add detail Description", this.toastCtrl);
            return;
        }
        var date = new Date(this.patAppDate);
        var datetopass = date.getTime();
        var date1 = date.getUTCDate();
        console.log("datebefore", "" + datetopass);
        var timefrom = new Date(this.patAppTimeFrom);
        var timefromtopass = timefrom.getTime();
        console.log("timebefrm", "" + timefromtopass);
        var timeto = new Date(this.patAppDate + " " + this.patAppTimeTo);
        var timetopass = timeto.getTime();
        console.log("timeto", "" + timetopass);
        if (this.checked == false) {
            this.makePayment();
        }
        else {
            var data = JSON.stringify({
                //         fclProviderMapID: "7436"
                // specialityMaster: null
                // patAppType: "New"
                // patAppReason: "Thyroid"
                // patAppDescription: "Sascas"
                // codpay: true
                // patAppDate: 1582709316000
                // patAppTimeFrom: 1582661400000
                // patAppStatus: "Pending"
                // patAppAmount: 300
                fclProviderMapID: { fclProviderMapID: this.fclProviderMapID },
                specialityMaster: null,
                patAppDate: datetopass,
                patAppTime: this.patAppTimeFrom,
                // patAppTimeTo: timetopass,
                patAppType: this.visittypeId,
                patAppReason: this.visitreasonId,
                patAppDescription: this.patAppDescription,
                patAppStatus: "Pending",
                // codpay: this.checked,
                patAppAmount: this.feesAmount
            });
            this.api
                .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, data)
                .then(function (resp) {
                if (resp.status === 500) {
                    Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
                }
                else {
                    Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("" + resp.message, _this.toastCtrl);
                    _this.navCtrl.pop();
                }
            });
        }
        // this.makePayment();
        // this.makePaymentPlugin();
    };
    AddappointmentPage.prototype.addValue = function () {
        this.checked = !this.checked;
        console.log("checked: " + this.checked); //it is working !!!
    };
    ///to convert date and time////
    AddappointmentPage.prototype.changeDateToString = function (date, format) {
        // this.changeStringToDate(this.selectedDate +' '+this.TimeFrom)
        var date1 = date.toISOString();
        // var date2 = this.changeStringToDate(date1,s)
        console.log("dateString=>", date1);
    };
    //date
    // changeStringToDate(dateString: string, format?: string) {
    //   if (format) {
    //     console.log(
    //       "StringToDate==>",
    //       this.changeDateFormat(new Date(dateString), format)
    //     );
    //     return this.changeDateFormat(new Date(dateString), format);
    //   } else {
    //     console.log("completeString=>>>>>>", dateString);
    //     console.log("StringToDate==>", new Date(dateString).toISOString());
    //     return new Date(dateString).toISOString();
    //   }
    // }
    AddappointmentPage.prototype.changeStringToDate = function (dateString, format //date
    ) {
        if (format) {
            //19800000
            //
            return this.changeDateFormat(new Date(new Date(dateString).getTime() -
                new Date(dateString).getTimezoneOffset() * 60000), format);
        }
        else {
            return new Date(new Date(dateString).getTime() -
                new Date(dateString).getTimezoneOffset() * 60000).toISOString();
        }
    };
    //date to any format
    AddappointmentPage.prototype.changeDateFormat = function (date, formate) {
        var latest_date = this.datepipe.transform(date, formate);
        console.log("ChangeDateFormat", latest_date);
        return latest_date;
    };
    // makePaymentPlugin() {
    //   var paytmParams = {};
    //   /* put checksum parameters in Object */
    //   paytmParams["MID"] = "PoBJbW65402394256903";
    //   paytmParams["ORDERID"] = this.orderID;
    //   checksum_lib.genchecksum(paytmParams, "!29FEIkWuEqB@GEG", function(
    //     err,
    //     checksum
    //   ) {
    //     console.log(checksum);
    //     var options = {
    //       ENVIRONMENT: "staging", // environment details. staging for test environment & production for live environment
    //       REQUEST_TYPE: "DEFAULT", // You would get this details from paytm after opening an account with them
    //       MID: "PoBJbW65402394256903", // You would get this details from paytm after opening an account with them
    //       ORDER_ID: this.orderID, // Unique ID for each transaction. This info is for you to track the transaction details
    //       CUST_ID: this.orderID, // Unique ID for your customer
    //       INDUSTRY_TYPE_ID: "Retail", // You would get this details from paytm after opening an account with them
    //       CHANNEL_ID: "WAP", // You would get this details from paytm after opening an account with them
    //       TXN_AMOUNT: this.fees, // Transaction amount that has to be collected
    //       WEBSITE: "PAYTM_WEBSITE", // You would get this details from paytm after opening an account with them
    //       CALLBACK_URL:
    //         "https://securegw.paytm.in/theia/paytmCallback?ORDER_ID=" +
    //         this.orderID, // Callback url
    //       // EMAIL: "abc@gmail.com", // Email of customer
    //       // MOBILE_NO: "9999999999", // Mobile no of customer
    //       CHECKSUMHASH: checksum
    //     };
    //     paytm.startPayment(options, this.successCallback, this.failureCallback);
    //   });
    // }
    AddappointmentPage.prototype.makePayment = function () {
        console.log("make PAyment");
        var min = 0;
        var max = 9999;
        var ORDER_ID = Math.floor(Math.random() * (+max - +min)) + +min;
        var CUST_ID = Math.floor(Math.random() * (+max + -min)) + +min;
        this.orderID = ORDER_ID;
        this.custID = CUST_ID;
        this.txnAmount = this.feesAmount;
        // this.navCtrl.loadUrl(url, { openExternal:true });
        window.open("http://client.attuneinfocom.com/paytm_payment_demo/pgRedirect.php?ORDER_ID=" +
            this.orderID +
            "&CUST_ID=" +
            this.custID +
            "&TXN_AMOUNT=" +
            this.txnAmount +
            "&redirect_url=ionic", "_self");
    };
    AddappointmentPage.prototype.successCallback = function (response) {
        if (response.STATUS == "TXN_SUCCESS") {
            var txn_id = response.TXNID;
            var paymentmode = response.PAYMENTMODE;
            // other details and function after payment transaction
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("payment succes ", this.toastCtrl);
        }
        else {
            // error code will be available in RESPCODE
            // error list page https://docs.google.com/spreadsheets/d/1h63fSrAmEml3CYV-vBdHNErxjJjg8-YBSpNyZby6kkQ/edit#gid=2058248999
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Transaction Failed for reason " + response.RESPMSG, this.toastCtrl);
            // showToast
        }
    };
    AddappointmentPage.prototype.failureCallback = function (error) {
        // error code will be available in RESCODE
        // error list page https://docs.google.com/spreadsheets/d/1h63fSrAmEml3CYV-vBdHNErxjJjg8-YBSpNyZby6kkQ/edit#gid=2058248999
        Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Transaction Failed for reason " + error.RESPMSG, this.toastCtrl);
    };
    AddappointmentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-addappointment",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/addappointment/addappointment.html"*/'<!--\n  Generated template for the AddAppointmentPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Add Appointment</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="book-apmnt pt-20 bg-fff">\n    <form class="cmn-form no-input-efct mb-20">\n      <!-- <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="faciltyCenterName"\n          [(ngModel)]="facilityCenterID"\n          [disabled]="facilitiesArray.length == 0"\n          (change)="getFacilityid($event.target.value)"\n        >\n          <option\n            *ngFor="let category of facilitiesArray; let idx = index"\n            [value]="category.facilityCenterID"\n            selected="{{ (idx == 0).facilityCenterID }}"\n            >{{ category.facilityCenterName }}</option\n          >\n        </select>\n        <label>Facility</label>\n      </div> -->\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="address"\n          [(ngModel)]="addressLine1"\n          [disabled]="addressArray.length == 0"\n          (change)="getAddressid($event.target.value)"\n        >\n          <option\n            *ngFor="let category of addressArray; let idx = index"\n            [value]="category.addressLine1"\n            selected="{{ (idx == 0).addressLine1 }}"\n            >{{ category.addressLine1 }}</option\n          >\n        </select>\n        <label>Address</label>\n      </div>\n\n      <!-- <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="fcLocationName"\n          [(ngModel)]="fcLocationMapID"\n          [disabled]="locationArray.length == 0"\n          (change)="getlocationid($event.target.value)"\n        >\n          <option\n            *ngFor="let location of locationArray; let idx = index"\n            [value]="location.fcLocationMapID"\n            selected="{{ (idx == 0).fcLocationMapID }}"\n            >{{ location.fcLocationName }}</option\n          >\n        </select>\n        <label>Location</label>\n      </div> -->\n\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="DrAvailable"\n          [(ngModel)]="fcLocationMapID"\n          [disabled]="drAvailableArray.length == 0"\n          (change)="getAvailableDoctor($event.target.value)"\n        >\n          <option\n            *ngFor="let location of drAvailableArray; let idx = index"\n            [value]="location.fcLocationMapID"\n            selected="{{ (idx == 0).fcLocationMapID }}"\n            >{{ location.facilityName+"-"+location.fcLocationName }}</option\n          >\n        </select>\n        <label>Hospital/Clinic</label>\n      </div>\n\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="providerName"\n          [(ngModel)]="fcLocationDoctorID"\n          [disabled]="doctorArray.length == 0"\n          (change)="getdoctorid($event)"\n        >\n          <option\n            *ngFor="let doctor of doctorArray; let idx = index"\n            [value]="doctor.fcLocationMapID"\n            selected="{{ (idx == 0).fcLocationMapID }}"\n            >{{ doctor.providerName }}</option\n          >\n        </select>\n        <label>List of Doctor</label>\n      </div>\n\n      <!-- <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="specialityName"\n          [(ngModel)]="specialityID"\n          [disabled]="specialityArray.length == 0"\n          (change)="getspecialityid($event.target.value)"\n        >\n          <option\n            *ngFor="let speciality of specialityArray; let idx = index"\n            [value]="speciality.specialityID"\n            selected="{{ (idx == 0).specialityID }}"\n            >{{ speciality.specialityName }}</option\n          >\n        </select>\n        <label>Speciality</label>\n      </div> -->\n\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          [(ngModel)]="visittypeId"\n          name="visitType"\n          (change)="getvisittypeid($event.target.value)"\n        >\n          <option\n            *ngFor="let visit of visittypeArray; let idx = index"\n            [value]="visit.key"\n            selected="{{ (idx == 0).key }}"\n            >{{ visit.value }}</option\n          >\n          <!-- selected="{{ (idx == 0).key }}" -->\n        </select>\n        <label>Case</label>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Fees of selected Doctor</label>\n          <input\n            type="number"\n            name="feesText"\n            [(ngModel)]="fees"\n            class="form-control"\n            readonly="true"\n          />\n        </div>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          [(ngModel)]="coupounCode"\n          name="promocode"\n          (change)="getapplypromocode($event.target.value)"\n        >\n          <option\n            *ngFor="let promo of promocodeArray; let idx = index"\n            [value]="promo.coupounCode"\n            selected="{{ (idx == 0).coupounCode }}"\n            >{{ promo.coupounCode }}</option\n          >\n          <!-- selected="{{ (idx == 0).key }}" -->\n        </select>\n        <label>Apply Coupan Code</label>\n      </div>\n\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Total Fees Amount </label>\n          <input\n            type="number"\n            name="amountToutal"\n            [(ngModel)]="feesAmount"\n            class="form-control"\n            readonly="true"\n          />\n        </div>\n      </div>\n\n      <!-- <div class="avl-schdl"> -->\n      <!-- <div class="scdl-ttl">Available Schedule</div>\n        <div class="scdl-row clearfix">\n          <div class="scdl-day pull-left">Monday</div>\n          <div class="scdl-time pull-right">12:00 PM to 04:00 PM</div>\n        </div>\n        <div class="scdl-row clearfix">\n          <div class="scdl-day pull-left">Wednesday</div>\n          <div class="scdl-time pull-right">12:00 PM to 04:00 PM</div>\n        </div>\n        <div class="scdl-row clearfix">\n          <div class="scdl-day pull-left">Saturday</div>\n          <div class="scdl-time pull-right">06:00 PM to 08:00 PM</div>\n        </div>\n        <div class="scdl-row clearfix">\n          <div class="scdl-day pull-left">Sunday</div>\n          <div class="scdl-time pull-right">06:00 PM to 08:00 PM</div>\n        </div> -->\n      <!-- </div> -->\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Date of Appointment</label>\n          <ion-datetime\n            displayFormat="DD MMMM YYYY"\n            pickerFormat="DD MMMM YYYY"\n            [(ngModel)]="patAppDate"\n            name="date"\n            (ngModelChange)="avlSchedule()"\n          ></ion-datetime>\n          <span class="input-icon"><img src="assets/images/date.png"/></span>\n        </div>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Time of Appointment</label>\n          <select\n            class="floating-select form-control"\n            [(ngModel)]="patAppTimeFrom"\n            name="patAppTimeFrom"\n            (change)="getavailableTime($event.target.value,patAppTimeFromStatus)"\n          >\n            <option\n              *ngFor="let time of timestampArray; let idx = index"\n              [value]="time.timeIntervals"\n              [disabled]="time.taken"\n              selected="{{ (idx == 0).timeIntervals }}"\n            >\n              <p *ngIf="time.taken == true">\n                {{time.timeIntervals}} (BOOKED)\n              </p>\n              <p *ngIf=" time.taken == false">{{time.timeIntervals}}</p>\n            </option>\n          </select>\n          <!-- <ion-datetime\n            [(ngModel)]="patAppTimeFrom"\n            (ngModelChange)="getavailableTime()"\n            name="timeFrom"\n          ></ion-datetime> -->\n          <span class="input-icon"><img src="assets/images/time.png"/></span>\n        </div>\n      </div>\n      <!-- <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Time To</label>\n          <ion-datetime\n            displayFormat="hh:mm a"\n            pickerFormat="hh:mm a"\n            [(ngModel)]="patAppTimeTo"\n            name="timeTo"\n          ></ion-datetime>\n          <span class="input-icon"><img src="assets/images/time.png"/></span>\n        </div>\n      </div> -->\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          [(ngModel)]="visitreasonId"\n          [disabled]="visitreasonArray.length == 0"\n          (ionChange)="getvisitreasonid($event)"\n          name="reasonForVisit"\n        >\n          <option\n            *ngFor="let reason of visitreasonArray; let idx = index"\n            [value]="reason.key"\n            selected="{{ (idx == 0).key }}"\n            >{{ reason.value }}</option\n          >\n        </select>\n        <label>Reason for Visit</label>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="floating-label cmn-inpt">\n          <textarea\n            class="floating-input cmn-txtarea"\n            type="text"\n            name="Desciption"\n            [(ngModel)]="patAppDescription"\n            rows="4"\n          ></textarea>\n          <label>Additional Detail</label>\n        </div>\n      </div>\n\n      <ion-list>\n        <ion-item>\n          <ion-label>COD (Cash On Delivery))</ion-label>\n          <ion-checkbox name="cod" (click)="addValue($event)"></ion-checkbox>\n        </ion-item>\n      </ion-list>\n\n      <div class="form-button bg-gray pt-25 text-center">\n        <button\n          type="button"\n          class="cmn-thm-btn mr-25"\n          (click)="callAddAppointmentApi()"\n        >\n          SAVE\n        </button>\n        <button type="button" class="cmn-wht-btn">\n          CANCEL\n        </button>\n      </div>\n    </form>\n  </div>\n</ion-content>\n\n<!-- hello -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/addappointment/addappointment.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_4__angular_common__["d" /* DatePipe */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], AddappointmentPage);
    return AddappointmentPage;
}());

//# sourceMappingURL=addappointment.js.map

/***/ }),

/***/ 39:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditappointmentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_common__ = __webpack_require__(14);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the EditappointmentPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditappointmentPage = /** @class */ (function () {
    function EditappointmentPage(datepipe, navCtrl, navParams, api, toastCtrl) {
        this.datepipe = datepipe;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.toastCtrl = toastCtrl;
        this.facilitiesArray = [];
        this.locationArray = [];
        this.specialityArray = [];
        this.doctorArray = [];
        this.visittypeArray = [];
        this.visitreasonArray = [];
        this.facilityCenterID = "";
        this.fcLocationMapID = "";
        this.fclProviderMapID = "";
        this.specialityID = "";
        this.visittypeId = "";
        this.visitreasonId = "";
        this.viewgetappointmentArray = {};
        this.patAppointmentID = [];
        ///available schedule////
        this.availableschedule = [
            {
                time: " Mon: 12:00 pm to 4:00 pm ",
                time1: " Wed: 12:00 pm to 4:00 pm "
            },
            {
                time: " Fri: 06:00 pm to 08:00 pm ",
                time1: "Sat: 06:00 pm to 08:00 pm"
            }
        ];
        this.patAppointmentID = this.navParams.get("patAppointmentID");
        this.getviewgetappointment();
    }
    EditappointmentPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad AddappointmentPage");
    };
    EditappointmentPage.prototype.getallFacilities = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllFacility, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("facilityCall====>", resp);
                _this.facilitiesArray = resp.data;
                if (_this.facilityCenterID.length) {
                }
                else {
                    _this.facilityCenterID = _this.selectedfacilityCenterID;
                }
                _this.getFacilityid(_this.selectedfacilityCenterID);
            }
        });
    };
    EditappointmentPage.prototype.getFacilityid = function (facilityid) {
        this.facilityCenterID = facilityid;
        this.getAllLocations();
    };
    /// locations////
    EditappointmentPage.prototype.getAllLocations = function () {
        var _this = this;
        var data = {
            facilityCenterID: this.facilityCenterID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLocationByFacility, data)
            .then(function (resp) {
            _this.locationArray = resp.data;
            console.log("location====>", resp);
            // if (this.fcLocationMapID.length)
            // {
            //  console.log('ChangableididlsjkID-===>',this.fcLocationMapID);
            // }else{
            //  this.fcLocationMapID =  this.selectedfcLocationMapID;
            // }
            // console.log('locationID===>',this.fcLocationMapID);
            // this.fcLocationMapID =  this.selectedfcLocationMapID;
            _this.getlocationid(_this.selectedfcLocationMapID);
        });
    };
    EditappointmentPage.prototype.getlocationid = function (locationid) {
        console.log("calleeeddddd===>", this.fcLocationMapID);
        this.fcLocationMapID = locationid;
        this.getAllSpeciality();
    };
    /// Speciality////
    EditappointmentPage.prototype.getAllSpeciality = function () {
        var _this = this;
        var data = {
            fcLocationMapID: this.fcLocationMapID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllSpecialityByLocationAndFacility, data)
            .then(function (resp) {
            _this.specialityArray = resp.data;
            console.log("specilaity====>", resp);
            _this.specialityID = _this.selectedspecialityID;
            _this.getspecialityid(_this.selectedspecialityID);
        });
    };
    EditappointmentPage.prototype.getspecialityid = function (speciality) {
        this.specialityID = speciality;
        this.getAllDoctors();
    };
    /// get all doctors////
    EditappointmentPage.prototype.getAllDoctors = function () {
        var _this = this;
        var data = {
            FcLocationMapID: this.fcLocationMapID,
            SpecialityID: this.specialityID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDoctorByLocationAndspeciality, data)
            .then(function (resp) {
            _this.doctorArray = resp.data;
            // this.fclProviderMapID =  this.doctorArray[0].fclProviderMapID;
            _this.fclProviderMapID = _this.selectedfclProviderMapID;
            _this.getdoctorid(_this.selectedfclProviderMapID);
            _this.visittype();
        });
    };
    EditappointmentPage.prototype.getdoctorid = function (doctorid) {
        this.fclProviderMapID = doctorid;
    };
    /// get visit type////
    EditappointmentPage.prototype.visittype = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentType, "")
            .then(function (resp) {
            _this.visittypeArray = resp.data;
            _this.visittypeId = _this.selectedvisittypeId;
            _this.getvisittypeid(_this.selectedvisittypeId);
            _this.visitreason();
        });
    };
    EditappointmentPage.prototype.getvisittypeid = function (visit) {
        this.visittypeId = visit;
    };
    /// visit reason////
    EditappointmentPage.prototype.visitreason = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentReason, "")
            .then(function (resp) {
            _this.visitreasonArray = resp.data;
            _this.visitreasonId = _this.selectedvisitreasonId;
            // this.getvisitreasonid(this.selectedvisitreasonId);
            // this.visitreasonId = this.visitreasonArray[0].key;
        });
    };
    EditappointmentPage.prototype.getvisitreasonid = function (visit) {
        this.visitreasonId = visit;
    };
    /// view and get appointment api////
    EditappointmentPage.prototype.getviewgetappointment = function () {
        var _this = this;
        var data1 = {
            patAppointmentID: this.patAppointmentID
            // patAppointmentID: 107
        };
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditAppointmentPatient, data1)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                //  console.log("RESPONNSE:--- "+JSON.stringify(resp));
                _this.viewgetappointmentArray = resp.data;
                // var obj = JSON.stringify(resp);
                // this.specialityArray = JSON.parse(obj);
                // this.specialityArray=resp.data.filter(item => item.specialityName === 'Skin')
                console.log("successsssssss=> apointmentpage", _this.viewgetappointmentArray);
                _this.getallFacilities();
                _this.selectedfacilityCenterID = resp.data.facilityCenterID;
                console.log("centered ID", _this.selectedfacilityCenterID);
                _this.selectedfcLocationMapID = resp.data.fcLocationMapID;
                _this.selectedspecialityID = resp.data.specialityID;
                _this.selectedfclProviderMapID = resp.data.fclProviderMapID;
                _this.selectedvisittypeId = resp.data.patAppType;
                _this.selectedvisitreasonId = resp.data.patAppReason;
                var timediffFrom = resp.data.patAppTimeFrom - 19800000;
                var timediffTo = resp.data.patAppTimeTo - 19800000;
                _this.selectedpatAppDate = _this.changeStringToDate(new Date(resp.data.patAppDate).toISOString());
                console.log("datettttttttttttttttttt", _this.selectedpatAppDate);
                _this.selectedpatAppTimeFrom = _this.changeStringToDate(new Date(timediffFrom).toISOString());
                console.log("datettttttttttttttttttt", _this.selectedpatAppDate);
                _this.selectedpatAppTimeTo = _this.changeStringToDate(new Date(timediffTo).toISOString());
                console.log("datettttttttttttttttttt", _this.selectedpatAppTimeTo);
                // this.selectedpatAppTimeFrom =resp.data.patAppDate?this.changeStringToDate(resp.data.patAppDate+" "+resp.data.patAppTimeFrom):"";
                // this.selectedpatAppTimeTo =resp.data.patAppDate?this.changeStringToDate(resp.data.patAppDate+" "+resp.data.patAppTimeTo):"";
                _this.selectedpatAppDescription = resp.data.patAppDescription;
            }
        });
    };
    EditappointmentPage.prototype.formatDate = function (date) {
        var monthNames = [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
        ];
        var day = date.getDate();
        var monthIndex = date.getMonth();
        var year = date.getFullYear();
        return day + " " + monthNames[monthIndex] + " " + year;
    };
    EditappointmentPage.prototype.callEditAppointmentApi = function () {
        var _this = this;
        if (this.facilityCenterID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select facility", this.toastCtrl);
            return;
        }
        if (this.fcLocationMapID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Location", this.toastCtrl);
            return;
        }
        if (this.specialityID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Speciality", this.toastCtrl);
            return;
        }
        if (this.fclProviderMapID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Doctor", this.toastCtrl);
            return;
        }
        if (this.selectedpatAppDate.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment date", this.toastCtrl);
            return;
        }
        if (this.selectedpatAppTimeFrom.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment start time", this.toastCtrl);
            return;
        }
        if (this.selectedpatAppTimeTo.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment end time", this.toastCtrl);
            return;
        }
        if (this.visittypeId.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select type Of Visit", this.toastCtrl);
            return;
        }
        if (this.visitreasonId.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Reason to Visit", this.toastCtrl);
            return;
        }
        if (this.selectedpatAppDescription.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please add detail Description", this.toastCtrl);
            return;
        }
        var date = new Date(this.selectedpatAppDate);
        var datetopass = date.getTime();
        console.log("datebefore", "" + datetopass);
        var timefrom = new Date(this.selectedpatAppTimeFrom);
        var timefromtopass = timefrom.getTime();
        console.log("timebefrm", "" + timefromtopass);
        var timeto = new Date(this.selectedpatAppTimeTo);
        var timetopass = timeto.getTime();
        console.log("timeto", "" + timetopass);
        var data = JSON.stringify({
            patAppointmentID: this.patAppointmentID,
            fclProviderMapID: { fclProviderMapID: this.fclProviderMapID },
            specialityMaster: { specialityID: this.specialityID },
            patAppDate: datetopass,
            patAppTimeFrom: timefromtopass,
            patAppTimeTo: timetopass,
            // patAppTimeFrom: '08:00 am',
            // patAppTimeTo: '08:15 pm',
            patAppType: this.visittypeId,
            patAppReason: this.visitreasonId,
            patAppDescription: this.selectedpatAppDescription,
            patAppStatus: "Pending"
        });
        console.log("ADDDdata::----" + data);
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, data)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Appointment book updated successfully", _this.toastCtrl);
                _this.navCtrl.pop();
            }
        });
    };
    ///to convert date and time////
    EditappointmentPage.prototype.changeStringToDate = function (dateString, format //date
    ) {
        if (format) {
            //19800000
            //
            return this.changeDateFormat(new Date(new Date(dateString).getTime() -
                new Date(dateString).getTimezoneOffset() * 60000), format);
        }
        else {
            return new Date(new Date(dateString).getTime() -
                new Date(dateString).getTimezoneOffset() * 60000).toISOString();
        }
    };
    EditappointmentPage.prototype.changeDateFormat = function (date, formate //date to any format
    ) {
        var latest_date = this.datepipe.transform(date, formate);
        return latest_date;
    };
    EditappointmentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-editappointment",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/editappointment/editappointment.html"*/'<!--\n  Generated template for the AddAppointmentPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Edit Appointment</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="book-apmnt pt-20 bg-fff">\n    <form class="cmn-form no-input-efct mb-20">\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="faciltyCenterName"\n          [(ngModel)]="facilityCenterID"\n          [disabled]="facilitiesArray.length == 0"\n          (change)="getFacilityid($event.target.value)"\n        >\n          <option\n            *ngFor="let category of facilitiesArray; let idx = index"\n            [value]="category.facilityCenterID"\n            selected="{{ (idx == 0).facilityCenterID }}"\n            >{{ category.facilityCenterName }}</option\n          >\n        </select>\n        <label>Facility</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="fcLocationName"\n          [(ngModel)]="fcLocationMapID"\n          [disabled]="locationArray.length == 0"\n          (change)="getlocationid($event.target.value)"\n        >\n          <option\n            *ngFor="let location of locationArray; let idx = index"\n            [value]="location.fcLocationMapID"\n            selected="{{ (idx == 0).fcLocationMapID }}"\n            >{{ location.fcLocationName }}</option\n          >\n        </select>\n        <label>Location</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="specialityName"\n          [(ngModel)]="specialityID"\n          [disabled]="specialityArray.length == 0"\n          (change)="getspecialityid($event.target.value)"\n        >\n          <option\n            *ngFor="let speciality of specialityArray; let idx = index"\n            [value]="speciality.specialityID"\n            selected="{{ (idx == 0).specialityID }}"\n            >{{ speciality.specialityName }}</option\n          >\n        </select>\n        <label>Speciality</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="providerName"\n          [(ngModel)]="fclProviderMapID"\n          [disabled]="doctorArray.length == 0"\n          (ngModelChange)="getdoctorid($event.target.value)"\n        >\n          <option\n            *ngFor="let doctor of doctorArray; let idx = index"\n            [value]="doctor.fclProviderMapID"\n            selected="{{ (idx == 0).fclProviderMapID }}"\n            >{{ doctor.providerName }}</option\n          >\n        </select>\n        <label>List of Doctor</label>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Date of Appointment</label>\n          <ion-datetime\n            displayFormat="DD MMMM YYYY"\n            pickerFormat="DD MMMM YYYY"\n            name="date"\n            [(ngModel)]="selectedpatAppDate"\n          ></ion-datetime>\n          <span class="input-icon"><img src="assets/images/date.png"/></span>\n        </div>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Time From</label>\n          <ion-datetime\n            displayFormat="hh:mm a"\n            pickerFormat="hh:mm a"\n            [(ngModel)]="selectedpatAppTimeFrom"\n            name="timeFrom"\n          ></ion-datetime>\n          <span class="input-icon"><img src="assets/images/time.png"/></span>\n        </div>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Time To</label>\n          <ion-datetime\n            displayFormat="hh:mm a"\n            pickerFormat="hh:mm a"\n            [(ngModel)]="selectedpatAppTimeTo"\n            name="timeTo"\n          ></ion-datetime>\n          <span class="input-icon"><img src="assets/images/time.png"/></span>\n        </div>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          [(ngModel)]="visittypeId"\n          name="visitType"\n          (ionChange)="getvisittypeid($event.target.value)"\n        >\n          <option\n            *ngFor="let reason of visittypeArray; let idx = index"\n            [value]="reason.key"\n            selected="{{ (idx == 0).key }}"\n            >{{ reason.value }}</option\n          >\n        </select>\n        <label>Visit Type</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          [(ngModel)]="visitreasonId"\n          [disabled]="visitreasonArray.length == 0"\n          (ionChange)="getvisitreasonid($event.target.value)"\n          name="reasonForVisit"\n        >\n          <option\n            *ngFor="let reason of visitreasonArray; let idx = index"\n            [value]="reason.key"\n            selected="{{ (idx == 0).key }}"\n            >{{ reason.value }}</option\n          >\n        </select>\n        <label>Reason for Visit</label>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="floating-label cmn-inpt">\n          <textarea\n            class="floating-input cmn-txtarea"\n            type="text"\n            name="Desciption"\n            [(ngModel)]="selectedpatAppDescription"\n            rows="4"\n          ></textarea>\n          <label>Additional Detail</label>\n        </div>\n      </div>\n\n      <div class="form-button bg-gray pt-25 text-center">\n        <button\n          type="button"\n          class="cmn-thm-btn mr-25"\n          (click)="callEditAppointmentApi()"\n        >\n          SAVE\n        </button>\n      </div>\n    </form>\n  </div>\n</ion-content>\n\n<!-- <div class="add-action">\n            <button ion-button class="add-round"><img src="../assets/imgs/plus-ic.png"></button>\n          </div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/editappointment/editappointment.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__angular_common__["d" /* DatePipe */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], EditappointmentPage);
    return EditappointmentPage;
}());

//# sourceMappingURL=editappointment.js.map

/***/ }),

/***/ 391:
/***/ (function(module, exports) {

module.exports = {
  paytm_config: {
		MID: 'PoBJbW65402394256903',
		WEBSITE: 'WEBSTAGING',
    CHANNEL_ID: 'WAP',
    INDUSTRY_TYPE_ID: 'Retail',
    MERCHANT_KEY : '!29FEIkWuEqB@GEG'
	}
}

/***/ }),

/***/ 4:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return username; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return password; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return networkAlert; });
/* unused harmony export commonAlert */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return selectedRole; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return perProfile; });
/* unused harmony export perCertificate */
/* unused harmony export certificates */
/* unused harmony export BaseUrl */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return APIName; });
/* harmony export (immutable) */ __webpack_exports__["j"] = showToast;
/* harmony export (immutable) */ __webpack_exports__["h"] = showAlert;
/* harmony export (immutable) */ __webpack_exports__["i"] = showProgressbar;
/* harmony export (immutable) */ __webpack_exports__["b"] = hideProgressbar;
/* harmony export (immutable) */ __webpack_exports__["g"] = showActionSheetPhoto;
var username = "Username";
var password = "Password";
var networkAlert = "Network Alert";
var commonAlert = "Common Alert";
var selectedRole = "SelectedRole";
var perProfile = "perProfile";
var perCertificate = "perCertificate";
var certificates = "certificates";
// export const BaseUrl =  'http://192.168.15.104:';
// export const BaseUrl =  'http://192.168.15.24:';
// export const BaseUrl = "http://13.232.235.252:";
// export const BaseUrl = "http://192.168.15.150:";
var BaseUrl = "http://192.168.15.40:";
// export const BaseUrl = "http://192.168.15.149:";
// export const BaseUrl = "http://52.66.226.114:";
// export const BaseUrl = "http://app.easy.healthcare:";
// export const BaseUrl =  'http://203.88.147.222:';
var APIName = {
    login: BaseUrl + "9090/auth/login",
    signup: BaseUrl + "9090/auth/userRegistration",
    forgotpassword: BaseUrl + "9090/auth/forgotPassword",
    getAllFacility: BaseUrl + "9091/common/getAllFacility",
    // getAllDoctorByLocationAndFacility:
    //   BaseUrl + "9091/common/getAllDoctorByLocationAndFacility",
    getAllReportByFacilityProvider: BaseUrl + "9091/common/getAllReportByFacilityProvider",
    getAllLocationByFacility: BaseUrl + "9091/common/getAllLocationByFacility",
    getAllSpecialityByLocationAndFacility: BaseUrl + "9091/common/getAllSpecialityByLocationAndFacility",
    getAllDoctorByLocationAndspeciality: BaseUrl + "9091/common/getAllDoctorByLocationAndspeciality",
    appointmentType: BaseUrl + "9091/common/appointmentType",
    appointmentReason: BaseUrl + "9091/common/appointmentReason",
    labappointmentReson: BaseUrl + "9091/common/labappointmentReson",
    // getAppointmentPatient: BaseUrl + '9091/patient/getAppointmentPatient',
    getAppointmentPatient: BaseUrl + "9091/patient/getAppointmentPatient?page=0&size=1000",
    addOrEditAppointment: BaseUrl + "9091/common/addOrEditAppointment",
    viewAndEditAppointmentPatient: BaseUrl + "9091/patient/viewAndEditAppointmentPatient",
    changePassword: BaseUrl + "9090/auth/changePassword",
    updateExtendedPatientProfile: BaseUrl + "9091/profile/extended",
    updateExtendedDoctorProfile: BaseUrl + "9091/profile/extended",
    getExtendedPatientProfile: BaseUrl + "9091/profile/getExtendedData",
    getExtendedDoctorProfile: BaseUrl + "9091/profile/getExtendedData",
    updatePersonalDoctorProfile: BaseUrl + "9091/profile/personal",
    updatePersonalPatientProfile: BaseUrl + "9091/profile/personal",
    getPersonalDoctorProfile: BaseUrl + "9091/profile/getPersonalData",
    getPersonalPatientProfile: BaseUrl + "9091/profile/getPersonalData",
    getLocations: BaseUrl + "9091/common/getAllLocation",
    getDemographicData: BaseUrl + "9091/profile/getDemographicData",
    updatePatientDemographicProfile: BaseUrl + "9091/profile/demographic",
    addfacilityandlocation: BaseUrl + "9091/common/addfacilityandlocation",
    getAllFacilityDoctor: BaseUrl + "9091/common/getAllFacilityDoctor",
    getAllFacilityByReport: BaseUrl + "9091/common/getAllFacilityByReport",
    postordermedicinelocation: BaseUrl + "9091/common/getAllPatientLocation",
    postgetfclocation: BaseUrl + "9092/doctor/getspeciality",
    getAllLocationByFacilityAndDoctor: BaseUrl + "9091/common/getAllLocationByFacilityAndDoctor",
    addOrEditDoctorVisit: BaseUrl + "9092/doctor/addOrEditDoctorVisit",
    // getDoctorVisitlist: BaseUrl + '9092/doctor/getAllDoctorVisit',
    getDoctorVisitlist: BaseUrl + "9092/doctor/getAllDoctorVisit?page=0&size=1000",
    // getAllDoctorVisitPatient: BaseUrl + '9091/patient/getAllDoctorVisitPatient',
    getAllDoctorVisitPatient: BaseUrl + "9091/patient/getAllDoctorVisitPatient?page=0&size=1000",
    viewAndEditDoctorVisitPatient: BaseUrl + "9091/patient/viewAndEditDoctorVisitPatient",
    getDocumentsPatientProfile: BaseUrl + "9091/profile/getDocuments",
    updateDocumentsPatientProfile: BaseUrl + "9091/profile/documents",
    getAllPatient: BaseUrl + "9091/common/getAllPatient",
    getAllDiagnosis: BaseUrl + "9091/common/getAllDiagnosis",
    getAllMedicine: BaseUrl + "9091/common/getAllMedicine",
    getAllLab1Report: BaseUrl + "9091/common/getAllLab1Report",
    getAllDoctor: BaseUrl + "9091/common/getAllDoctor",
    gender: BaseUrl + "9091/common/gender",
    workStatus: BaseUrl + "9091/common/workStatus",
    employmentStatus: BaseUrl + "9091/common/employmentStatus",
    maritalStatus: BaseUrl + "9091/common/maritalStatus",
    // getAllLaboratoryReports: BaseUrl + '9093/lab/getAllLabReport',
    getAllLaboratoryReports: BaseUrl + "9091/patient/getAllLabReport?page=0&size=1000",
    viewLaboratoryReport: BaseUrl + "9093/lab/getLabReportByLabUser",
    // laboratoryIncomingBookingRequest: BaseUrl + '9093/labProfile/getAllLab',
    laboratoryIncomingBookingRequest: BaseUrl + "9093/labProfile/getAllLab?page=0&size=1000",
    viewAndEditLaboratory: BaseUrl + "9093/labProfile/viewAndEditLab",
    // getAllLabReport: BaseUrl + '9091/patient/getAllLabReport',
    getAllLabReport: BaseUrl + "9091/patient/getAllLabReport",
    ViewLabReport: BaseUrl + "9091/patient/ViewLabReport",
    getLabProfileProfessionalData: BaseUrl + "9093/labProfile/getProfessionalData",
    // getAllLab: BaseUrl + '9093/labProfile/getAllLab',
    getAllLab: BaseUrl + "9091/patient/getAllLabReport?page=0&size=1000",
    // getAllLabPatient: BaseUrl + '9091/patient/getAllLabPatient',
    getAllLabPatient: BaseUrl + "9091/patient/getAllLabPatient?page=0&size=1000",
    // getAppointmentDoctor: BaseUrl + '9092/doctor/getAppointmentDoctor',
    getAppointmentDoctor: BaseUrl + "9092/doctor/getAppointmentDoctor?page=0&size=1000",
    viewAndEditAppointmentDoctor: BaseUrl + "9092/doctor/viewAndEditAppointmentDoctor",
    addOrEditLab: BaseUrl + "9091/common/addOrEditLab",
    labStatusChange: BaseUrl + "9091/common/labStatusChange",
    viewAndEditDoctorVisit: BaseUrl + "9092/doctor/viewAndEditDoctorVisit",
    getLaboratoryData: BaseUrl + "9093/labProfile/getLaboratoryData",
    addOrEditLabReportByLabUser: BaseUrl + "9093/laboratory/addOrEditLabReportByLabUser",
    addOrEditReportByLabUser: BaseUrl + "9093/laboratory/addOrEditReportByLabUser",
    getAllLab1ReportByLab: BaseUrl + "9091/common/getAllLab1ReportByLab",
    updateProfessionalLaboratoryProfile: BaseUrl + "9093/labProfile/professional",
    updateLaboratoryProfile: BaseUrl + "9093/labProfile/laboratory",
    appointmentStatusChange: BaseUrl + "9091/common/appointmentStatusChange",
    getAllFacilityByPerameter: BaseUrl + "9091/common/getAllFacilityByPerameter",
    viewAndEditLabPatient: BaseUrl + "9091/patient/viewAndEditLabPatient",
    getalllabreportbyparamter: BaseUrl + "9091/common/getAllLab1ReportByperameter",
    getallmedicinebyparameter: BaseUrl + "9091/common/getAllMedicineByperameter",
    // getAllLabReportWithoutBook: BaseUrl + '9093/laboratory/getAllLabReportWithoutBook',
    getAllLabReportWithoutBook: BaseUrl + "9093/laboratory/getAllLabReportWithoutBook?page=0&size=1000",
    LabViewLabReport: BaseUrl + "9093/laboratory/ViewLabReport",
    updatelabdemographicprofile: BaseUrl + "9093/labProfile/demographic",
    getlabdemographicdata: BaseUrl + "9093/labProfile/getDemographicData",
    getalldoctorbyparameter: BaseUrl + "9091/common/getAllDoctorByperameter",
    //fees
    getfeesofdoctor: BaseUrl + "9091/patient/getDoctorFees",
    getPharmaAppointments: BaseUrl + "9091/patient/getApptList?page=0&size=1000",
    getpharmadelivered: BaseUrl + "9091/patient/pharmadelivered?page=0&size=1000",
    getpharmaview: BaseUrl + "9091/patient/pharmalistview?page=0&size=1000",
    getpatientreports: BaseUrl + "9092/doctor/getPatientReport",
    downloadfilepationteport: BaseUrl + "9090/auth/download?fileName=",
    existspationreport: BaseUrl + "9090/auth/exits?fileName=",
    getAllMedicalStore: BaseUrl + "9091/patient/getAllMedicalStore",
    getMedByPharma: BaseUrl + "9091/common/getMedByPharmaID",
    getmedicineboughtlist: BaseUrl + "9091/patient/getmedicineboughtlist",
    getpharmadeliverdpharma: BaseUrl + "9094/medicalcenter/getPharmaDeliveries?page=0&size=1000",
    getmedicinesrequest: BaseUrl + "9094/medicalcenter/getApptList?page=0&size=1000",
    postmedicinesrequestlistview: BaseUrl + "9094/medicalcenter/medicineboughtview",
    getpharmalistview: BaseUrl + "9091/patient/pharmalistview",
    postmedicinerequestviewapproved: BaseUrl + "9091/common/pharmastatuschangeurl",
    postmedicinestracking: BaseUrl + "9091/common/pharmastatuschangeurlfortracking",
    getLabReportMaster: BaseUrl + "9093/laboratory/getLabReportMaster?page=0&size=1000",
    addReportFees: BaseUrl + "9093/laboratory/addReportFees",
    getLabReportByid: BaseUrl + "9093/laboratory/getLabReportByid",
    getlistmedicineinventory: BaseUrl + "9094/medicalcenter/listMedicineInventory?page=0&size=1000",
    getallmedicineinventory: BaseUrl + "9091/common/getAllMedicine",
    postaddmedicineinventory: BaseUrl + "9094/medicalcenter/addMedicineInventory",
    postaddnewmedicinename: BaseUrl + "9094/medicalcenter/addNewMedicine",
    viewemedicineinventory: BaseUrl + "9094/medicalcenter/viewMedicineInventory",
    addNewReport: BaseUrl + "9093/laboratory/addNewReport",
    postdocspecilality: BaseUrl + "9092/doctor/addEditDocSpclty",
    getPatientDemographicData: BaseUrl + "9091/profile/getPatientDemographicData",
    generateChecksum: "http://client.attuneinfocom.com/PaytmPaymentGateway/generate_checksum_ionic.php",
    getTransactionHistory: BaseUrl + "9092/doctor/getTransactionHistory",
    fcmbackend: BaseUrl + "9091/common/notification/fcm",
    fcmsend: BaseUrl + "9091/common/send",
    getAllLabTransaction: BaseUrl + "9093/labProfile/getAllLabTransaction?page=0&size=5",
    otpuser: BaseUrl + "9090/auth/otpuser",
    getAllCoupons: BaseUrl + "9091/common/getAllCoupons",
    applyCouponCode: BaseUrl + "9091/common/applyCouponCode",
    getReportByLab: BaseUrl + "9091/common/getReportByLab",
    applyLabCouponCode: BaseUrl + "9091/common/applyLabCouponCode",
    pharmaimgupload: BaseUrl + "9091/patient/saveimagepharma",
    getAllTimeZone: BaseUrl + "9091/common/getAllTimeZone",
    getDoctorsForRefference: BaseUrl + "9092/doctor/getDoctorsForRefference",
    getAllPatientLocation: BaseUrl + "9091/common/getAllPatientLocation",
    getallavailabaledoctor: BaseUrl + "9091/common/getallavailabaledoctor",
    getAllDoctorByLocationAndFacility: BaseUrl + "9091/common/getAllDoctorByLocationAndFacility",
    getAllPharmaTransactionHistory: BaseUrl + "9094/medicalcenter/getAllPharmaTransactionHistory",
    getAppointmentSchedule: BaseUrl + "9091/common/getAppointmentSchedule",
    getLatLong: BaseUrl + "9091/common/getLatLong"
};
/*
export const APIName
= {
  login: 'http://203.88.147.222:9090/auth/login',
  signup: 'http://203.88.147.222:9090/auth/userRegistration',
  forgotpassword: 'http://203.88.147.222:9090/auth/forgotPassword',
  getAllFacility: "http://203.88.147.222:9091/common/getAllFacility",
  getAllDoctorByLocationAndFacility: 'http://203.88.147.222:9091/common/getAllDoctorByLocationAndFacility',
  getAllReportByFacilityProvider: 'http://203.88.147.222:9091/common/getAllReportByFacilityProvider',
  getAllLocationByFacility: 'http://203.88.147.222:9091/common/getAllLocationByFacility',
  getAllSpecialityByLocationAndFacility: 'http://203.88.147.222:9091/common/getAllSpecialityByLocationAndFacility',
  getAllDoctorByLocationAndspeciality: 'http://203.88.147.222:9091/common/getAllDoctorByLocationAndspeciality',
  appointmentType: 'http://203.88.147.222:9091/common/appointmentType',
  appointmentReason: 'http://203.88.147.222:9091/common/appointmentReason',
  labappointmentReson: 'http://203.88.147.222:9091/common/labappointmentReson',
  // getAppointmentPatient: 'http://203.88.147.222:9091/patient/getAppointmentPatient',
  getAppointmentPatient: 'http://203.88.147.222:9091/patient/getAppointmentPatient?page=0&size=1000',
  addOrEditAppointment: 'http://203.88.147.222:9091/common/addOrEditAppointment',
  viewAndEditAppointmentPatient: 'http://203.88.147.222:9091/patient/viewAndEditAppointmentPatient',
  changePassword: 'http://203.88.147.222:9090/auth/changePassword',
  updateExtendedPatientProfile: 'http://203.88.147.222:9091/profile/extended',
  updateExtendedDoctorProfile: 'http://203.88.147.222:9091/profile/extended',
  getExtendedPatientProfile: 'http://203.88.147.222:9091/profile/getExtendedData',
  getExtendedDoctorProfile: 'http://203.88.147.222:9091/profile/getExtendedData',
  updatePersonalDoctorProfile: 'http://203.88.147.222:9091/profile/personal',
  updatePersonalPatientProfile: 'http://203.88.147.222:9091/profile/personal',
  getPersonalDoctorProfile: 'http://203.88.147.222:9091/profile/getPersonalData',
  getPersonalPatientProfile: 'http://203.88.147.222:9091/profile/getPersonalData',
  getLocations: 'http://203.88.147.222:9091/common/getAllLocation',
  getDemographicData:  'http://203.88.147.222:9091/profile/getDemographicData',
  updatePatientDemographicProfile:  'http://203.88.147.222:9091/profile/demographic',
  getAllFacilityDoctor: 'http://203.88.147.222:9091/common/getAllFacilityDoctor',
  getAllFacilityByReport: 'http://203.88.147.222:9091/common/getAllFacilityByReport',
  getAllLocationByFacilityAndDoctor: 'http://203.88.147.222:9091/common/getAllLocationByFacilityAndDoctor',
  addOrEditDoctorVisit: 'http://203.88.147.222:9092/doctor/addOrEditDoctorVisit',
  // getDoctorVisitlist: 'http://203.88.147.222:9092/doctor/getAllDoctorVisit',
  getDoctorVisitlist: 'http://203.88.147.222:9092/doctor/getAllDoctorVisit?page=0&size=1000',

  // getAllDoctorVisitPatient: 'http://203.88.147.222:9091/patient/getAllDoctorVisitPatient',
  getAllDoctorVisitPatient:'http://203.88.147.222:9091/patient/getAllDoctorVisitPatient?page=0&size=1000',
  viewAndEditDoctorVisitPatient: 'http://203.88.147.222:9091/patient/viewAndEditDoctorVisitPatient',
  getDocumentsPatientProfile: 'http://203.88.147.222:9091/profile/getDocuments',
  updateDocumentsPatientProfile: 'http://203.88.147.222:9091/profile/documents',
  getAllPatient: 'http://203.88.147.222:9091/common/getAllPatient',
  getAllDiagnosis: 'http://203.88.147.222:9091/common/getAllDiagnosis',
  getAllMedicine: 'http://203.88.147.222:9091/common/getAllMedicine',
  getAllLab1Report: 'http://203.88.147.222:9091/common/getAllLab1Report',
  getAllDoctor: 'http://203.88.147.222:9091/common/getAllDoctor',
  gender: 'http://203.88.147.222:9091/common/gender',
  workStatus: 'http://203.88.147.222:9091/common/workStatus',
  employmentStatus: 'http://203.88.147.222:9091/common/employmentStatus',
  maritalStatus: 'http://203.88.147.222:9091/common/maritalStatus',
  // getAllLaboratoryReports: 'http://203.88.147.222:9093/lab/getAllLabReport',
  getAllLaboratoryReports:'http://203.88.147.222:9091/patient/getAllLabReport?page=0&size=1000',

  viewLaboratoryReport: 'http://203.88.147.222:9093/lab/getLabReportByLabUser',
  // laboratoryIncomingBookingRequest: 'http://203.88.147.222:9093/labProfile/getAllLab',
  laboratoryIncomingBookingRequest: 'http://203.88.147.222:9093/labProfile/getAllLab?page=0&size=1000',

  viewAndEditLaboratory: 'http://203.88.147.222:9093/labProfile/viewAndEditLab',
  // getAllLabReport: 'http://203.88.147.222:9091/patient/getAllLabReport',
  getAllLabReport:'http://203.88.147.222:9091/patient/getAllLabReport?page=0&size=1000',
  ViewLabReport: 'http://203.88.147.222:9091/patient/ViewLabReport',
  getLabProfileProfessionalData: 'http://203.88.147.222:9093/labProfile/getProfessionalData',
  // getAllLab: 'http://203.88.147.222:9093/labProfile/getAllLab',
  getAllLab:'http://203.88.147.222:9091/patient/getAllLabReport?page=0&size=1000',

  // getAllLabPatient: 'http://203.88.147.222:9091/patient/getAllLabPatient',
  getAllLabPatient: 'http://203.88.147.222:9091/patient/getAllLabPatient?page=0&size=1000',
  // getAppointmentDoctor: 'http://203.88.147.222:9092/doctor/getAppointmentDoctor',
  getAppointmentDoctor: 'http://203.88.147.222:9092/doctor/getAppointmentDoctor?page=0&size=1000',
  viewAndEditAppointmentDoctor: "http://203.88.147.222:9092/doctor/viewAndEditAppointmentDoctor",
  addOrEditLab: 'http://203.88.147.222:9091/common/addOrEditLab',
  labStatusChange: " http://203.88.147.222:9091/common/labStatusChange",
  viewAndEditDoctorVisit: "http://203.88.147.222:9092/doctor/viewAndEditDoctorVisit",
  getLaboratoryData: 'http://203.88.147.222:9093/labProfile/getLaboratoryData',
  addOrEditLabReportByLabUser: "http://203.88.147.222:9093/laboratory/addOrEditLabReportByLabUser",
  addOrEditReportByLabUser: "http://203.88.147.222:9093/laboratory/addOrEditReportByLabUser",
  getAllLab1ReportByLab: "http://203.88.147.222:9091/common/getAllLab1ReportByLab",
  updateProfessionalLaboratoryProfile: 'http://203.88.147.222:9093/labProfile/professional',
  updateLaboratoryProfile: 'http://203.88.147.222:9093/labProfile/laboratory',
  appointmentStatusChange: "http://203.88.147.222:9091/common/appointmentStatusChange",
  getAllFacilityByPerameter: 'http://203.88.147.222:9091/common/getAllFacilityByPerameter',
  viewAndEditLabPatient:'http://203.88.147.222:9091/patient/viewAndEditLabPatient',
  getalllabreportbyparamter:' http://203.88.147.222:9091/common/getAllLab1ReportByperameter',
  getallmedicinebyparameter: 'http://203.88.147.222:9091/common/getAllMedicineByperameter',
  // getAllLabReportWithoutBook: 'http://203.88.147.222:9093/laboratory/getAllLabReportWithoutBook',
   getAllLabReportWithoutBook: 'http://203.88.147.222:9093/laboratory/getAllLabReportWithoutBook?page=0&size=1000',
   
  LabViewLabReport: 'http://203.88.147.222:9093/laboratory/ViewLabReport',
  updatelabdemographicprofile: 'http://203.88.147.222:9093/labProfile/demographic',
  getlabdemographicdata: ' http://203.88.147.222:9093/labProfile/getDemographicData',
  getalldoctorbyparameter: 'http://203.88.147.222:9091/common/getAllDoctorByperameter',

}
*/
var loader;
function showToast(msg, toastCtrl) {
    var toast = toastCtrl.create({
        message: msg,
        duration: 3000,
        position: "top"
    });
    toast.present();
}
function showAlert(msg, alertCtrl, commonStr, noOfButton) {
    if (noOfButton === void 0) { noOfButton = 1; }
    return new Promise(function (resolve, reject) {
        switch (noOfButton) {
            case 1:
                {
                    // const confirm = alertCtrl.create({
                    //   title: commonStr,
                    //   subTitle: msg,
                    //   buttons: [
                    //     {
                    //       text: 'OK'
                    //     }
                    //   ]
                    // }).present();
                }
                break;
            case 2:
                {
                    // const confirm = alertCtrl.create({
                    //   title: commonStr,
                    //   subTitle: msg,
                    //   buttons: [
                    //     {
                    //       text: 'NO',
                    //       role: 'cancel',
                    //       handler:_=> resolve(false)
                    //     },
                    //     {
                    //       text: 'YES',
                    //       handler:_=> resolve(true)
                    //     }
                    //   ]
                    // }).present();
                }
                break;
            default:
                console.log("IF");
        }
    });
}
// export function showAlert(msg:string,alertCtrl:AlertController,commonStr?:string,noOfButton=1):Promise<boolean>
// {
//           return new Promise((resolve, reject) =>{
//              alertCtrl.create({
//                 title: commonStr,
//                 subTitle: msg
//               }).present();
//               console.log("IN Promisew");
//   });
// }
function showProgressbar(loaderCtrl) {
    if (!loader) {
        loader = loaderCtrl.create({
            content: "Please wait..."
        });
        loader.present();
    }
}
function hideProgressbar(loaderCtrl) {
    if (loader) {
        loader.dismiss();
        loader = null;
    }
}
function showActionSheetPhoto(actionSheetCtrl) {
    return new Promise(function (resolve, reject) {
        var actionSheet = actionSheetCtrl.create({
            title: "Choose photo options",
            buttons: [
                {
                    text: "From Camera",
                    handler: function () {
                        console.log("From Camera clicked");
                        resolve(1);
                    }
                },
                {
                    text: "From Gallery",
                    handler: function () {
                        console.log("From Gallery clicked");
                        resolve(0);
                    }
                },
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                }
            ]
        });
        actionSheet.present();
    });
}
//# sourceMappingURL=commonfunction.js.map

/***/ }),

/***/ 440:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ValidationProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

/*
  Generated class for the ValidationProvider provider.

  See https://angular.io/guide/dependency-injection for more info on providers
  and Angular DI.
*/
var ValidationProvider = /** @class */ (function () {
    function ValidationProvider() {
    }
    ValidationProvider.getValidatorErrorMessage = function (validatorName, validatorValue) {
        var config = {
            'required': 'Required',
            'invalidCreditCard': 'Is invalid credit card number',
            'invalidEmailAddress': 'Invalid email address',
            'invalidPassword': 'Invalid password. Password must be at least 6 characters long, and contain a number.',
            'minlength': "Minimum length " + validatorValue.requiredLength,
            'maxlength': "Maximum length " + validatorValue.requiredLength,
            'pattern': "Invalid name",
            'invalidPhoneNumber': 'Invalid phone number',
            'invalidPasswordMatch': 'Invalid password. both Password must be same'
        };
        return config[validatorName];
    };
    ValidationProvider.ConfirmPasswordMatchValidator = function (control) {
        if (!control || !control.root.value['password']) {
            return null;
        }
        if (control.value !== control.root.value['password']) {
            return { 'invalidPasswordMatch': true };
        }
        return null;
    };
    ValidationProvider.PasswordMatchValidator = function (control) {
        if (!control || !control.root.value['confirmpassword']) {
            return null;
        }
        if (control.value !== control.root.value['confirmpassword']) {
            return { 'invalidPasswordMatch': true };
        }
        return null;
    };
    ValidationProvider.phoneNumberValidator = function (control) {
        if (control.value.match(/[0-9]+/)) {
            return null;
        }
        else {
            return { 'invalidPhoneNumber': true };
        }
    };
    ValidationProvider.creditCardValidator = function (control) {
        // Visa, MasterCard, American Express, Diners Club, Discover, JCB
        if (control.value.match(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$/)) {
            return null;
        }
        else {
            return { 'invalidCreditCard': true };
        }
    };
    ValidationProvider.emailValidator = function (control) {
        // RFC 2822 compliant regex
        if (control.value.match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)) {
            return null;
        }
        else {
            return { 'invalidEmailAddress': true };
        }
    };
    ValidationProvider.passwordValidator = function (control) {
        // {6,100}           - Assert password is between 6 and 100 characters
        // (?=.*[0-9])       - Assert a string has at least one number
        if (control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {
            return null;
        }
        else {
            return { 'invalidPassword': true };
        }
    };
    ValidationProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
    ], ValidationProvider);
    return ValidationProvider;
}());

//# sourceMappingURL=validation.js.map

/***/ }),

/***/ 52:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ViewappointmentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__addappointment_addappointment__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__editappointment_editappointment__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__rebookappointment_rebookappointment__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__addpharmaappointment_addpharmaappointment__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__addbooklab_addbooklab__ = __webpack_require__(74);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










/**
 * Generated class for the ViewappointmentPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ViewappointmentPage = /** @class */ (function () {
    function ViewappointmentPage(navCtrl, navParams, api, alertCtrl, datepipe) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.datepipe = datepipe;
        this.ViewAppointment = [];
        this.item = [];
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        this.item = this.navParams.get("item");
        console.log("POP");
        console.log(this.item);
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Patient") {
            var petId = { patAppointmentID: this.item.patAppointmentID };
            this.api
                .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditAppointmentPatient, petId)
                .then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    _this.ViewAppointment = resp.data;
                    _this.ViewAppointment.facilityCenterType =
                        _this.ViewAppointment.facilityCenterType +
                            " - " +
                            _this.ViewAppointment.fcLocationName;
                    _this.Time = _this.convertTimeTo(resp.data.patAppTimeFrom);
                    _this.Date = _this.convertDate(resp.data.patAppDate);
                }
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
            var petId = { patAppointmentID: this.item.patAppointmentID };
            this.api
                .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditAppointmentDoctor, petId)
                .then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    _this.ViewAppointment = resp.data;
                    _this.ViewAppointment.facilityCenterType =
                        _this.ViewAppointment.facilityCenterType +
                            " - " +
                            _this.ViewAppointment.fcLocationName;
                    _this.Time = _this.convertTimeTo(resp.data.patAppTimeFrom);
                    _this.Date = _this.convertDate(resp.data.patAppDate);
                }
            });
        }
    }
    ViewappointmentPage.prototype.goBack = function () {
        this.navCtrl.pop();
    };
    ViewappointmentPage.prototype.ionViewDidLoad = function () { };
    ViewappointmentPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__addappointment_addappointment__["a" /* AddappointmentPage */]);
    };
    ViewappointmentPage.prototype.editItem = function (id) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__editappointment_editappointment__["a" /* EditappointmentPage */], { patAppointmentID: id });
    };
    ViewappointmentPage.prototype.Canceled = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to cancel?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Cancel"
                            patientAppointmentStatus: "Cancel",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                var petId = { patAppointmentID: _this.item.patAppointmentID };
                                _this.api
                                    .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditAppointmentDoctor, petId)
                                    .then(function (resp) {
                                    if (resp.status === 500) {
                                        // showToast( resp.error.message, this.toastCtrl)
                                    }
                                    else {
                                        _this.ViewAppointment = resp.data;
                                        console.log("wbfbwfbuiwbuiwbfuwb - > " +
                                            JSON.stringify(_this.ViewAppointment));
                                        _this.Time = _this.convertTimeTo(resp.data.patAppTimeFrom);
                                        _this.Date = _this.convertDate(resp.data.patAppDate);
                                    }
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    ViewappointmentPage.prototype.checkNulldata = function (data) {
        if (data.fclProviderMapID === null) {
            data.fclProviderMapID = "";
        }
        if (data.specialityID === null) {
            data.specialityID = "";
        }
        if (data.patAppDate === null) {
            data.patAppDate = 1524123001;
        }
        if (data.patAppTimeFrom === null) {
            data.patAppTimeFrom = 1524123001;
        }
        if (data.patAppTimeFrom === null) {
            data.patAppTimeFrom = 1524123001;
        }
        if (data.patAppType === null) {
            data.patAppType = "New";
        }
        if (data.patAppReason === null) {
            data.patAppReason = "BP";
        }
        if (data.patAppDescription === null) {
            data.patAppDescription = "dsfdsfdf";
        }
        return data;
    };
    ViewappointmentPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to reject?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Rejected"
                            patientAppointmentStatus: "Rejected",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                var petId = { patAppointmentID: _this.item.patAppointmentID };
                                _this.api
                                    .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditAppointmentDoctor, petId)
                                    .then(function (resp) {
                                    if (resp.status === 500) {
                                        // showToast( resp.error.message, this.toastCtrl)
                                    }
                                    else {
                                        _this.ViewAppointment = resp.data;
                                        _this.Time = _this.convertTimeTo(resp.data.patAppTimeFrom);
                                        _this.Date = _this.convertDate(resp.data.patAppDate);
                                    }
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    ViewappointmentPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to approve?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        // console.log('Ok clicked');
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Approved"
                            patientAppointmentStatus: "Approved",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                var petId = { patAppointmentID: _this.item.patAppointmentID };
                                _this.api
                                    .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditAppointmentDoctor, petId)
                                    .then(function (resp) {
                                    if (resp.status === 500) {
                                        // showToast( resp.error.message, this.toastCtrl)
                                    }
                                    else {
                                        _this.ViewAppointment = resp.data;
                                        _this.Time = _this.convertTimeTo(resp.data.patAppTimeFrom);
                                        _this.Date = _this.convertDate(resp.data.patAppDate);
                                    }
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    ViewappointmentPage.prototype.Addvisit = function (data) {
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to Add visit?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    ViewappointmentPage.prototype.Edit = function (data) {
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to edit?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    ViewappointmentPage.prototype.Cancel = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to cancel?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        //this.navCtrl.push(SignupPage,{item:data});
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            // "patAppointmentID": d.patAppointmentID,
                            // "patAppStatus": "Cancel"
                            patientAppointmentStatus: "Cancel",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                var petId = { patAppointmentID: _this.item.patAppointmentID };
                                _this.api
                                    .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditAppointmentDoctor, petId)
                                    .then(function (resp) {
                                    if (resp.status === 500) {
                                        // showToast( resp.error.message, this.toastCtrl)
                                    }
                                    else {
                                        _this.ViewAppointment = resp.data;
                                        _this.Time = _this.convertTimeTo(resp.data.patAppTimeFrom);
                                        _this.Date = _this.convertDate(resp.data.patAppDate);
                                    }
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    ViewappointmentPage.prototype.ReBook = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to re-book?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var id = d.patAppointmentID;
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__rebookappointment_rebookappointment__["a" /* RebookappointmentPage */], { patAppointmentID: id });
                    }
                }
            ]
        });
        alert.present();
    };
    ViewappointmentPage.prototype.convertDate = function (date) {
        if (date) {
            var dateConvert = new Date(parseInt(date));
            var Year = dateConvert.getUTCFullYear();
            var Month = dateConvert.getUTCMonth() + 1;
            var Day = dateConvert.getUTCDate();
            return Day + "-" + Month + "-" + Year;
        }
        else {
            return "";
        }
    };
    ViewappointmentPage.prototype.convertTimeTo = function (time) {
        if (time) {
            // var dateTime = new Date(parseInt(time));
            var dateTime = new Date(time);
            // var Hours= dateTime.getUTCHours() ;
            // var Minutes= dateTime.getUTCMinutes();
            // var Seconds= dateTime.getUTCSeconds();
            var Hours = dateTime.getHours();
            var Minutes = dateTime.getMinutes();
            var Seconds = dateTime.getSeconds();
            return Hours + ":" + Minutes;
        }
        else {
            return "";
        }
    };
    ViewappointmentPage.prototype.bookPharma = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__addpharmaappointment_addpharmaappointment__["a" /* AddPharmaAppointmentPage */]);
    };
    ViewappointmentPage.prototype.bookLab = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_9__addbooklab_addbooklab__["a" /* AddbooklabPage */], { flagType: 2 });
    };
    ViewappointmentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-viewappointment",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/viewappointment/viewappointment.html"*/'<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>View Appointment</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="view-list">\n    <div *ngIf="selectRole == \'Patient\'">\n      <div class="app-title-main">\n        <h3 _ngcontent-c2="" class="app-title">\n          {{ ViewAppointment.providerName }}\n        </h3>\n        <ul class="nav ml-auto align-items-center">\n          <li class="nav-item">\n            <i class="fa fa-calendar"></i>\n            <span>{{ Date }}</span>\n          </li>\n          <li class="nav-item ml-3">\n            <i class="fa fa-clock-o"></i>\n            <span> {{ Time }}</span>\n          </li>\n        </ul>\n      </div>\n      <div class="view-lst-row doc-vis-view border-0">\n        <div class="vis-detail">\n          <div class="body">\n            <h6 class="title mt-0 mb-0">Appointment Location</h6>\n            <ul class="mb-0">\n              <li>{{ ViewAppointment.fcLocationName }}</li>\n            </ul>\n          </div>\n          <div class="vis-icon">\n            <img src="assets/images/app-location-icon.png" />\n          </div>\n        </div>\n      </div>\n\n      <div class="view-lst-row doc-vis-view border-0">\n        <div class="vis-detail">\n          <div class="body">\n            <h6 class="title mt-0 mb-0">Appointment Time</h6>\n            <ul class="mb-0">\n              <li>{{Time}}</li>\n            </ul>\n          </div>\n          <div class="vis-icon">\n            <img src="assets/images/app-time-icon.png" />\n          </div>\n        </div>\n      </div>\n\n      <div class="view-lst-row doc-vis-view border-0">\n        <div class="vis-detail">\n          <div class="body">\n            <h6 class="title mt-0 mb-0">Speciality</h6>\n            <ul class="mb-0">\n              <li>{{ ViewAppointment.specialityName }}</li>\n            </ul>\n          </div>\n          <div class="vis-icon">\n            <img src="assets/images/speciality-icon.png" />\n          </div>\n        </div>\n      </div>\n\n      <div class="view-lst-row doc-vis-view border-0">\n        <div class="vis-detail">\n          <div class="body">\n            <h6 class="title mt-0 mb-0">Reason for Visit</h6>\n            <ul class="mb-0">\n              <li>{{ ViewAppointment.patAppReason }}</li>\n            </ul>\n          </div>\n          <div class="vis-icon">\n            <img src="assets/images/visit-icon.png" />\n          </div>\n        </div>\n      </div>\n\n      <div class="view-lst-row doc-vis-view border-0">\n        <div class="vis-detail">\n          <div class="body">\n            <h6 class="title mt-0 mb-0">Extra Detail</h6>\n            <ul class="mb-0">\n              <li>{{ ViewAppointment.patAppDescription }}</li>\n            </ul>\n          </div>\n          <div class="vis-icon">\n            <img src="assets/images/extra-details-icon.png" />\n          </div>\n        </div>\n\n        <!-- <div class="view-list-val  pull-right">\n          <span class="accepted-lbl">{{ ViewAppointment.patAppStatus }}</span>\n        </div> -->\n        <!-- <ion-item *ngIf="ViewAppointment.patAppStatus == \'Pending\'">\n          <button\n            ion-button\n            color="calm"\n            (click)="editItem(ViewAppointment.patAppointmentID)"\n          >\n            Edit\n          </button>\n        </ion-item>\n        <ion-item *ngIf="ViewAppointment.patAppStatus == \'Completed\'">\n          <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n        </ion-item>\n        <ion-item *ngIf="ViewAppointment.patAppStatus == \'Approved\'">\n          <button ion-button color="danger" (click)="Cancel(ViewAppointment)">\n            Cancel\n          </button>\n        </ion-item>\n        <ion-item *ngIf="ViewAppointment.patAppStatus == \'Rejected\'">\n          <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n        </ion-item>\n        <ion-item *ngIf="ViewAppointment.patAppStatus == \'Cancel\'">\n          <button ion-button (click)="ReBook(ViewAppointment)">Re-Book</button>\n        </ion-item> -->\n\n        <!-- <div class="form-button bg-gray pt-25 text-center">\n          <button\n            type="button"\n            class="cmn-thm-btn mr-25"\n            (click)="bookPharma()"\n          >\n            Book Pharma\n          </button>\n          <button type="button" class="cmn-wht-btn" (click)="bookLab()">\n            Book Laboratory\n          </button>\n        </div> -->\n      </div>\n    </div>\n\n    <div class="view-lst-row doc-vis-view border-0">\n      <div class="vis-detail">\n        <div class="body">\n          <h6 class="title mt-0 mb-0">Appointment Status</h6>\n          <ul class="mb-0">\n            <li>{{ ViewAppointment.patAppStatus }}</li>\n          </ul>\n        </div>\n        <div class="vis-icon">\n          <img src="assets/images/app-status-icon.png" />\n        </div>\n      </div>\n    </div>\n\n    <div class="form-button bg-gray pt-25 mb-20 text-center">\n      <button class="btn cmn-thm-btn mr-4" (click)="bookPharma()">\n        Book Pharma\n      </button>\n      <button type="button" class="cmn-wht-btn mr-4" (click)="bookLab()">\n        Book Laboratary\n      </button>\n      <button type="button" class="cmn-wht-btn mr-4">\n        View Prescription\n      </button>\n    </div>\n  </div>\n\n  <!-- Appointment for Doctor -->\n\n  <div *ngIf="selectRole == \'Doctor\'">\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Appointment Date\n      </div>\n      <div class="view-list-val pull-right">\n        {{ Date }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Appointment Location\n      </div>\n      <div class="view-list-val pull-right">\n        {{ ViewAppointment.fcLocationName }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Appointment Time\n      </div>\n      <div class="view-list-val pull-right">\n        {{ Time }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Patient Name\n      </div>\n      <div class="view-list-val pull-right">\n        {{ ViewAppointment.name }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Facility\n      </div>\n      <div class="view-list-val pull-right">\n        {{ ViewAppointment.facilityCenterName }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Case\n      </div>\n      <div class="view-list-val pull-right">\n        {{ ViewAppointment.patAppType }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Reason For Visit\n      </div>\n      <div class="view-list-val pull-right">\n        {{ ViewAppointment.patAppReason }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Additional Detail\n      </div>\n      <div class="view-list-val pull-right">\n        {{ ViewAppointment.patAppDescription }}\n      </div>\n    </div>\n    <div class="view-lst-row clearfix">\n      <div class="view-lst-lbl pull-left">\n        Status\n      </div>\n\n      <div\n        *ngIf="ViewAppointment.patAppStatus == \'Approved\'"\n        class="view-list-val pull-right"\n      >\n        <span class="apmnt-lbl accepted">\n          {{ ViewAppointment.patAppStatus }}\n        </span>\n      </div>\n\n      <div\n        *ngIf="ViewAppointment.patAppStatus == \'Cancel\'"\n        class="view-list-val pull-right"\n      >\n        <span class="apmnt-lbl cancelled">\n          {{ ViewAppointment.patAppStatus }}\n        </span>\n      </div>\n      <div\n        *ngIf="ViewAppointment.patAppStatus == \'Pending\'"\n        class="view-list-val pull-right"\n      >\n        <span class="apmnt-lbl pending">\n          {{ ViewAppointment.patAppStatus }}\n        </span>\n      </div>\n\n      <div\n        *ngIf="ViewAppointment.patAppStatus == \'Rejected\'"\n        class="view-list-val pull-right"\n      >\n        <span class="apmnt-lbl rejected">\n          {{ ViewAppointment.patAppStatus }}\n        </span>\n      </div>\n      <div\n        *ngIf="ViewAppointment.patAppStatus == \'Completed\'"\n        class="view-list-val pull-right"\n      >\n        <span class="apmnt-lbl accepted">\n          {{ ViewAppointment.patAppStatus }}\n        </span>\n      </div>\n\n      <!-- <div class="view-list-val pull-right">\n          <span class="accepted-lbl">{{ ViewAppointment.patAppStatus }}</span>\n        </div> -->\n    </div>\n    <ion-item *ngIf="ViewAppointment.patAppStatus == \'Pending\'">\n      <button ion-button (click)="Approved(ViewAppointment)">Approve</button>\n      <button ion-button color="danger" (click)="Rejected(ViewAppointment)">\n        Reject\n      </button>\n      <button ion-button color="danger" (click)="Canceled(ViewAppointment)">\n        Cancel\n      </button>\n    </ion-item>\n    <ion-item *ngIf="ViewAppointment.patAppStatus == \'Approved\'">\n      <!-- <button ion-button (click)="Addvisit(ViewAppointment)">Add Visit</button> -->\n      <button ion-button color="danger" (click)="Canceled(ViewAppointment)">\n        Cancel\n      </button>\n    </ion-item>\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/viewappointment/viewappointment.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_6__angular_common__["d" /* DatePipe */]])
    ], ViewappointmentPage);
    return ViewappointmentPage;
}());

//# sourceMappingURL=viewappointment.js.map

/***/ }),

/***/ 533:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddpinlocationPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_geocoder_geocoder__ = __webpack_require__(112);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the AddpinlocationPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddpinlocationPage = /** @class */ (function () {
    function AddpinlocationPage(navCtrl, navParams, _GEOCODE, _FB, _PLATFORM) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this._GEOCODE = _GEOCODE;
        this._FB = _FB;
        this._PLATFORM = _PLATFORM;
        this.filter = 'Search by Coordinates';
        this.displayForward = true;
        this.displayReverse = false;
        this.form = _FB.group({
            'keyword': ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].required]
        });
        this.geoForm = _FB.group({
            'latitude': ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].required],
            'longitude': ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["g" /* Validators */].required]
        });
    }
    AddpinlocationPage.prototype.filterForm = function () {
        if (this.displayForward) {
            this.filter = 'Search by keyword';
            this.displayReverse = true;
            this.displayForward = false;
        }
        else {
            this.filter = 'Search by Co-ordinates';
            this.displayReverse = false;
            this.displayForward = true;
        }
    };
    AddpinlocationPage.prototype.performReverseGeocoding = function (val) {
        var _this = this;
        this._PLATFORM.ready()
            .then(function (data) {
            var latitude = parseFloat(_this.geoForm.controls["latitude"].value), longitude = parseFloat(_this.geoForm.controls["longitude"].value);
            _this._GEOCODE.reverseGeocode(latitude, longitude)
                .then(function (data) {
                _this.geocoded = true;
                _this.results = data;
            })
                .catch(function (error) {
                _this.geocoded = true;
                _this.results = error.message;
            });
        });
    };
    AddpinlocationPage.prototype.performForwardGeocoding = function (val) {
        var _this = this;
        this._PLATFORM.ready()
            .then(function (data) {
            var keyword = _this.form.controls["keyword"].value;
            _this._GEOCODE.forwardGeocode(keyword)
                .then(function (data) {
                _this.geocoded = true;
                _this.results = data;
            })
                .catch(function (error) {
                _this.geocoded = true;
                _this.results = error.message;
            });
        });
    };
    AddpinlocationPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddpinlocationPage');
    };
    AddpinlocationPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-addpinlocation',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/addpinlocation/addpinlocation.html"*/'<!--\n  Generated template for the AddpinlocationPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>Add pin Location</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n  <button\n  ion-button\n  block\n  color="secondary"\n  (click)="filterForm()">{{ filter }}</button>\n\n  <form\n  *ngIf="displayForward"\n  [formGroup]="form"\n  (ngSubmit)="performForwardGeocoding(form.value)">\n  <ion-list>\n     <ion-item margin-bottom>\n        <ion-label>Location</ion-label>\n        <ion-input\n           type="text"\n           formControlName="keyword"></ion-input>\n     </ion-item>\n\n\n     <ion-item margin-bottom>\n        <button\n           ion-button\n           color="primary"\n           text-center\n           block\n           [disabled]="!form.valid">Geocode this location</button>\n     </ion-item>\n\n  </ion-list>\n</form>\n\n\n<form\n*ngIf="displayReverse"\n[formGroup]="geoForm"\n(ngSubmit)="performReverseGeocoding(geoForm.value)">\n<ion-list>\n   <ion-item margin-bottom>\n      <ion-label>Latitude</ion-label>\n      <ion-input\n         type="text"\n         formControlName="latitude"></ion-input>\n   </ion-item>\n\n\n   <ion-item margin-bottom>\n      <ion-label>Longitude</ion-label>\n      <ion-input\n         type="text"\n         formControlName="longitude"></ion-input>\n   </ion-item>\n\n\n   <ion-item margin-bottom>\n      <button\n         ion-button\n         color="primary"\n         text-center\n         block\n         [disabled]="!geoForm.valid">Geocode this location</button>\n   </ion-item>\n\n</ion-list>\n</form>\n\n<section *ngIf="geocoded">\n   {{ results }}\n</section>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/addpinlocation/addpinlocation.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_geocoder_geocoder__["a" /* GeocoderProvider */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Platform */]])
    ], AddpinlocationPage);
    return AddpinlocationPage;
}());

//# sourceMappingURL=addpinlocation.js.map

/***/ }),

/***/ 534:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddresstopinmapPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the AddresstopinmapPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddresstopinmapPage = /** @class */ (function () {
    function AddresstopinmapPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    AddresstopinmapPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddresstopinmapPage');
    };
    AddresstopinmapPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-addresstopinmap',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/addresstopinmap/addresstopinmap.html"*/'<!--\n  Generated template for the AddresstopinmapPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>addresstopinmap</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/addresstopinmap/addresstopinmap.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], AddresstopinmapPage);
    return AddresstopinmapPage;
}());

//# sourceMappingURL=addresstopinmap.js.map

/***/ }),

/***/ 535:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DashBoardForHospitalPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the DashBoardForHospitalPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DashBoardForHospitalPage = /** @class */ (function () {
    function DashBoardForHospitalPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    DashBoardForHospitalPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DashBoardForHospitalPage');
    };
    DashBoardForHospitalPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-dash-board-for-hospital',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/dash-board-for-hospital/dash-board-for-hospital.html"*/'<!--\n  Generated template for the DashBoardForHospitalPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle right>\n    <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Hospital Dashboard</ion-title>\n    <ion-buttons left>\n    <button ion-button icon-only >\n    <ion-icon name="" class="header-logo"></ion-icon>\n    </button>\n  </ion-buttons>\n</ion-navbar>\n\n</ion-header>\n\n<ion-content padding>\n\n  good morning Hospital\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/dash-board-for-hospital/dash-board-for-hospital.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], DashBoardForHospitalPage);
    return DashBoardForHospitalPage;
}());

//# sourceMappingURL=dash-board-for-hospital.js.map

/***/ }),

/***/ 536:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HospitalclaimedinsuranceincomingapporvallistviewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the HospitalclaimedinsuranceincomingapporvallistviewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var HospitalclaimedinsuranceincomingapporvallistviewPage = /** @class */ (function () {
    function HospitalclaimedinsuranceincomingapporvallistviewPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    HospitalclaimedinsuranceincomingapporvallistviewPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad HospitalclaimedinsuranceincomingapporvallistviewPage');
    };
    HospitalclaimedinsuranceincomingapporvallistviewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-hospitalclaimedinsuranceincomingapporvallistview',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalclaimedinsuranceincomingapporvallistview/hospitalclaimedinsuranceincomingapporvallistview.html"*/'<!--\n  Generated template for the HospitalclaimedinsuranceincomingapporvallistviewPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>hospitalclaimedinsuranceincomingapporvallistview</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalclaimedinsuranceincomingapporvallistview/hospitalclaimedinsuranceincomingapporvallistview.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], HospitalclaimedinsuranceincomingapporvallistviewPage);
    return HospitalclaimedinsuranceincomingapporvallistviewPage;
}());

//# sourceMappingURL=hospitalclaimedinsuranceincomingapporvallistview.js.map

/***/ }),

/***/ 537:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HospitalprofilePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__hospitalprofiledemographic_hospitalprofiledemographic__ = __webpack_require__(250);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__hospitalprofileprofessional_hospitalprofileprofessional__ = __webpack_require__(251);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__hospitalchangepassword_hospitalchangepassword__ = __webpack_require__(249);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__hospitalbasicdetail_hospitalbasicdetail__ = __webpack_require__(248);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the HospitalprofilePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var HospitalprofilePage = /** @class */ (function () {
    function HospitalprofilePage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.tabPersonal = __WEBPACK_IMPORTED_MODULE_5__hospitalbasicdetail_hospitalbasicdetail__["a" /* HospitalbasicdetailPage */];
        this.tabDemographic = __WEBPACK_IMPORTED_MODULE_2__hospitalprofiledemographic_hospitalprofiledemographic__["a" /* HospitalprofiledemographicPage */];
        this.tabProfessional = __WEBPACK_IMPORTED_MODULE_3__hospitalprofileprofessional_hospitalprofileprofessional__["a" /* HospitalprofileprofessionalPage */];
        this.tabChangePassoword = __WEBPACK_IMPORTED_MODULE_4__hospitalchangepassword_hospitalchangepassword__["a" /* HospitalchangepasswordPage */];
        this.scrollableTabsopts = {};
        this.mySelectedIndex = navParams.data.tabIndex || 0;
    }
    HospitalprofilePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DoctorprofilePage');
    };
    HospitalprofilePage.prototype.refreshScrollbarTabs = function () {
        this.scrollableTabsopts = { refresh: true };
    };
    HospitalprofilePage.prototype.switchTabs = function (pos) {
        this.navCtrl.parent.setlect(pos);
    };
    HospitalprofilePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-hospitalprofile',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalprofile/hospitalprofile.html"*/'<style>\n    .tabbar::after {\n      content: none;\n    }\n  </style>\n  <ion-header>\n    <ion-navbar>\n      <button ion-button menuToggle right>\n         <ion-icon name="" class="toggleMenu"></ion-icon>\n      </button>\n        <ion-title>Hospital Profile</ion-title>\n      <ion-buttons left>\n      <button ion-button icon-only >\n        <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n  </ion-buttons>\n  </ion-navbar>\n  </ion-header>\n  <ion-content>\n    <ion-tabs #ionTabs [scrollable-tabs]="ionTabs" [opts]="scrollableTabsopts" selectedIndex="0" color="default" tabsHighlight="true"\n      tabsPlacement="top">\n      <ion-tab [root]="tabPersonal" tabTitle="Hospital"></ion-tab>\n      <ion-tab [root]="tabDemographic" tabTitle="Demographic"></ion-tab>\n      <ion-tab [root]="tabProfessional" tabTitle="Professional Information"></ion-tab>\n      <ion-tab [root]="tabChangePassoword" tabTitle="Change Passoword"></ion-tab>\n    </ion-tabs>\n  </ion-content>'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalprofile/hospitalprofile.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], HospitalprofilePage);
    return HospitalprofilePage;
}());

//# sourceMappingURL=hospitalprofile.js.map

/***/ }),

/***/ 538:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientadmitformPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(25);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the PatientadmitformPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientadmitformPage = /** @class */ (function () {
    function PatientadmitformPage(navCtrl, navParams, api, formBuilder) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.formBuilder = formBuilder;
        this.PatientAdmitForm = [];
        this.doctors = [];
        this.Wards = [];
        this.patientAdmitFormvalidation = this.formBuilder.group({
            'patientName': ['', [__WEBPACK_IMPORTED_MODULE_4__angular_forms__["g" /* Validators */].required]],
            'admitDate': ['', [__WEBPACK_IMPORTED_MODULE_4__angular_forms__["g" /* Validators */].required]],
            'admitTime': ['', []],
            'admitTimeTo': ['', []],
            'doctorName': ['', []],
            'symptomsFound': ['', [__WEBPACK_IMPORTED_MODULE_4__angular_forms__["g" /* Validators */].required]],
            'treatmentProvided': ['', [__WEBPACK_IMPORTED_MODULE_4__angular_forms__["g" /* Validators */].required]],
            'diseaseName': ['', [__WEBPACK_IMPORTED_MODULE_4__angular_forms__["g" /* Validators */].required]],
            'medicine': ['', [__WEBPACK_IMPORTED_MODULE_4__angular_forms__["g" /* Validators */].required]],
            'reportTaken': ['', [__WEBPACK_IMPORTED_MODULE_4__angular_forms__["g" /* Validators */].required]],
            'warDetail': ['', [__WEBPACK_IMPORTED_MODULE_4__angular_forms__["g" /* Validators */].required]],
            'operationDetail': ['', [__WEBPACK_IMPORTED_MODULE_4__angular_forms__["g" /* Validators */].required]],
            'extraDetail': ['', []]
        });
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDoctor, '').then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                var response = resp;
                _this.doctors = response.data;
                _this.PatientAdmitForm.doctorName = _this.doctors[0].providerID;
            }
        });
        this.PatientAdmitForm.warDetail = "0";
        //  this.api.wsPostHeader(APIName.getAllDoctor,'').then((resp:any) => {
        //   let response:any=resp;
        //   this.Wards=response.data;
        //this.PatientAdmitForm.warDetail= this.Wards[0].providerID;
        //  });
    }
    PatientadmitformPage.prototype.ionViewDidLoad = function () {
    };
    PatientadmitformPage.prototype.Submit = function () {
        this.api.wsPostHeader('', this.PatientAdmitForm).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log('wsPostHeader : >>', resp);
            }
        });
    };
    PatientadmitformPage.prototype.Cancel = function () {
    };
    PatientadmitformPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patientadmitform',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/patientadmitform/patientadmitform.html"*/'<!--\n  Generated template for the PatientadmitformPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>Patient Admit Form</ion-title>\n    <ion-buttons left>\n        <button ion-button icon-only >\n        <ion-icon name="" class="header-logo"></ion-icon>\n        </button>\n      </ion-buttons>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n  <form text-center class="login-inner-hc" [formGroup]="patientAdmitFormvalidation" style="height: 50%;">\n    <ion-list >\n      <div class="login-signin-hc">  \n        <div class="login-head-hc">\n          <h5>Patient Admit Form</h5>\n        </div>     \n      \n        <ion-item>\n          <ion-label color="">Patient Name*</ion-label>\n          <ion-input type="text" placeholder="Patient Name" formControlName="patientName" [(ngModel)]="PatientAdmitForm.patientName" name="patientName"></ion-input>\n        </ion-item>\n        <control-messages [control]="patientAdmitFormvalidation.controls.patientName"></control-messages>\n\n\n        <ion-item>\n            <ion-label color="">Admitted Date*</ion-label>\n            <ion-datetime placeholder="Date Of Appointment" displayFormat="DD MMMM YYYY" formControlName="admitDate" [(ngModel)]="PatientAdmitForm.admitDate"></ion-datetime>\n        </ion-item>\n        <control-messages [control]="patientAdmitFormvalidation.controls.admitDate"></control-messages>\n         \n\n        <ion-item>\n            <ion-label color="">Admitted Time</ion-label>\n            <ion-datetime  displayFormat="HH:mm" formControlName="admitTime" [(ngModel)]="PatientAdmitForm.admitTime"></ion-datetime>\n        </ion-item>\n        <control-messages [control]="patientAdmitFormvalidation.controls.admitTime"></control-messages>\n        \n\n        <ion-item>\n            <ion-label color="">To Time</ion-label>\n            <ion-datetime  displayFormat="HH:mm" formControlName="admitTimeTo" [(ngModel)]="PatientAdmitForm.admitTimeTo"></ion-datetime>\n        </ion-item>\n        <control-messages [control]="patientAdmitFormvalidation.controls.admitTimeTo"></control-messages>\n\n\n\n        <ion-item>\n            <ion-label color="">Doctor Name*</ion-label>\n            <ion-select placeholder="Doctor Name" formControlName="doctorName" [(ngModel)]="PatientAdmitForm.doctorName">\n                <ion-option *ngFor="let doctor of doctors" [value]="doctor.providerID">{{doctor.providerName}}</ion-option>\n           </ion-select>\n        </ion-item>\n        <control-messages [control]="patientAdmitFormvalidation.controls.doctorName"></control-messages>\n\n\n        <ion-item>\n            <ion-label color="">Symptoms Found*</ion-label>\n            <ion-textarea placeholder="Symptoms Found" type="text" formControlName="symptomsFound" [(ngModel)]="PatientAdmitForm.symptomsFound"  name="symptomsFound"></ion-textarea>\n        </ion-item>\n        <control-messages [control]="patientAdmitFormvalidation.controls.symptomsFound"></control-messages>\n\n\n        <ion-item>\n            <ion-label color="">Treatment Provided*</ion-label>\n            <ion-textarea type="text" placeholder="Treatment Provided" formControlName="treatmentProvided" [(ngModel)]="PatientAdmitForm.treatmentProvided" name="treatmentProvided" ></ion-textarea>\n        </ion-item>\n        <control-messages [control]="patientAdmitFormvalidation.controls.treatmentProvided"></control-messages>\n\n\n        <ion-item>\n            <ion-label color="">Disease Name*</ion-label>\n            <ion-input type="text" placeholder="Disease Name" formControlName="diseaseName" [(ngModel)]="PatientAdmitForm.diseaseName"  name="diseaseName" ></ion-input>\n        </ion-item>\n        <control-messages [control]="patientAdmitFormvalidation.controls.diseaseName"></control-messages>\n\n\n        <ion-item>\n            <ion-label color="">Medicine given*</ion-label>\n            <ion-input type="text" placeholder="Medicine given" formControlName="medicine" [(ngModel)]="PatientAdmitForm.medicine"  name="medicine" ></ion-input>\n        </ion-item>\n        <control-messages [control]="patientAdmitFormvalidation.controls.medicine"></control-messages>\n\n\n        <ion-item>\n            <ion-label color="">Report Taken*</ion-label>\n            <ion-input type="text" placeholder="Report Taken" formControlName="reportTaken" [(ngModel)]="PatientAdmitForm.reportTaken" name="reportTaken"></ion-input>\n        </ion-item>\n        <control-messages [control]="patientAdmitFormvalidation.controls.reportTaken"></control-messages>\n\n        \n        <ion-item>\n            <ion-label color="">Ward Detail*</ion-label>\n            <ion-select placeholder="Ward Detail" formControlName="warDetail" [(ngModel)]="PatientAdmitForm.warDetail">\n                <ion-option [value]="0">Select Ward</ion-option>\n                <ion-option *ngFor="let Ward of Wards" [value]="Ward">{{Ward}}</ion-option>\n           </ion-select>\n       </ion-item>\n       <control-messages [control]="patientAdmitFormvalidation.controls.warDetail"></control-messages>\n\n\n        <ion-item>\n            <ion-label color="">Operation Detail*</ion-label>\n            <ion-textarea type="text" placeholder="Operation Detail" formControlName="operationDetail" [(ngModel)]="PatientAdmitForm.operationDetail" name="operationDetail" ></ion-textarea>\n        </ion-item>\n        <control-messages [control]="patientAdmitFormvalidation.controls.operationDetail"></control-messages>\n\n\n        <ion-item>\n            <ion-label color="">Extra Detail</ion-label>\n            <ion-textarea type="text" placeholder="Extra Detail" formControlName="extraDetail" [(ngModel)]="PatientAdmitForm.extraDetail" name="extraDetail"></ion-textarea>\n        </ion-item>\n        <control-messages [control]="patientAdmitFormvalidation.controls.extraDetail"></control-messages>\n\n\n        <ion-item style="text-align: center;">\n           <button ion-button (click)="Submit()" type="submit" [disabled]="!patientAdmitFormvalidation.valid">Submit</button>\n           <button ion-button color="danger" (click)="Cancel()">Cancel</button>\n        </ion-item>\n\n      </div>       \n    </ion-list>\n  </form>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/patientadmitform/patientadmitform.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_4__angular_forms__["a" /* FormBuilder */]])
    ], PatientadmitformPage);
    return PatientadmitformPage;
}());

//# sourceMappingURL=patientadmitform.js.map

/***/ }),

/***/ 539:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddplanPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the AddplanPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddplanPage = /** @class */ (function () {
    function AddplanPage(navCtrl, navParams, toastCtrl, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.toastCtrl = toastCtrl;
        this.api = api;
        /* <ion-item>
              <ion-label color="" floating>Plan name</ion-label>
              <ion-input type="text" name="planname" [(ngModel)]="account.planname" ></ion-input>
            </ion-item>
            <ion-item>
              <ion-label color="" floating>Description</ion-label>
              <ion-input type="text" name="Desciption" [(ngModel)]="account.description"></ion-input>
            </ion-item>
            <ion-item>
              <ion-label color="" floating>Coverage</ion-label>
              <ion-input type="text" name="Coverage" [(ngModel)]="account.coverage" ></ion-input>
            </ion-item>
            <ion-item>
              <ion-label color="" floating>Disease Associated</ion-label>
              <ion-input type="text" name="Disease" [(ngModel)]="account.disease" ></ion-input>
            </ion-item>
            <ion-item>
              <ion-label color="" floating>Years</ion-label>
              <ion-input type="text" name="Years" [(ngModel)]="account.years" ></ion-input>
            </ion-item>
            <ion-item>
              <ion-label color="" floating>Additional Detail</ion-label>
              <ion-input type="text" name="Additionaldetail" [(ngModel)]="account.additionaldetail"></ion-input>
            </ion-item> */
        this.account = {
            planname: '',
            description: '',
            coverage: '',
            disease: "",
            years: "",
            additionaldetail: ''
        };
    }
    AddplanPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddplanPage');
    };
    AddplanPage.prototype.callAddPlanApi = function () {
        var _this = this;
        if (this.account.planname.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter Plan name", this.toastCtrl);
            return;
        }
        if (this.account.description.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Description", this.toastCtrl);
            return;
        }
        if (this.account.coverage.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Coverage", this.toastCtrl);
            return;
        }
        if (this.account.disease.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Disease Associated", this.toastCtrl);
            return;
        }
        if (this.account.years.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Years", this.toastCtrl);
            return;
        }
        if (this.account.additionaldetail.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Additional Detail", this.toastCtrl);
            return;
        }
        var data = JSON.stringify({});
        this.api.wsPostHeader('', data).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("" + resp.message, _this.toastCtrl);
                _this.navCtrl.pop();
            }
        });
    };
    AddplanPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-addplan',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/addplan/addplan.html"*/'<!--\n  Generated template for the AddplanPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Add Plan</ion-title>\n    <ion-buttons left>\n      <button ion-button icon-only>\n        <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n\n<ion-content padding>\n  <div class="cmn-inr-form">\n    <ion-list>\n      <ion-item>\n        <ion-label color="" floating>Plan name</ion-label>\n        <ion-input type="text" name="planname" [(ngModel)]="account.planname" ></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label color="" floating>Description</ion-label>\n        <ion-input type="text" name="Desciption" [(ngModel)]="account.description"></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label color="" floating>Coverage</ion-label>\n        <ion-input type="text" name="Coverage" [(ngModel)]="account.coverage" ></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label color="" floating>Disease Associated</ion-label>\n        <ion-input type="text" name="Disease" [(ngModel)]="account.disease" ></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label color="" floating>Years</ion-label>\n        <ion-input type="text" name="Years" [(ngModel)]="account.years" ></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label color="" floating>Additional Detail</ion-label>\n        <ion-input type="text" name="Additionaldetail" [(ngModel)]="account.additionaldetail"></ion-input>\n      </ion-item>\n\n      <div class="cmn-ftr-btn">\n        <button (click)="callAddBookLabApi()" ion-button class="cmn-btn-styl prpl-btn" block>Save</button>\n      </div>\n\n    </ion-list>\n  </div>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/addplan/addplan.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */], __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */]])
    ], AddplanPage);
    return AddplanPage;
}());

//# sourceMappingURL=addplan.js.map

/***/ }),

/***/ 540:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DashBoardForInsurancePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the DashBoardForInsurancePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DashBoardForInsurancePage = /** @class */ (function () {
    function DashBoardForInsurancePage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    DashBoardForInsurancePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DashBoardForInsurancePage');
    };
    DashBoardForInsurancePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-dash-board-for-insurance',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/dash-board-for-insurance/dash-board-for-insurance.html"*/'<!--\n  Generated template for the DashBoardForInsurancePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle right>\n    <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Insurance Dashboard</ion-title>\n    <ion-buttons left>\n    <button ion-button icon-only >\n    <ion-icon name="" class="header-logo"></ion-icon>\n    </button>\n  </ion-buttons>\n</ion-navbar>\n\n</ion-header>\n\n<ion-content padding>\n\n  good morning Insurance\n</ion-content>\n\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/dash-board-for-insurance/dash-board-for-insurance.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], DashBoardForInsurancePage);
    return DashBoardForInsurancePage;
}());

//# sourceMappingURL=dash-board-for-insurance.js.map

/***/ }),

/***/ 541:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InsuranceincomingclaimlistviewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the InsuranceincomingclaimlistviewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var InsuranceincomingclaimlistviewPage = /** @class */ (function () {
    function InsuranceincomingclaimlistviewPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    InsuranceincomingclaimlistviewPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad InsuranceincomingclaimlistviewPage');
    };
    InsuranceincomingclaimlistviewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-insuranceincomingclaimlistview',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceincomingclaimlistview/insuranceincomingclaimlistview.html"*/'<!--\n  Generated template for the InsuranceincomingclaimlistviewPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>insuranceincomingclaimlistview</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceincomingclaimlistview/insuranceincomingclaimlistview.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], InsuranceincomingclaimlistviewPage);
    return InsuranceincomingclaimlistviewPage;
}());

//# sourceMappingURL=insuranceincomingclaimlistview.js.map

/***/ }),

/***/ 542:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InsuranceplanlistdetailviewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the InsuranceplanlistdetailviewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var InsuranceplanlistdetailviewPage = /** @class */ (function () {
    function InsuranceplanlistdetailviewPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    InsuranceplanlistdetailviewPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad InsuranceplanlistdetailviewPage');
    };
    InsuranceplanlistdetailviewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-insuranceplanlistdetailview',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceplanlistdetailview/insuranceplanlistdetailview.html"*/'<!--\n  Generated template for the InsuranceplanlistdetailviewPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>insuranceplanlistdetailview</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceplanlistdetailview/insuranceplanlistdetailview.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], InsuranceplanlistdetailviewPage);
    return InsuranceplanlistdetailviewPage;
}());

//# sourceMappingURL=insuranceplanlistdetailview.js.map

/***/ }),

/***/ 543:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InsuranceprofilePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__insurancebasicdetail_insurancebasicdetail__ = __webpack_require__(252);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__insuranceprofiledemographic_insuranceprofiledemographic__ = __webpack_require__(254);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__insuranceprofileprofessional_insuranceprofileprofessional__ = __webpack_require__(255);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__insurancechangepassword_insurancechangepassword__ = __webpack_require__(253);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the InsuranceprofilePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var InsuranceprofilePage = /** @class */ (function () {
    function InsuranceprofilePage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.tabPersonal = __WEBPACK_IMPORTED_MODULE_2__insurancebasicdetail_insurancebasicdetail__["a" /* InsurancebasicdetailPage */];
        this.tabDemographic = __WEBPACK_IMPORTED_MODULE_3__insuranceprofiledemographic_insuranceprofiledemographic__["a" /* InsuranceprofiledemographicPage */];
        this.tabProfessional = __WEBPACK_IMPORTED_MODULE_4__insuranceprofileprofessional_insuranceprofileprofessional__["a" /* InsuranceprofileprofessionalPage */];
        this.tabChangePassoword = __WEBPACK_IMPORTED_MODULE_5__insurancechangepassword_insurancechangepassword__["a" /* InsurancechangepasswordPage */];
        this.scrollableTabsopts = {};
        this.mySelectedIndex = navParams.data.tabIndex || 0;
    }
    InsuranceprofilePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DoctorprofilePage');
    };
    InsuranceprofilePage.prototype.refreshScrollbarTabs = function () {
        this.scrollableTabsopts = { refresh: true };
    };
    InsuranceprofilePage.prototype.switchTabs = function (pos) {
        this.navCtrl.parent.setlect(pos);
    };
    InsuranceprofilePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-insuranceprofile',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceprofile/insuranceprofile.html"*/'<style>\n  .tabbar::after {\n    content: none;\n  }\n</style>\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle right>\n       <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n      <ion-title>Insurance Profile</ion-title>\n    <ion-buttons left>\n    <button ion-button icon-only >\n      <ion-icon name="" class="header-logo"></ion-icon>\n    </button>\n</ion-buttons>\n</ion-navbar>\n</ion-header>\n<ion-content>\n  <ion-tabs #ionTabs [scrollable-tabs]="ionTabs" [opts]="scrollableTabsopts" selectedIndex="0" color="default" tabsHighlight="true"\n    tabsPlacement="top">\n    <ion-tab [root]="tabPersonal" tabTitle="Insurance"></ion-tab>\n    <ion-tab [root]="tabDemographic" tabTitle="Demographic"></ion-tab>\n    <ion-tab [root]="tabProfessional" tabTitle="Professional Information"></ion-tab>\n    <ion-tab [root]="tabChangePassoword" tabTitle="Change Passoword"></ion-tab>\n  </ion-tabs>\n</ion-content>'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceprofile/insuranceprofile.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], InsuranceprofilePage);
    return InsuranceprofilePage;
}());

//# sourceMappingURL=insuranceprofile.js.map

/***/ }),

/***/ 544:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LabbookinglistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the LabbookinglistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LabbookinglistPage = /** @class */ (function () {
    function LabbookinglistPage(navCtrl, navParams, api, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.labbookinglist = [];
    }
    LabbookinglistPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].laboratoryIncomingBookingRequest, '').then(function (resp) {
            console.log(resp);
            _this.labbookinglist = resp.data.patLabAppointmentsPojo;
        });
    };
    LabbookinglistPage.prototype.openItem = function (d) {
        // this.navCtrl.push(PatientdoctorvisitlistviewPage,{item:data});
    };
    LabbookinglistPage.prototype.Canceled = function (d) {
        var _this = this;
        console.log(d);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to cancel?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var passParam = {
                            "patientAppointmentStatus": "Cancel",
                            "id": d.patLabAppointmentID,
                            "description": ''
                            // "patLabAppointmentID": d.patLabAppointmentID,
                            // "patAppStatus": "Cancel"
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].labStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                console.log('resp>>>>' + resp);
                                _this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].laboratoryIncomingBookingRequest, '').then(function (resp) {
                                    console.log(resp);
                                    _this.labbookinglist = resp.data.patLabAppointmentsPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    LabbookinglistPage.prototype.editItem = function (d) {
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to edit?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    LabbookinglistPage.prototype.Add = function (d) {
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to add?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    LabbookinglistPage.prototype.Rejected = function (d) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to reject?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var passParam = {
                            // "patLabAppointmentID": d.patLabAppointmentID,
                            // "patAppStatus": "Rejected"
                            "patientAppointmentStatus": "Rejected",
                            "id": d.patLabAppointmentID,
                            "description": ''
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].labStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                console.log('resp>>>>' + resp);
                                _this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].laboratoryIncomingBookingRequest, '').then(function (resp) {
                                    console.log(resp);
                                    _this.labbookinglist = resp.data.patLabAppointmentsPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    LabbookinglistPage.prototype.Approved = function (d) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to approve?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var passParam = {
                            // "patLabAppointmentID": d.patLabAppointmentID,
                            // "patAppStatus": "Approved"
                            "patientAppointmentStatus": "Approved",
                            "id": d.patLabAppointmentID,
                            "description": ''
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].labStatusChange, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                console.log('resp>>>>' + resp);
                                _this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].laboratoryIncomingBookingRequest, '').then(function (resp) {
                                    console.log(resp);
                                    _this.labbookinglist = resp.data.patLabAppointmentsPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    LabbookinglistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-labbookinglist',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labbookinglist/labbookinglist.html"*/'<!--\n  Generated template for the LabbookinglistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  \n  <ion-navbar>\n    <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Labbooking List</ion-title>\n    <ion-buttons left>\n        <button ion-button icon-only>\n          <ion-icon name="" class="header-logo"></ion-icon>\n        </button>\n      </ion-buttons>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n    <div class="cmn-list-page">\n\n        \n        <ion-list class="cmn-tb-cntnt">\n          <ion-item-sliding #slidingItem *ngFor="let item of labbookinglist">\n              <ion-item (click)="openItem(item)" >\n                  <div class="ptnt-name">{{item.name}}</div>\n                  <div class="rson-fr-meet">{{item.facilityCenterName}} {{item.facilityCenterType}} - {{item.fcLocationName}}</div>\n                  <div class="apmnt-tm">{{item.patAppDate}} {{item.patAppTimeTo}}</div>\n                  <button ion-button *ngIf="item.athome">Yes</button>\n                  <button ion-button *ngIf="!item.athome">No</button>\n                  <div class="apmnt-status" >{{item.patAppStatus}}</div>\n              </ion-item>\n              \n            <ion-item-options *ngIf="item.patAppStatus == \'Pending\'">\n                <button ion-button (click)="Approved(item)">Approve</button>\n                <button ion-button color="danger" (click)="Rejected(item)">Reject</button>\n                <button ion-button color="danger" (click)="Canceled(item)">Cancel</button>\n            </ion-item-options>\n\n            <ion-item-options *ngIf="item.patAppStatus == \'Approved\'">\n                <button ion-button (click)="Add(item)">Add</button>\n                <button ion-button color="danger" (click)="Canceled(item)">Cancel</button>\n            </ion-item-options>  \n  \n            </ion-item-sliding>\n        </ion-list>\n  \n      </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labbookinglist/labbookinglist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], LabbookinglistPage);
    return LabbookinglistPage;
}());

//# sourceMappingURL=labbookinglist.js.map

/***/ }),

/***/ 545:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MapdemoPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__ = __webpack_require__(122);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_geolocation__ = __webpack_require__(123);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_geocoder_geocoder__ = __webpack_require__(112);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the MapdemoPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MapdemoPage = /** @class */ (function () {
    function MapdemoPage(navCtrl, navParams, _googleMaps, _geoLoc, _GEOCODE, _FB, _PLATFORM) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this._googleMaps = _googleMaps;
        this._geoLoc = _geoLoc;
        this._GEOCODE = _GEOCODE;
        this._FB = _FB;
        this._PLATFORM = _PLATFORM;
        this.filter = 'Search by Coordinates';
        this.displayForward = true;
        this.displayReverse = false;
        this.form = _FB.group({
            'keyword': ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["g" /* Validators */].required]
        });
        this.geoForm = _FB.group({
            'latitude': ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["g" /* Validators */].required],
            'longitude': ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["g" /* Validators */].required]
        });
    }
    MapdemoPage.prototype.filterForm = function () {
        if (this.displayForward) {
            this.filter = 'Search by keyword';
            this.displayReverse = true;
            this.displayForward = false;
        }
        else {
            this.filter = 'Search by Co-ordinates';
            this.displayReverse = false;
            this.displayForward = true;
        }
    };
    MapdemoPage.prototype.performReverseGeocoding = function (val) {
        var _this = this;
        this._PLATFORM.ready()
            .then(function (data) {
            var latitude = parseFloat(_this.geoForm.controls["latitude"].value), longitude = parseFloat(_this.geoForm.controls["longitude"].value);
            _this._GEOCODE.reverseGeocode(latitude, longitude)
                .then(function (data) {
                _this.geocoded = true;
                _this.results = data;
                console.log(" reverseGeocode result++++++++++" + _this.results);
            })
                .catch(function (error) {
                _this.geocoded = true;
                _this.results = error.message;
            });
        });
    };
    MapdemoPage.prototype.performForwardGeocoding = function (val) {
        var _this = this;
        this._PLATFORM.ready()
            .then(function (data) {
            var keyword = _this.form.controls["keyword"].value;
            _this._GEOCODE.forwardGeocode(keyword)
                .then(function (data) {
                _this.geocoded = true;
                console.log("test : " + data);
                var str = data[0].latitude + "," + data[0].longitude;
                // console.log("test : "+data[0]);
                _this.results = str;
                console.log(" forwardGeocode result++++++++++" + _this.results);
                var lat = data[0].latitude;
                var long = data[0].longitude;
                var loc = new __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["c" /* LatLng */](lat, long);
                _this.moveCamera(loc);
                _this.createMrker(loc, "testMe").then(function (marker) {
                    marker.showInfoWindow();
                }).catch(function (err) {
                    console.log(err);
                });
                // console.log(" forwardGeocode result+++lat+++++++"+this.results[0]);
                // console.log(" forwardGeocode result+++++long+++++"+this.results[1]);
            })
                .catch(function (error) {
                _this.geocoded = true;
                _this.results = error.message;
            });
        });
    };
    MapdemoPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad MapdemoPage');
    };
    MapdemoPage.prototype.ngAfterViewInit = function () {
        var _this = this;
        var loc;
        this.initMap();
        this.map.one(__WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["b" /* GoogleMapsEvent */].MAP_READY).then(function () {
            _this.geoLocation().then(function (res) {
                console.log(res.coords.latitude);
                console.log(res.coords.longitude);
                loc = new __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["c" /* LatLng */](res.coords.latitude, res.coords.longitude);
                _this.moveCamera(loc);
                _this.createMrker(loc, "Me").then(function (marker) {
                    marker.showInfoWindow();
                }).catch(function (err) {
                    console.log(err);
                });
            }).catch(function (err) {
                console.log(err);
            });
        });
    };
    MapdemoPage.prototype.initMap = function () {
        var element = this.mapElement.nativeElement;
        this.map = __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["a" /* GoogleMaps */].create("map_canvas");
    };
    MapdemoPage.prototype.geoLocation = function () {
        return this._geoLoc.getCurrentPosition();
    };
    MapdemoPage.prototype.moveCamera = function (loc) {
        var options = {
            target: loc,
            zoom: 15,
            tilt: 10
        };
        this.map.moveCamera(options);
    };
    MapdemoPage.prototype.createMrker = function (loc, title) {
        var markerOptions = {
            position: loc,
            title: title,
        };
        return this.map.addMarker(markerOptions);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("map"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], MapdemoPage.prototype, "mapElement", void 0);
    MapdemoPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-mapdemo',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/mapdemo/mapdemo.html"*/'<!--\n  Generated template for the MapdemoPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>mapdemo</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n    <button\n    ion-button\n    block\n    color="secondary"\n    (click)="filterForm()">{{ filter }}</button>\n  \n    <form\n    *ngIf="displayForward"\n    [formGroup]="form"\n    (ngSubmit)="performForwardGeocoding(form.value)">\n    <ion-list>\n       <ion-item margin-bottom>\n          <ion-label>Location</ion-label>\n          <ion-input\n             type="text"\n             formControlName="keyword"></ion-input>\n       </ion-item>\n  \n  \n       <ion-item margin-bottom>\n          <button\n             ion-button\n             color="primary"\n             text-center\n             block\n             [disabled]="!form.valid">Geocode this location</button>\n       </ion-item>\n  \n    </ion-list>\n  </form>\n  \n  \n  <form\n  *ngIf="displayReverse"\n  [formGroup]="geoForm"\n  (ngSubmit)="performReverseGeocoding(geoForm.value)">\n  <ion-list>\n     <ion-item margin-bottom>\n        <ion-label>Latitude</ion-label>\n        <ion-input\n           type="text"\n           formControlName="latitude"></ion-input>\n     </ion-item>\n     \n  \n     <ion-item margin-bottom>\n        <ion-label>Longitude</ion-label>\n        <ion-input\n           type="text"\n           formControlName="longitude"></ion-input>\n     </ion-item>\n  \n  \n     <ion-item margin-bottom>\n        <button\n           ion-button\n           color="primary"\n           text-center\n           block\n           [disabled]="!geoForm.valid">Geocode this location</button>\n     </ion-item>\n  \n  </ion-list>\n  </form>\n  \n  <section *ngIf="geocoded">\n     {{ results }}\n  </section>\n\n\n  <div #map id="map_canvas" style="height:250px">\n</div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/mapdemo/mapdemo.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_google_maps__["a" /* GoogleMaps */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_geolocation__["a" /* Geolocation */],
            __WEBPACK_IMPORTED_MODULE_5__providers_geocoder_geocoder__["a" /* GeocoderProvider */],
            __WEBPACK_IMPORTED_MODULE_4__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Platform */]])
    ], MapdemoPage);
    return MapdemoPage;
}());

//# sourceMappingURL=mapdemo.js.map

/***/ }),

/***/ 546:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return IncomingmedicinerequiredlistviewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the IncomingmedicinerequiredlistviewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var IncomingmedicinerequiredlistviewPage = /** @class */ (function () {
    function IncomingmedicinerequiredlistviewPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    IncomingmedicinerequiredlistviewPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad IncomingmedicinerequiredlistviewPage');
    };
    IncomingmedicinerequiredlistviewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-incomingmedicinerequiredlistview',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/incomingmedicinerequiredlistview/incomingmedicinerequiredlistview.html"*/'<!--\n  Generated template for the IncomingmedicinerequiredlistviewPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>incomingmedicinerequiredlistview</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/incomingmedicinerequiredlistview/incomingmedicinerequiredlistview.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], IncomingmedicinerequiredlistviewPage);
    return IncomingmedicinerequiredlistviewPage;
}());

//# sourceMappingURL=incomingmedicinerequiredlistview.js.map

/***/ }),

/***/ 547:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MedicalprofilePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__medicalprofilebasicdetail_medicalprofilebasicdetail__ = __webpack_require__(269);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__medicalprofiledemographic_medicalprofiledemographic__ = __webpack_require__(270);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__medicalprofileprofessional_medicalprofileprofessional__ = __webpack_require__(271);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__medicalchangepassword_medicalchangepassword__ = __webpack_require__(268);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__medicalstore_medicalstoreprofiledocument_medicalstoreprofiledocument__ = __webpack_require__(272);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the MedicalprofilePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MedicalprofilePage = /** @class */ (function () {
    function MedicalprofilePage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.tabPersonal = __WEBPACK_IMPORTED_MODULE_2__medicalprofilebasicdetail_medicalprofilebasicdetail__["a" /* MedicalprofilebasicdetailPage */];
        this.tabDemographic = __WEBPACK_IMPORTED_MODULE_3__medicalprofiledemographic_medicalprofiledemographic__["a" /* MedicalprofiledemographicPage */];
        this.tabProfessional = __WEBPACK_IMPORTED_MODULE_4__medicalprofileprofessional_medicalprofileprofessional__["a" /* MedicalprofileprofessionalPage */];
        this.tabChangePassoword = __WEBPACK_IMPORTED_MODULE_5__medicalchangepassword_medicalchangepassword__["a" /* MedicalchangepasswordPage */];
        this.tabDocuments = __WEBPACK_IMPORTED_MODULE_6__medicalstore_medicalstoreprofiledocument_medicalstoreprofiledocument__["a" /* MedicalstoreprofiledocumentPage */];
        this.scrollableTabsopts = {};
        this.mySelectedIndex = navParams.data.tabIndex || 0;
    }
    MedicalprofilePage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad DoctorprofilePage");
    };
    MedicalprofilePage.prototype.refreshScrollbarTabs = function () {
        this.scrollableTabsopts = { refresh: true };
    };
    MedicalprofilePage.prototype.switchTabs = function (pos) {
        this.navCtrl.parent.setlect(pos);
    };
    MedicalprofilePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-medicalprofile",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/medicalprofile/medicalprofile.html"*/'<style>\n  .tabbar::after {\n    content: none;\n  }\n</style>\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Pharmacy Profile</ion-title>\n    <ion-buttons left>\n      <button ion-button icon-only>\n        <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n<ion-content>\n  <ion-tabs\n    #ionTabs\n    [scrollable-tabs]="ionTabs"\n    [opts]="scrollableTabsopts"\n    selectedIndex="0"\n    color="default"\n    tabsHighlight="true"\n    tabsPlacement="top"\n  >\n    <ion-tab [root]="tabPersonal" tabTitle="Pharmacy"></ion-tab>\n    <ion-tab [root]="tabDemographic" tabTitle="Demographic"></ion-tab>\n    <ion-tab\n      [root]="tabProfessional"\n      tabTitle="Professional Information"\n    ></ion-tab>\n    <ion-tab [root]="tabChangePassoword" tabTitle="Change Passoword"></ion-tab>\n    <ion-tab [root]="tabDocuments" tabTitle="Documents"></ion-tab>\n  </ion-tabs>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/medicalprofile/medicalprofile.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */]])
    ], MedicalprofilePage);
    return MedicalprofilePage;
}());

//# sourceMappingURL=medicalprofile.js.map

/***/ }),

/***/ 548:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrackingPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(25);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the TrackingPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var TrackingPage = /** @class */ (function () {
    function TrackingPage(navCtrl, navParams, api, formBuilder) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.formBuilder = formBuilder;
        this.tracking = [];
        this.trackingData = [];
        this.trackingData.packageprepared = false;
        this.trackingData.outfordelivery = false;
        this.trackingData.delivered = false;
        this.tracking = this.formBuilder.group({
            'estimatedtime': ['', []],
            'packageprepared': ['', []],
            'outfordelivery': ['', []],
            'delivered': ['', []]
        });
    }
    TrackingPage.prototype.Submit = function () {
        this.api.wsPostHeader('', this.trackingData).then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log(resp);
            }
        });
    };
    TrackingPage.prototype.Cancel = function () {
    };
    TrackingPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-tracking',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/tracking/tracking.html"*/'<!--\n  Generated template for the TrackingPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n      <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n      </button>\n      <ion-title>Tracking</ion-title>\n      <ion-buttons left>\n      <button ion-button icon-only >\n      <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n  <form text-center class="login-inner-hc" [formGroup]="tracking" style="height: 50%;">\n    <ion-list >\n      <div class="login-signin-hc">  \n        <!-- <div class="login-head-hc">\n          <h5>Pharmacy tracking</h5>\n        </div>      -->\n      \n        <ion-item>\n          <ion-label color="">Estimated time *</ion-label>\n          <ion-input type="text" formControlName="estimatedtime" [(ngModel)]="trackingData.estimatedtime" name="estimatedtime"></ion-input>\n        </ion-item>\n        <control-messages [control]="tracking.controls.estimatedtime"></control-messages>\n\n\n        <ion-item>\n            <ion-label color="">Package Prepared *</ion-label>\n            <ion-toggle [(ngModel)]="trackingData.packageprepared" formControlName="packageprepared"></ion-toggle>\n        </ion-item>\n        <control-messages [control]="tracking.controls.packageprepared"></control-messages>\n\n\n        <ion-item>\n            <ion-label color="">Out for Delivery *</ion-label>\n            <ion-toggle [(ngModel)]="trackingData.outfordelivery" formControlName="outfordelivery"></ion-toggle>\n        </ion-item>\n        <control-messages [control]="tracking.controls.outfordelivery"></control-messages>\n\n\n        <ion-item>\n            <ion-label color="">Delivered *</ion-label>\n            <ion-toggle [(ngModel)]="trackingData.delivered" formControlName="delivered"></ion-toggle>\n        </ion-item>\n        <control-messages [control]="tracking.controls.delivered"></control-messages>\n\n\n\n        <ion-item style="text-align: center;">\n           <button ion-button (click)="Submit()" type="submit" (click)="Submit()" [disabled]="!tracking.valid">Submit</button>\n           <button ion-button color="danger" (click)="Cancel()">Cancel</button>\n        </ion-item>\n\n      </div>       \n    </ion-list>\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/medicalstore/tracking/tracking.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["a" /* FormBuilder */]])
    ], TrackingPage);
    return TrackingPage;
}());

//# sourceMappingURL=tracking.js.map

/***/ }),

/***/ 549:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientaddinsurancePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_file_path__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_base64__ = __webpack_require__(395);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_file_chooser__ = __webpack_require__(396);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_document_picker__ = __webpack_require__(397);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the PatientaddinsurancePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientaddinsurancePage = /** @class */ (function () {
    function PatientaddinsurancePage(navCtrl, navParams, toastCtrl, fileChooser, filePath, platform, base, docPicker) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.toastCtrl = toastCtrl;
        this.fileChooser = fileChooser;
        this.filePath = filePath;
        this.platform = platform;
        this.base = base;
        this.docPicker = docPicker;
        this.insurance = {
            planname: '',
            companyname: '',
            coverage: '',
            years: '',
            status: '',
            additionaldetail: ''
        };
        this.statusoptions = [{
                statusname: "Claimed"
            },
            {
                statusname: "Rejected"
            },
            {
                statusname: "Taken"
            }];
    }
    PatientaddinsurancePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad PatientaddinsurancePage');
        this.insurance.status = this.statusoptions[0].statusname;
    };
    PatientaddinsurancePage.prototype.addinsurance = function () {
        if (this.insurance.planname.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])('Please Enter Plan Name', this.toastCtrl);
            return;
        }
        else if (this.insurance.companyname.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])('Please Enter Company Name', this.toastCtrl);
            return;
        }
        else if (this.insurance.coverage.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])('Please Enter Covergae', this.toastCtrl);
            return;
        }
        else if (this.insurance.years.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])('Please Enter years', this.toastCtrl);
            return;
        }
        else if (this.insurance.status.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])('Please select status', this.toastCtrl);
            return;
        }
        else if (this.insurance.additionaldetail.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])('Please add additional details', this.toastCtrl);
            return;
        }
        else if (this.filename == null) {
            Object(__WEBPACK_IMPORTED_MODULE_5__providers_commonfunction_commonfunction__["j" /* showToast */])('Please choose file', this.toastCtrl);
            return;
        }
        console.log("data is " + this.insurance.planname);
        console.log("data is " + this.insurance.companyname);
        console.log("data is " + this.insurance.coverage);
        console.log("data is " + this.insurance.years);
        console.log("data is " + this.insurance.status);
        console.log("data is " + this.insurance.additionaldetail);
    };
    PatientaddinsurancePage.prototype.choosedocument = function () {
        var _this = this;
        if (this.platform.is('ios')) {
            console.log('this is ios');
            alert('this is ios');
            this.docPicker.getFile('all')
                .then(function (uri) {
                console.log('uri of file is===>', uri);
                _this.convertToBase64(uri);
            })
                .catch(function (e) { return console.log(e); });
        }
        else {
            this.fileChooser.open().then(function (uri) {
                _this.filePath.resolveNativePath(uri)
                    .then(function (filePath) {
                    //   alert(filePath)
                    var currentName = filePath.substring(filePath.lastIndexOf('/') + 1);
                    console.log("current name========= " + currentName);
                    _this.filename = currentName;
                    _this.convertToBase64(filePath);
                }, function (err) {
                    console.log(err);
                });
            }, function (err) {
                console.log(err);
            });
        }
    };
    PatientaddinsurancePage.prototype.convertToBase64 = function (filePath) {
        var path = filePath;
        console.log('File Path in CovertToBase64 is>>>>>', path);
        this.base.encodeFile(filePath).then(function (base64File) {
            console.log(base64File);
        }, function (err) {
            console.log(err);
        });
    };
    PatientaddinsurancePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patientaddinsurance',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientaddinsurance/patientaddinsurance.html"*/'<!--\n  Generated template for the PatientaddinsurancePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Add Insurance</ion-title>\n    <ion-buttons left>\n      <button ion-button icon-only>\n        <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n\n</ion-header>\n\n<ion-content padding>\n  <div class="cmn-inr-form">\n    <ion-item>\n      <ion-label color="" floating>Plan Name</ion-label>\n      <ion-input type="text" name="planname" [(ngModel)]="insurance.planname"></ion-input>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating> Insurance Company Name</ion-label>\n      <ion-input type="text" name="insurancecompanyname" [(ngModel)]="insurance.companyname"></ion-input>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating>Coverage</ion-label>\n      <ion-input type="text" name="coverage" [(ngModel)]="insurance.coverage"></ion-input>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating> Years</ion-label>\n      <ion-input name="years" [(ngModel)]="insurance.years"></ion-input>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating>Status</ion-label>\n      <ion-select [(ngModel)]="insurance.status">\n        <ion-option *ngFor="let status of statusoptions; let id=index;" [value]="status.statusname" selected="{{(idx==0).statusname}}">{{status.statusname}}</ion-option>\n      </ion-select>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating>Additional Detail</ion-label>\n      <ion-input type="text" name="additionaldetail" [(ngModel)]="insurance.additionaldetail"></ion-input>\n    </ion-item>\n\n    Add Document\n\n    <button ion-button small (click)="choosedocument()">Choose File</button>\n    <ion-label>{{filename}}</ion-label>\n\n    <div class="cmn-ftr-btn">\n      <button ion-button (click)="addinsurance()" class="cmn-btn-styl prpl-btn">Submit</button>\n      <button ion-button class="cmn-btn-styl prpl-btn">Cancel</button>\n    </div>\n  </div>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientaddinsurance/patientaddinsurance.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_file_chooser__["a" /* FileChooser */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_file_path__["a" /* FilePath */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_base64__["a" /* Base64 */],
            __WEBPACK_IMPORTED_MODULE_6__ionic_native_document_picker__["a" /* DocumentPicker */]])
    ], PatientaddinsurancePage);
    return PatientaddinsurancePage;
}());

//# sourceMappingURL=patientaddinsurance.js.map

/***/ }),

/***/ 550:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientclaimedinsurancelistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patientclaimedinsurancelistview_patientclaimedinsurancelistview__ = __webpack_require__(275);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the PatientclaimedinsurancelistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientclaimedinsurancelistPage = /** @class */ (function () {
    function PatientclaimedinsurancelistPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.ClaimedInsuranceList = [];
    }
    PatientclaimedinsurancelistPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        //   this.api.wsPostHeader(APIName.getAllDoctorVisitPatient,'').then((resp:any) => {
        //   console.log('doctorVisitList : >>',resp);
        //   this.ClaimedInsuranceList=resp.data; 
        // });
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDoctorVisitPatient, '').then(function (resp) {
            _this.ClaimedInsuranceList = resp.data.patVisitNotePojo;
        });
    };
    PatientclaimedinsurancelistPage.prototype.viewClaimedInsuranceListView = function (data) {
        console.log(data);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patientclaimedinsurancelistview_patientclaimedinsurancelistview__["a" /* PatientclaimedinsurancelistviewPage */], { item: data });
    };
    PatientclaimedinsurancelistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patientclaimedinsurancelist',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientclaimedinsurancelist/patientclaimedinsurancelist.html"*/'<!--\n  Generated template for the PatientclaimedinsurancelistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n      <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n      </button>\n      <ion-title>Patient Claimed Insurance List</ion-title>\n      <ion-buttons left>\n      <button ion-button icon-only >\n      <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n\n<ion-content padding>\n   <div class="cmn-list-page">\n      <div class="cmn-tab-dsgn">\n          <ul>\n            <li class="first" (click)="changeItem(1)"><button type="button" class="tab-btn">Today</button></li>\n            <li (click)="changeItem(2)"><button type="button" class="tab-btn">Tomorrow</button></li>\n            <li class="last" (click)="changeItem(3)"><button type="button" class="tab-btn">View All</button></li>\n          </ul>\n      </div>\n      <ion-list class="cmn-tb-cntnt">\n          <ion-item (click)="viewClaimedInsuranceListView(d)" *ngFor="let d of ClaimedInsuranceList">\n                <div class="ptnt-name">Medical Insurance</div>\n                <div class="rson-fr-meet">Aegon Life Insurance Company</div>\n                <!-- <div class="rson-fr-meet">{{doctorVisitLists.fcLocationName}} - {{doctorVisitLists.facilityCenterType}}</div> -->\n                <div class="apmnt-tm">{{d.patVisitDate}} {{d.times}}</div>\n                <div class="apmnt-status">{{d.patVisitType}}</div>\n              </ion-item>\n      </ion-list>\n    </div>\n    <ion-fab bottom right>\n      <button style="background-color:#4633BE;" ion-fab (click)="addItem()"><ion-icon name="add"></ion-icon></button>\n      </ion-fab>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientclaimedinsurancelist/patientclaimedinsurancelist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], PatientclaimedinsurancelistPage);
    return PatientclaimedinsurancelistPage;
}());

//# sourceMappingURL=patientclaimedinsurancelist.js.map

/***/ }),

/***/ 551:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatienthospitaladmitlistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patienthospitaladmitlistview_patienthospitaladmitlistview__ = __webpack_require__(276);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the PatienthospitaladmitlistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatienthospitaladmitlistPage = /** @class */ (function () {
    function PatienthospitaladmitlistPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.hospitalAdmitList = [];
    }
    PatienthospitaladmitlistPage.prototype.ionViewDidLoad = function () {
        //   this.api.wsPostHeader(APIName.getAllDoctorVisitPatient,'').then((resp:any) => {
        //   console.log('hospitalAdmitList : >>',resp.data);
        //   this.hospitalAdmitList=resp.data; 
        // });
        var _this = this;
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDoctorVisitPatient, '').then(function (resp) {
            // let doctorVisitList : any = resp;
            _this.hospitalAdmitList = resp.data.patVisitNotePojo;
        });
    };
    PatienthospitaladmitlistPage.prototype.viewHospitalAdmitListView = function (data) {
        console.log(data);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patienthospitaladmitlistview_patienthospitaladmitlistview__["a" /* PatienthospitaladmitlistviewPage */], { item: data });
    };
    PatienthospitaladmitlistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patienthospitaladmitlist',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patienthospitaladmitlist/patienthospitaladmitlist.html"*/'<!--\n  Generated template for the PatienthospitaladmitlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n      <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n      </button>\n      <ion-title>Hospital Admit List</ion-title>\n      <ion-buttons left>\n      <button ion-button icon-only >\n      <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n\n<ion-content padding>\n   <div class="cmn-list-page">\n      <div class="cmn-tab-dsgn">\n          <ul>\n            <li class="first" (click)="changeItem(1)"><button type="button" class="tab-btn">Today</button></li>\n            <li (click)="changeItem(2)"><button type="button" class="tab-btn">Tomorrow</button></li>\n            <li class="last" (click)="changeItem(3)"><button type="button" class="tab-btn">View All</button></li>\n          </ul>\n      </div>\n      <ion-list class="cmn-tb-cntnt">\n          <ion-item (click)="viewHospitalAdmitListView(obj)" *ngFor="let obj of hospitalAdmitList">\n                <div class="ptnt-name">PatientId {{obj.patientID}}</div>\n                <div class="apmnt-tm">{{obj.patVisitDate}} {{obj.times}}</div>\n                <div class="apmnt-tm" *ngFor="let d of obj.diagnosisMaster">{{d.diagnosiseName}}</div>\n              </ion-item>\n      </ion-list>\n    </div>\n    \n\n</ion-content>\n\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patienthospitaladmitlist/patienthospitaladmitlist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], PatienthospitaladmitlistPage);
    return PatienthospitaladmitlistPage;
}());

//# sourceMappingURL=patienthospitaladmitlist.js.map

/***/ }),

/***/ 552:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientinsurancelistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patientinsurancelistview_patientinsurancelistview__ = __webpack_require__(277);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the PatientinsurancelistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientinsurancelistPage = /** @class */ (function () {
    function PatientinsurancelistPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.insuranceList = [];
    }
    PatientinsurancelistPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        //   this.api.wsPostHeader(APIName.getAllDoctorVisitPatient,'').then((resp:any) => {
        //   console.log('insuranceList : >>',resp.data);
        //   this.insuranceList=resp.data; 
        // });
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDoctorVisitPatient, '').then(function (resp) {
            // let doctorVisitList : any = resp;
            _this.insuranceList = resp.data.patVisitNotePojo;
        });
    };
    PatientinsurancelistPage.prototype.viewInsuranceList = function (data) {
        console.log(data);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patientinsurancelistview_patientinsurancelistview__["a" /* PatientinsurancelistviewPage */], { item: data });
    };
    PatientinsurancelistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patientinsurancelist',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientinsurancelist/patientinsurancelist.html"*/'<!--\n  Generated template for the PatientinsurancelistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n      <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n      </button>\n      <ion-title>Insurance List</ion-title>\n      <ion-buttons left>\n      <button ion-button icon-only >\n      <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n\n<ion-content padding>\n   <div class="cmn-list-page">\n      <div class="cmn-tab-dsgn">\n          <ul>\n            <li class="first" (click)="changeItem(1)"><button type="button" class="tab-btn">Today</button></li>\n            <li (click)="changeItem(2)"><button type="button" class="tab-btn">Tomorrow</button></li>\n            <li class="last" (click)="changeItem(3)"><button type="button" class="tab-btn">View All</button></li>\n          </ul>\n      </div>\n      <ion-list class="cmn-tb-cntnt">\n          <ion-item (click)="viewInsuranceList(obj)" *ngFor="let obj of insuranceList">\n                <!-- <div class="ptnt-name">{{doctorVisitLists.providerName}}</div> -->\n                <div class="ptnt-name">id -	1</div>\n                <div class="rson-fr-meet">Plan - Medical Insurance</div>\n                <div class="rson-fr-meet">Company - Aegon Life Insurance Company	</div>\n                <div class="rson-fr-meet">Coverage - Coverage	</div>\n                <div class="rson-fr-meet">Years - 	5 Years	</div>\n                <!-- <div class="rson-fr-meet">{{obj.fcLocationName}} - {{obj.facilityCenterType}}</div> -->\n                <div class="apmnt-tm">{{obj.patVisitDate}} {{obj.times}}</div>\n                <div class="apmnt-status">Claimed</div>\n                <!-- <div class="apmnt-status">{{obj.patVisitType}}</div> -->\n              </ion-item>\n      </ion-list>\n    </div>\n    \n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientinsurancelist/patientinsurancelist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], PatientinsurancelistPage);
    return PatientinsurancelistPage;
}());

//# sourceMappingURL=patientinsurancelist.js.map

/***/ }),

/***/ 553:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatientmedicineboughtlistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patientmedicineboughtlistview_patientmedicineboughtlistview__ = __webpack_require__(278);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the PatientmedicineboughtlistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatientmedicineboughtlistPage = /** @class */ (function () {
    function PatientmedicineboughtlistPage(navCtrl, navParams, api, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.medicineBoughtList = [];
    }
    PatientmedicineboughtlistPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        //   this.api.wsPostHeader(APIName.getAllDoctorVisitPatient,'').then((resp:any) => {
        //   console.log('PatientmedicineboughtlistPage : >>',resp);
        //   this.medicineBoughtList=resp.data; 
        // });
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDoctorVisitPatient, '').then(function (resp) {
            // let doctorVisitList : any = resp;
            _this.medicineBoughtList = resp.data.patVisitNotePojo;
        });
    };
    PatientmedicineboughtlistPage.prototype.viewMedicineBoughtList = function (data) {
        console.log(data);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patientmedicineboughtlistview_patientmedicineboughtlistview__["a" /* PatientmedicineboughtlistviewPage */], { item: data });
    };
    PatientmedicineboughtlistPage.prototype.Cancel = function (obj) {
        console.log(obj);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to cancel?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        // let passParam = {
                        //   "patAppointmentID": d.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": d.fclProviderMapID },
                        //   "specialityMaster": { "specialityID": d.specialityID },
                        //   "patAppDate": d.patAppDate,
                        //   "patAppTimeFrom": d.patAppTimeFrom,
                        //   "patAppTimeTo": d.patAppTimeTo,
                        //   "patAppType": d.patAppType,
                        //   "patAppReason": d.patAppReason,
                        //   "patAppDescription": d.patAppDescription,
                        //   "patAppStatus": "cancel"
                        // };
                        // console.log(JSON.stringify(passParam));
                        // this.api.wsPostHeader(APIName.addOrEditAppointment, passParam).then((resp) => {
                        // });
                    }
                }
            ]
        });
        alert.present();
    };
    PatientmedicineboughtlistPage.prototype.Swipe = function (obj) {
        console.log(obj);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to swipe?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        // let passParam = {
                        //   "patAppointmentID": d.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": d.fclProviderMapID },
                        //   "specialityMaster": { "specialityID": d.specialityID },
                        //   "patAppDate": d.patAppDate,
                        //   "patAppTimeFrom": d.patAppTimeFrom,
                        //   "patAppTimeTo": d.patAppTimeTo,
                        //   "patAppType": d.patAppType,
                        //   "patAppReason": d.patAppReason,
                        //   "patAppDescription": d.patAppDescription,
                        //   "patAppStatus": "cancel"
                        // };
                        // console.log(JSON.stringify(passParam));
                        // this.api.wsPostHeader(APIName.addOrEditAppointment, passParam).then((resp) => {
                        // });
                    }
                }
            ]
        });
        alert.present();
    };
    PatientmedicineboughtlistPage.prototype.Add = function (obj) {
        console.log(obj);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to add?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    PatientmedicineboughtlistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patientmedicineboughtlist',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientmedicineboughtlist/patientmedicineboughtlist.html"*/'<!--\n  Generated template for the PatientmedicineboughtlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Medicine Bought List</ion-title>\n    <ion-buttons left>\n      <button ion-button icon-only>\n        <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <div class="cmn-list-page">\n    <!-- <div class="cmn-tab-dsgn">\n          <ul>\n            <li class="first" (click)="changeItem(1)"><button type="button" class="tab-btn">Today</button></li>\n            <li (click)="changeItem(2)"><button type="button" class="tab-btn">Tomorrow</button></li>\n            <li class="last" (click)="changeItem(3)"><button type="button" class="tab-btn">View All</button></li>\n          </ul>\n      </div> -->\n    <ion-list class="cmn-tb-cntnt">\n      <ion-item-sliding #slidingItem *ngFor="let obj of medicineBoughtList">\n        <ion-item (click)="viewMedicineBoughtList(obj)">\n          <!-- <div class="ptnt-name">{{doctorVisitLists.providerName}}</div> -->\n          <!-- <div class="ptnt-name">{{obj.patVisitDate}}</div> -->\n          <div class="ptnt-name">Appolo Medical Store</div>\n          <div class="rson-fr-meet">\n            Aceclofenac 100 mg Tab Rs. 100.00<br />Aceclofenac 100 mg Tab Rs.\n            100.00\n          </div>\n          <!-- <div class="rson-fr-meet">{{obj.fcLocationName}} - {{obj.facilityCenterType}}</div> -->\n          <div class="apmnt-tm">{{ obj.patVisitDate }} {{ obj.times }}</div>\n          <div class="apmnt-status">{{ obj.patVisitType }}</div>\n        </ion-item>\n        <ion-item-options *ngIf="obj.patVisitType == \'New\'"\n          ><!-- Pending -->\n          <button ion-button color="danger" (click)="Cancel(obj)">\n            Cancel\n          </button>\n        </ion-item-options>\n\n        <ion-item-options *ngIf="obj.patVisitType == \'Approved\'">\n          <button ion-button color="calm" (click)="Swipe(obj)">Swipe</button>\n        </ion-item-options>\n\n        <ion-item-options\n          *ngIf="\n            obj.patVisitType == \'Reject\' &&\n            obj.patVisitType == \'Cancelled\' &&\n            obj.patVisitType == \'Completed\'\n          "\n        >\n          <button ion-button color="calm" (click)="Add(obj)">Add</button>\n        </ion-item-options>\n      </ion-item-sliding>\n    </ion-list>\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patientmedicineboughtlist/patientmedicineboughtlist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], PatientmedicineboughtlistPage);
    return PatientmedicineboughtlistPage;
}());

//# sourceMappingURL=patientmedicineboughtlist.js.map

/***/ }),

/***/ 554:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PatienttrackingPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * Generated class for the PatienttrackingPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PatienttrackingPage = /** @class */ (function () {
    function PatienttrackingPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.trackingData = [];
        // this.api.wsPostHeader('',this.trackingData).then((resp:any) => {
        //   console.log(resp);
        // }); 
    }
    PatienttrackingPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-patienttracking',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patienttracking/patienttracking.html"*/'<!--\n  Generated template for the PatienttrackingPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n      <button ion-button menuToggle right>\n          <ion-icon name="" class="toggleMenu"></ion-icon>\n          </button>\n    <ion-title>Patient Tracking</ion-title>\n    <ion-buttons left>\n    <button ion-button icon-only >\n    <ion-icon name="" class="header-logo"></ion-icon>\n    </button>\n  </ion-buttons>\n  </ion-navbar>\n\n</ion-header>\n\n<ion-content padding>\n    <ion-list class="login-inner-hc">\n      <div class="login-signin-hc">  \n        <!-- <div class="login-head-hc">\n          <h5>Pharmacy tracking</h5>\n        </div>      -->\n      \n        <ion-item>\n          <ion-label style="color: black">Estimated time</ion-label>\n          <ion-input type="text" [(ngModel)]="trackingData.estimatedtime" disabled="true"></ion-input>\n        </ion-item>\n\n        <ion-item>\n          <ion-label>Package Prepared</ion-label>\n          <!-- <ion-radio checked="true" value="trackingData.packageprepared"></ion-radio> -->\n          <ion-icon name="checkmark" item-right style="color: green"></ion-icon>\n          <!-- <ion-icon name="checkmark" item-right style="color: black"></ion-icon> -->\n        </ion-item>\n\n        <ion-item>\n          <ion-label>Out for Delivery</ion-label>\n          <!-- <ion-radio checked="true" value="trackingData.outfordelivery"></ion-radio> -->\n          <ion-icon name="checkmark" item-right style="color: green"></ion-icon>\n          <!-- <ion-icon name="checkmark" item-right style="color: black"></ion-icon> -->\n        </ion-item>\n\n        <ion-item>\n          <ion-label>Delivered</ion-label>\n          <!-- <ion-radio value="trackingData.delivered"></ion-radio> -->\n          <!-- <ion-icon name="checkmark" item-right style="color: green"></ion-icon> -->\n          <ion-icon name="checkmark" item-right style="color: black"></ion-icon>\n        </ion-item>\n\n      </div>       \n    </ion-list>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/patienttracking/patienttracking.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */]])
    ], PatienttrackingPage);
    return PatienttrackingPage;
}());

//# sourceMappingURL=patienttracking.js.map

/***/ }),

/***/ 555:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return VideoPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_file__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_file_transfer__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__ = __webpack_require__(30);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};





/**
 * Generated class for the VideoPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var baseUrl = "https://example.com";
var MAX_FILE_SIZE = 5 * 1024 * 1024;
var ALLOWED_MIME_TYPE = "video/mp4";
var VideoPage = /** @class */ (function () {
    function VideoPage(navCtrl, navParams, camera, transfer, file, alertCtrl, loadingCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.camera = camera;
        this.transfer = transfer;
        this.file = file;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.isUploading = false;
        this.uploadPercent = 0;
    }
    VideoPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad VideoPage');
    };
    VideoPage.prototype.showLoader = function () {
        this.loader = this.loadingCtrl.create({
            content: 'Please wait...'
        });
        this.loader.present();
    };
    VideoPage.prototype.dismissLoader = function () {
        this.loader.dismiss();
    };
    VideoPage.prototype.presentAlert = function (title, message) {
        var alert = this.alertCtrl.create({
            title: title,
            subTitle: message,
            buttons: ['Dismiss']
        });
        alert.present();
    };
    VideoPage.prototype.cancelSelection = function () {
        this.selectedVideo = null;
        this.uploadedVideo = null;
    };
    VideoPage.prototype.selectVideo = function () {
        var _this = this;
        var options = {
            mediaType: this.camera.MediaType.VIDEO,
            sourceType: this.camera.PictureSourceType.PHOTOLIBRARY
        };
        this.camera.getPicture(options)
            .then(function (videoUrl) { return __awaiter(_this, void 0, void 0, function () {
            var _this = this;
            var filename, dirpath, dirUrl, retrievedFile, err_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!videoUrl) return [3 /*break*/, 6];
                        this.showLoader();
                        this.uploadedVideo = null;
                        filename = videoUrl.substr(videoUrl.lastIndexOf('/') + 1);
                        dirpath = videoUrl.substr(0, videoUrl.lastIndexOf('/') + 1);
                        dirpath = dirpath.includes("file://") ? dirpath : "file://" + dirpath;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 4, , 5]);
                        return [4 /*yield*/, this.file.resolveDirectoryUrl(dirpath)];
                    case 2:
                        dirUrl = _a.sent();
                        return [4 /*yield*/, this.file.getFile(dirUrl, filename, {})];
                    case 3:
                        retrievedFile = _a.sent();
                        return [3 /*break*/, 5];
                    case 4:
                        err_1 = _a.sent();
                        this.dismissLoader();
                        return [2 /*return*/, this.presentAlert("Error", "Something went wrong.")];
                    case 5:
                        retrievedFile.file(function (data) {
                            _this.dismissLoader();
                            if (data.size > MAX_FILE_SIZE)
                                return _this.presentAlert("Error", "You cannot upload more than 5mb.");
                            if (data.type !== ALLOWED_MIME_TYPE)
                                return _this.presentAlert("Error", "Incorrect file type.");
                            _this.selectedVideo = retrievedFile.nativeURL;
                        });
                        _a.label = 6;
                    case 6: return [2 /*return*/];
                }
            });
        }); }, function (err) {
            console.log(err);
        });
    };
    VideoPage.prototype.uploadVideo = function () {
        var _this = this;
        var url = baseUrl + "/video/upload";
        var filename = this.selectedVideo.substr(this.selectedVideo.lastIndexOf('/') + 1);
        var options = {
            fileName: filename,
            fileKey: "video",
            mimeType: "video/mp4"
        };
        this.videoFileUpload = this.transfer.create();
        this.isUploading = true;
        this.videoFileUpload.upload(this.selectedVideo, url, options)
            .then(function (data) {
            _this.isUploading = false;
            _this.uploadPercent = 0;
            return JSON.parse(data.response);
        })
            .then(function (data) {
            _this.uploadedVideo = data.url;
            _this.presentAlert("Success", "Video upload was successful.");
        })
            .catch(function (err) {
            _this.isUploading = false;
            _this.uploadPercent = 0;
            _this.presentAlert("Error", "Error uploading video.");
        });
        this.videoFileUpload.onProgress(function (data) {
            _this.uploadPercent = Math.round((data.loaded / data.total) * 100);
        });
    };
    VideoPage.prototype.cancelUpload = function () {
        this.videoFileUpload.abort();
        this.uploadPercent = 0;
    };
    VideoPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-video',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/video/video.html"*/'<!--\n  Generated template for the VideoPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>video</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding>\n    <div class="video-selection" *ngIf="!selectedVideo">\n        <p>Please select a video for upload from your gallery</p>\n        <button ion-button (click)="selectVideo()">Select Video</button>\n      </div>\n      \n      <div class="video-section" *ngIf="selectedVideo">\n    \n        <video controls [src]="selectedVideo"></video>\n    \n        <div class="button-options" *ngIf="!uploadedVideo && !isUploading">\n          <button ion-button clear (click)="cancelSelection()">\n            <ion-icon name="close-circle" color="danger"></ion-icon>\n          </button>\n          <button ion-button clear (click)="uploadVideo()">\n            <ion-icon name="checkmark-circle" color="secondary"></ion-icon>\n          </button>\n        </div>\n    \n        <div *ngIf="isUploading">\n          <div class="uploading">\n            <p><ion-spinner name="bubbles"></ion-spinner></p>\n            <p>Uploading - {{ uploadPercent }}% Complete</p>\n          </div>\n          <div class="button-options">\n            <button ion-button clear (click)="cancelUpload()">\n              <ion-icon name="close-circle" color="danger"></ion-icon>\n            </button>\n          </div>\n        </div>\n    \n        <div class="button-options" *ngIf="uploadedVideo">\n          <button ion-button clear (click)="cancelSelection()">\n            Start Over\n          </button>\n        </div>\n    \n      </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/video/video.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_4__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_file_transfer__["a" /* FileTransfer */], __WEBPACK_IMPORTED_MODULE_2__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */]])
    ], VideoPage);
    return VideoPage;
}());

//# sourceMappingURL=video.js.map

/***/ }),

/***/ 556:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HospitalclaimedinsuranceincomingapporvallistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__patient_editappointment_editappointment__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__patient_viewappointment_viewappointment__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the HospitalclaimedinsuranceincomingapporvallistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var HospitalclaimedinsuranceincomingapporvallistPage = /** @class */ (function () {
    function HospitalclaimedinsuranceincomingapporvallistPage(navCtrl, navParams, api, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.appointmentTodayItems = [];
        this.currentAppointlist = [];
        //localStorage.setItem(selectedRole, 'Patient');
        //localStorage.setItem(selectedRole, 'Doctor');
        this.currentAppointlist = this.appointmentTodayItems;
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
    }
    HospitalclaimedinsuranceincomingapporvallistPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
            // this.api.wsPostHeader(APIName.getAppointmentPatient, '').then((resp) => {
            //   //console.log('wsPostHeader : >>',resp);
            //   this.appointmentTodayItems = resp;
            //   this.currentAppointlist = resp;
            // });
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                _this.currentAppointlist = resp.data.patAppointmentPojo;
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
            // this.api.wsPostHeader(APIName.getAppointmentPatient, '').then((resp) => {
            //   //console.log('wsPostHeader : >>',resp);
            //   this.appointmentTodayItems = resp;
            //   this.currentAppointlist = resp;
            // });
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                _this.currentAppointlist = resp.data.patAppointmentPojo;
            });
        }
    };
    HospitalclaimedinsuranceincomingapporvallistPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__["a" /* AddappointmentPage */]);
    };
    HospitalclaimedinsuranceincomingapporvallistPage.prototype.editItem = function (id) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__patient_editappointment_editappointment__["a" /* EditappointmentPage */], { patAppointmentID: id });
    };
    HospitalclaimedinsuranceincomingapporvallistPage.prototype.changeItem = function (stateInt) {
        switch (stateInt) {
            case 1:
                this.currentAppointlist = this.appointmentTodayItems;
                break;
            default:
        }
    };
    HospitalclaimedinsuranceincomingapporvallistPage.prototype.openItem = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__patient_viewappointment_viewappointment__["a" /* ViewappointmentPage */], { item: item });
    };
    HospitalclaimedinsuranceincomingapporvallistPage.prototype.Canceled = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to cancel?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var passParam = {
                            "patAppointmentID": data.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": data.fclProviderMapID },
                            "specialityMaster": { "specialityID": data.specialityID },
                            "patAppDate": "2018-04-23T10:15:43.511Z",
                            "patAppTimeFrom": "2018-04-23T10:15:43.511Z",
                            "patAppTimeTo": "2018-04-23T10:15:43.511Z",
                            "patAppType": data.patAppType,
                            "patAppReason": data.patAppReason,
                            "patAppDescription": data.patAppDescription,
                            "patAppStatus": "Canceled"
                        };
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log('wsPostHeader : >>', resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
                                    // this.api.wsPostHeader(APIName.getAppointmentPatient, '').then((resp) => {
                                    //   //console.log('wsPostHeader : >>',resp);
                                    //   this.appointmentTodayItems = resp;
                                    //   this.currentAppointlist = resp;
                                    // });
                                    _this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                        _this.currentAppointlist = resp.data.patAppointmentPojo;
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
                                    // this.api.wsPostHeader(APIName.getAppointmentPatient, '').then((resp) => {
                                    //   //console.log('wsPostHeader : >>',resp);
                                    //   this.appointmentTodayItems = resp;
                                    //   this.currentAppointlist = resp;
                                    // });
                                    _this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                        _this.currentAppointlist = resp.data.patAppointmentPojo;
                                    });
                                }
                            }
                        });
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalclaimedinsuranceincomingapporvallistPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to reject?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        var passParam = {
                            "patAppointmentID": data.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": data.fclProviderMapID },
                            "specialityMaster": { "specialityID": data.specialityID },
                            "patAppDate": "2018-04-23T10:15:43.511Z",
                            "patAppTimeFrom": "2018-04-23T10:15:43.511Z",
                            "patAppTimeTo": "2018-04-23T10:15:43.511Z",
                            "patAppType": data.patAppType,
                            "patAppReason": data.patAppReason,
                            "patAppDescription": data.patAppDescription,
                            "patAppStatus": "Rejected"
                        };
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log('wsPostHeader222 : >>', resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
                                    // this.api.wsPostHeader(APIName.getAppointmentPatient, '').then((resp) => {
                                    //   //console.log('wsPostHeader : >>',resp);
                                    //   this.appointmentTodayItems = resp;
                                    //   this.currentAppointlist = resp;
                                    // });
                                    _this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                        _this.currentAppointlist = resp.data.patAppointmentPojo;
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
                                    // this.api.wsPostHeader(APIName.getAppointmentPatient, '').then((resp) => {
                                    //   //console.log('wsPostHeader : >>',resp);
                                    //   this.appointmentTodayItems = resp;
                                    //   this.currentAppointlist = resp;
                                    // });
                                    _this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                        _this.currentAppointlist = resp.data.patAppointmentPojo;
                                    });
                                }
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalclaimedinsuranceincomingapporvallistPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to approve?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        // console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        var passParam = {
                            "patAppointmentID": data.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": data.fclProviderMapID },
                            "specialityMaster": { "specialityID": data.specialityID },
                            "patAppDate": "2018-04-23T10:15:43.511Z",
                            "patAppTimeFrom": "2018-04-23T10:15:43.511Z",
                            "patAppTimeTo": "2018-04-23T10:15:43.511Z",
                            "patAppType": data.patAppType,
                            "patAppReason": data.patAppReason,
                            "patAppDescription": data.patAppDescription,
                            "patAppStatus": "Approved"
                        };
                        //console.log(passParam);
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log('wsPostHeader : >>', resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
                                    // this.api.wsPostHeader(APIName.getAppointmentPatient, '').then((resp) => {
                                    //   //console.log('wsPostHeader : >>',resp);
                                    //   this.appointmentTodayItems = resp;
                                    //   this.currentAppointlist = resp;
                                    // });
                                    _this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                        _this.currentAppointlist = resp.data.patAppointmentPojo;
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
                                    // this.api.wsPostHeader(APIName.getAppointmentPatient, '').then((resp) => {
                                    //   //console.log('wsPostHeader : >>',resp);
                                    //   this.appointmentTodayItems = resp;
                                    //   this.currentAppointlist = resp;
                                    // });
                                    _this.api.wsGet(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        _this.appointmentTodayItems = resp.data.patAppointmentPojo;
                                        _this.currentAppointlist = resp.data.patAppointmentPojo;
                                    });
                                }
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalclaimedinsuranceincomingapporvallistPage.prototype.Addvisit = function (data) {
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to Add visit?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalclaimedinsuranceincomingapporvallistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-hospitalclaimedinsuranceincomingapporvallist',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalclaimedinsuranceincomingapporvallist/hospitalclaimedinsuranceincomingapporvallist.html"*/'<!--\n  Generated template for the HospitalclaimedinsuranceincomingapporvallistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n      <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n      </button>\n      <ion-title>Hospital Claimed Insurance List</ion-title>\n      <ion-buttons left>\n      <button ion-button icon-only >\n      <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n\n</ion-header>\n\n<!-- <ion-tabs selectedIndex="1">\n    <ion-tab [root]="tab1Root" [tabTitle]="Today" tabIcon="home"></ion-tab>\n    <ion-tab [root]="tab2Root" [tabTitle]="Tommorrow" tabIcon="home"></ion-tab>\n    <ion-tab [root]="tab3Root" [tabTitle]="View All" tabIcon="home"></ion-tab>\n  </ion-tabs> -->\n  \n  \n<ion-content padding>\n    <div class="cmn-list-page">\n      <div class="cmn-tab-dsgn">\n          <ul>\n            <li class="first" (click)="changeItem(1)"><button type="button" class="tab-btn">Today</button></li>\n            <li (click)="changeItem(2)"><button type="button" class="tab-btn">Tomorrow</button></li>\n            <li class="last" (click)="changeItem(3)"><button type="button" class="tab-btn">View All</button></li>\n          </ul>\n      </div>\n      <ion-list class="cmn-tb-cntnt">\n        <ion-item-sliding #slidingItem *ngFor="let item of currentAppointlist">\n            <ion-item (click)="openItem(item)" >\n                <div class="ptnt-name">{{item.providerName}}</div>\n                <div class="rson-fr-meet">{{item.fcLocationName}} - {{item.facilityCenterType}}</div>\n                <div class="apmnt-tm">{{item.patAppDate}} {{item.totime}}</div>\n                <div class="apmnt-status">{{item.patAppStatus}}</div>\n              </ion-item>\n                 <ion-item-options *ngIf="item.patAppStatus== \'Pending\' && selectRole == \'Patient\'">\n                  <button ion-button color="calm" (click)="editItem(item.patAppointmentID)">Edit</button>\n                  <button ion-button color="danger" (click)="Cancel(item)">Cancel</button>\n                </ion-item-options>\n                <ion-item-options *ngIf="item.patAppStatus== \'Completed\' && selectRole == \'Patient\'">\n                  <button ion-button color="danger" (click)="ReBook(item)">Re-Book</button>\n                </ion-item-options>\n                <ion-item-options *ngIf="item.patAppStatus== \'Approved\' && selectRole == \'Patient\'">\n                  <button ion-button color="danger" (click)="Cancel(item)">Cancel</button>\n                </ion-item-options>\n            <ion-item-options *ngIf="item.patAppStatus== \'Rejected\' && selectRole == \'Patient\'">\n                <button ion-button (click)="ReBook(item)">Re-Book</button>\n            </ion-item-options>\n            <ion-item-options *ngIf="item.patAppStatus== \'Canceled\' && selectRole == \'Patient\'">\n                <button ion-button (click)="ReBook(item)">Re-Book</button>\n            </ion-item-options>\n  \n              <ion-item-options *ngIf="item.patAppStatus == \'Pending\' && selectRole == \'Doctor\'">\n                <button ion-button (click)="Approved(item)">Approve</button>\n                <button ion-button color="danger" (click)="Rejected(item)">Reject</button>\n                <button ion-button color="danger" (click)="Canceled(item)">Cancel</button>\n              </ion-item-options>\n              <ion-item-options *ngIf="item.patAppStatus == \'Approved\' && selectRole == \'Doctor\'">\n                <button ion-button (click)="Addvisit(item)">Add Visit</button>\n                <button ion-button color="danger" (click)="Canceled(item)">Cancel</button>\n              </ion-item-options>          \n          </ion-item-sliding>\n      </ion-list>\n    </div>\n    <ion-fab bottom right>\n      <button style="background-color:#4633BE;" ion-fab (click)="addItem()"><ion-icon name="add"></ion-icon></button>\n      </ion-fab>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalclaimedinsuranceincomingapporvallist/hospitalclaimedinsuranceincomingapporvallist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_6__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], HospitalclaimedinsuranceincomingapporvallistPage);
    return HospitalclaimedinsuranceincomingapporvallistPage;
}());

//# sourceMappingURL=hospitalclaimedinsuranceincomingapporvallist.js.map

/***/ }),

/***/ 557:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HospitalpatientadmitlistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__patient_editappointment_editappointment__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__patient_viewappointment_viewappointment__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the HospitalpatientadmitlistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var HospitalpatientadmitlistPage = /** @class */ (function () {
    function HospitalpatientadmitlistPage(navCtrl, navParams, api, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.appointmentTodayItems = [];
        this.currentAppointlist = [];
        //localStorage.setItem(selectedRole, 'Patient');
        //localStorage.setItem(selectedRole, 'Doctor');
        this.currentAppointlist = this.appointmentTodayItems;
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
    }
    HospitalpatientadmitlistPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    //console.log('wsPostHeader : >>',resp);
                    _this.appointmentTodayItems = resp;
                    _this.currentAppointlist = resp;
                }
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    //console.log('wsPostHeader : >>',resp);
                    _this.appointmentTodayItems = resp;
                    _this.currentAppointlist = resp;
                }
            });
        }
    };
    HospitalpatientadmitlistPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__["a" /* AddappointmentPage */]);
    };
    HospitalpatientadmitlistPage.prototype.editItem = function (id) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__patient_editappointment_editappointment__["a" /* EditappointmentPage */], { patAppointmentID: id });
    };
    HospitalpatientadmitlistPage.prototype.changeItem = function (stateInt) {
        switch (stateInt) {
            case 1:
                this.currentAppointlist = this.appointmentTodayItems;
                break;
            default:
        }
    };
    HospitalpatientadmitlistPage.prototype.openItem = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__patient_viewappointment_viewappointment__["a" /* ViewappointmentPage */], { item: item });
    };
    HospitalpatientadmitlistPage.prototype.Canceled = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to cancel?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var passParam = {
                            "patAppointmentID": data.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": data.fclProviderMapID },
                            "specialityMaster": { "specialityID": data.specialityID },
                            "patAppDate": "2018-04-23T10:15:43.511Z",
                            "patAppTimeFrom": "2018-04-23T10:15:43.511Z",
                            "patAppTimeTo": "2018-04-23T10:15:43.511Z",
                            "patAppType": data.patAppType,
                            "patAppReason": data.patAppReason,
                            "patAppDescription": data.patAppDescription,
                            "patAppStatus": "Canceled"
                        };
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log('wsPostHeader : >>', resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                            }
                        });
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalpatientadmitlistPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to reject?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        var passParam = {
                            "patAppointmentID": data.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": data.fclProviderMapID },
                            "specialityMaster": { "specialityID": data.specialityID },
                            "patAppDate": "2018-04-23T10:15:43.511Z",
                            "patAppTimeFrom": "2018-04-23T10:15:43.511Z",
                            "patAppTimeTo": "2018-04-23T10:15:43.511Z",
                            "patAppType": data.patAppType,
                            "patAppReason": data.patAppReason,
                            "patAppDescription": data.patAppDescription,
                            "patAppStatus": "Rejected"
                        };
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam).then(function (resp) {
                            //this.ViewAppointment=resp;
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                console.log('wsPostHeader222 : >>', resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalpatientadmitlistPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to approve?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        // console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        var passParam = {
                            "patAppointmentID": data.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": data.fclProviderMapID },
                            "specialityMaster": { "specialityID": data.specialityID },
                            "patAppDate": "2018-04-23T10:15:43.511Z",
                            "patAppTimeFrom": "2018-04-23T10:15:43.511Z",
                            "patAppTimeTo": "2018-04-23T10:15:43.511Z",
                            "patAppType": data.patAppType,
                            "patAppReason": data.patAppReason,
                            "patAppDescription": data.patAppDescription,
                            "patAppStatus": "Approved"
                        };
                        //console.log(passParam);
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log('wsPostHeader : >>', resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalpatientadmitlistPage.prototype.Addvisit = function (data) {
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to Add visit?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    HospitalpatientadmitlistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-hospitalpatientadmitlist',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalpatientadmitlist/hospitalpatientadmitlist.html"*/'<!--\n  Generated template for the HospitalpatientadmitlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n      <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n      </button>\n      <ion-title>Hospital Patient Admit List</ion-title>\n      <ion-buttons left>\n      <button ion-button icon-only >\n      <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n\n</ion-header>\n\n<!-- <ion-tabs selectedIndex="1">\n    <ion-tab [root]="tab1Root" [tabTitle]="Today" tabIcon="home"></ion-tab>\n    <ion-tab [root]="tab2Root" [tabTitle]="Tommorrow" tabIcon="home"></ion-tab>\n    <ion-tab [root]="tab3Root" [tabTitle]="View All" tabIcon="home"></ion-tab>\n  </ion-tabs> -->\n  \n  \n<ion-content padding>\n    <div class="cmn-list-page">\n      <div class="cmn-tab-dsgn">\n          <ul>\n            <li class="first" (click)="changeItem(1)"><button type="button" class="tab-btn">Today</button></li>\n            <li (click)="changeItem(2)"><button type="button" class="tab-btn">Tomorrow</button></li>\n            <li class="last" (click)="changeItem(3)"><button type="button" class="tab-btn">View All</button></li>\n          </ul>\n      </div>\n      <ion-list class="cmn-tb-cntnt">\n        <ion-item-sliding #slidingItem *ngFor="let item of currentAppointlist">\n            <ion-item (click)="openItem(item)" >\n                <div class="ptnt-name">{{item.providerName}}</div>\n                <div class="rson-fr-meet">{{item.fcLocationName}} - {{item.facilityCenterType}}</div>\n                <div class="apmnt-tm">{{item.patAppDate}} {{item.totime}}</div>\n                <div class="apmnt-status">{{item.patAppStatus}}</div>\n              </ion-item>\n                 <ion-item-options *ngIf="item.patAppStatus== \'Pending\' && selectRole == \'Patient\'">\n                  <button ion-button color="calm" (click)="editItem(item.patAppointmentID)">Edit</button>\n                  <button ion-button color="danger" (click)="Cancel(item)">Cancel</button>\n                </ion-item-options>\n                <ion-item-options *ngIf="item.patAppStatus== \'Completed\' && selectRole == \'Patient\'">\n                  <button ion-button color="danger" (click)="ReBook(item)">Re-Book</button>\n                </ion-item-options>\n                <ion-item-options *ngIf="item.patAppStatus== \'Approved\' && selectRole == \'Patient\'">\n                  <button ion-button color="danger" (click)="Cancel(item)">Cancel</button>\n                </ion-item-options>\n            <ion-item-options *ngIf="item.patAppStatus== \'Rejected\' && selectRole == \'Patient\'">\n                <button ion-button (click)="ReBook(item)">Re-Book</button>\n            </ion-item-options>\n            <ion-item-options *ngIf="item.patAppStatus== \'Canceled\' && selectRole == \'Patient\'">\n                <button ion-button (click)="ReBook(item)">Re-Book</button>\n            </ion-item-options>\n  \n              <ion-item-options *ngIf="item.patAppStatus == \'Pending\' && selectRole == \'Doctor\'">\n                <button ion-button (click)="Approved(item)">Approve</button>\n                <button ion-button color="danger" (click)="Rejected(item)">Reject</button>\n                <button ion-button color="danger" (click)="Canceled(item)">Cancel</button>\n              </ion-item-options>\n              <ion-item-options *ngIf="item.patAppStatus == \'Approved\' && selectRole == \'Doctor\'">\n                <button ion-button (click)="Addvisit(item)">Add Visit</button>\n                <button ion-button color="danger" (click)="Canceled(item)">Cancel</button>\n              </ion-item-options>          \n          </ion-item-sliding>\n      </ion-list>\n    </div>\n    <ion-fab bottom right>\n      <button style="background-color:#4633BE;" ion-fab (click)="addItem()"><ion-icon name="add"></ion-icon></button>\n      </ion-fab>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/hospital/hospitalpatientadmitlist/hospitalpatientadmitlist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_6__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], HospitalpatientadmitlistPage);
    return HospitalpatientadmitlistPage;
}());

//# sourceMappingURL=hospitalpatientadmitlist.js.map

/***/ }),

/***/ 558:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InsuranceincomingclaimlistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__patient_editappointment_editappointment__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__patient_viewappointment_viewappointment__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the InsuranceincomingclaimlistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var InsuranceincomingclaimlistPage = /** @class */ (function () {
    function InsuranceincomingclaimlistPage(navCtrl, navParams, api, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.appointmentTodayItems = [];
        this.currentAppointlist = [];
        //localStorage.setItem(selectedRole, 'Patient');
        //localStorage.setItem(selectedRole, 'Doctor');
        this.currentAppointlist = this.appointmentTodayItems;
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
    }
    InsuranceincomingclaimlistPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    //console.log('wsPostHeader : >>',resp);
                    _this.appointmentTodayItems = resp;
                    _this.currentAppointlist = resp;
                }
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    //console.log('wsPostHeader : >>',resp);
                    _this.appointmentTodayItems = resp;
                    _this.currentAppointlist = resp;
                }
            });
        }
    };
    InsuranceincomingclaimlistPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__["a" /* AddappointmentPage */]);
    };
    InsuranceincomingclaimlistPage.prototype.editItem = function (id) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__patient_editappointment_editappointment__["a" /* EditappointmentPage */], { patAppointmentID: id });
    };
    InsuranceincomingclaimlistPage.prototype.changeItem = function (stateInt) {
        switch (stateInt) {
            case 1:
                this.currentAppointlist = this.appointmentTodayItems;
                break;
            default:
        }
    };
    InsuranceincomingclaimlistPage.prototype.openItem = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__patient_viewappointment_viewappointment__["a" /* ViewappointmentPage */], { item: item });
    };
    InsuranceincomingclaimlistPage.prototype.Canceled = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to cancel?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var passParam = {
                            "patAppointmentID": data.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": data.fclProviderMapID },
                            "specialityMaster": { "specialityID": data.specialityID },
                            "patAppDate": "2018-04-23T10:15:43.511Z",
                            "patAppTimeFrom": "2018-04-23T10:15:43.511Z",
                            "patAppTimeTo": "2018-04-23T10:15:43.511Z",
                            "patAppType": data.patAppType,
                            "patAppReason": data.patAppReason,
                            "patAppDescription": data.patAppDescription,
                            "patAppStatus": "Canceled"
                        };
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log('wsPostHeader : >>', resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                            }
                        });
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceincomingclaimlistPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to reject?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        var passParam = {
                            "patAppointmentID": data.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": data.fclProviderMapID },
                            "specialityMaster": { "specialityID": data.specialityID },
                            "patAppDate": "2018-04-23T10:15:43.511Z",
                            "patAppTimeFrom": "2018-04-23T10:15:43.511Z",
                            "patAppTimeTo": "2018-04-23T10:15:43.511Z",
                            "patAppType": data.patAppType,
                            "patAppReason": data.patAppReason,
                            "patAppDescription": data.patAppDescription,
                            "patAppStatus": "Rejected"
                        };
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log('wsPostHeader222 : >>', resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceincomingclaimlistPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to approve?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        // console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        var passParam = {
                            "patAppointmentID": data.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": data.fclProviderMapID },
                            "specialityMaster": { "specialityID": data.specialityID },
                            "patAppDate": "2018-04-23T10:15:43.511Z",
                            "patAppTimeFrom": "2018-04-23T10:15:43.511Z",
                            "patAppTimeTo": "2018-04-23T10:15:43.511Z",
                            "patAppType": data.patAppType,
                            "patAppReason": data.patAppReason,
                            "patAppDescription": data.patAppDescription,
                            "patAppStatus": "Approved"
                        };
                        //console.log(passParam);
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log('wsPostHeader : >>', resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceincomingclaimlistPage.prototype.Addvisit = function (data) {
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to Add visit?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceincomingclaimlistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-insuranceincomingclaimlist',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceincomingclaimlist/insuranceincomingclaimlist.html"*/'<!--\n  Generated template for the InsuranceincomingclaimlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n      <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n      </button>\n      <ion-title>Insurance Incoming Claim List</ion-title>\n      <ion-buttons left>\n      <button ion-button icon-only >\n      <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n\n</ion-header>\n\n<!-- <ion-tabs selectedIndex="1">\n    <ion-tab [root]="tab1Root" [tabTitle]="Today" tabIcon="home"></ion-tab>\n    <ion-tab [root]="tab2Root" [tabTitle]="Tommorrow" tabIcon="home"></ion-tab>\n    <ion-tab [root]="tab3Root" [tabTitle]="View All" tabIcon="home"></ion-tab>\n  </ion-tabs> -->\n  \n  \n<ion-content padding>\n    <div class="cmn-list-page">\n      <div class="cmn-tab-dsgn">\n          <ul>\n            <li class="first" (click)="changeItem(1)"><button type="button" class="tab-btn">Today</button></li>\n            <li (click)="changeItem(2)"><button type="button" class="tab-btn">Tomorrow</button></li>\n            <li class="last" (click)="changeItem(3)"><button type="button" class="tab-btn">View All</button></li>\n          </ul>\n      </div>\n      <ion-list class="cmn-tb-cntnt">\n        <ion-item-sliding #slidingItem *ngFor="let item of currentAppointlist">\n            <ion-item (click)="openItem(item)" >\n                <div class="ptnt-name">{{item.providerName}}</div>\n                <div class="rson-fr-meet">{{item.fcLocationName}} - {{item.facilityCenterType}}</div>\n                <div class="apmnt-tm">{{item.patAppDate}} {{item.totime}}</div>\n                <div class="apmnt-status">{{item.patAppStatus}}</div>\n              </ion-item>\n                 <ion-item-options *ngIf="item.patAppStatus== \'Pending\' && selectRole == \'Patient\'">\n                  <button ion-button color="calm" (click)="editItem(item.patAppointmentID)">Edit</button>\n                  <button ion-button color="danger" (click)="Cancel(item)">Cancel</button>\n                </ion-item-options>\n                <ion-item-options *ngIf="item.patAppStatus== \'Completed\' && selectRole == \'Patient\'">\n                  <button ion-button color="danger" (click)="ReBook(item)">Re-Book</button>\n                </ion-item-options>\n                <ion-item-options *ngIf="item.patAppStatus== \'Approved\' && selectRole == \'Patient\'">\n                  <button ion-button color="danger" (click)="Cancel(item)">Cancel</button>\n                </ion-item-options>\n            <ion-item-options *ngIf="item.patAppStatus== \'Rejected\' && selectRole == \'Patient\'">\n                <button ion-button (click)="ReBook(item)">Re-Book</button>\n            </ion-item-options>\n            <ion-item-options *ngIf="item.patAppStatus== \'Canceled\' && selectRole == \'Patient\'">\n                <button ion-button (click)="ReBook(item)">Re-Book</button>\n            </ion-item-options>\n  \n              <ion-item-options *ngIf="item.patAppStatus == \'Pending\' && selectRole == \'Doctor\'">\n                <button ion-button (click)="Approved(item)">Approve</button>\n                <button ion-button color="danger" (click)="Rejected(item)">Reject</button>\n                <button ion-button color="danger" (click)="Canceled(item)">Cancel</button>\n              </ion-item-options>\n              <ion-item-options *ngIf="item.patAppStatus == \'Approved\' && selectRole == \'Doctor\'">\n                <button ion-button (click)="Addvisit(item)">Add Visit</button>\n                <button ion-button color="danger" (click)="Canceled(item)">Cancel</button>\n              </ion-item-options>          \n          </ion-item-sliding>\n      </ion-list>\n    </div>\n    <ion-fab bottom right>\n      <button style="background-color:#4633BE;" ion-fab (click)="addItem()"><ion-icon name="add"></ion-icon></button>\n      </ion-fab>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceincomingclaimlist/insuranceincomingclaimlist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_6__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], InsuranceincomingclaimlistPage);
    return InsuranceincomingclaimlistPage;
}());

//# sourceMappingURL=insuranceincomingclaimlist.js.map

/***/ }),

/***/ 559:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return InsuranceplanlistPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__patient_editappointment_editappointment__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__patient_viewappointment_viewappointment__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the InsuranceplanlistPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var InsuranceplanlistPage = /** @class */ (function () {
    function InsuranceplanlistPage(navCtrl, navParams, api, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.appointmentTodayItems = [];
        this.currentAppointlist = [];
        //localStorage.setItem(selectedRole, 'Patient');
        //localStorage.setItem(selectedRole, 'Doctor');
        this.currentAppointlist = this.appointmentTodayItems;
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
    }
    InsuranceplanlistPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    //console.log('wsPostHeader : >>',resp);
                    _this.appointmentTodayItems = resp;
                    _this.currentAppointlist = resp;
                }
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    //console.log('wsPostHeader : >>',resp);
                    _this.appointmentTodayItems = resp;
                    _this.currentAppointlist = resp;
                }
            });
        }
    };
    InsuranceplanlistPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__["a" /* AddappointmentPage */]);
    };
    InsuranceplanlistPage.prototype.editItem = function (id) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__patient_editappointment_editappointment__["a" /* EditappointmentPage */], { patAppointmentID: id });
    };
    InsuranceplanlistPage.prototype.changeItem = function (stateInt) {
        switch (stateInt) {
            case 1:
                this.currentAppointlist = this.appointmentTodayItems;
                break;
            default:
        }
    };
    InsuranceplanlistPage.prototype.openItem = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__patient_viewappointment_viewappointment__["a" /* ViewappointmentPage */], { item: item });
    };
    InsuranceplanlistPage.prototype.Canceled = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to cancel?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        var passParam = { "patAppointmentID": data.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": data.fclProviderMapID },
                            "specialityMaster": { "specialityID": data.specialityID },
                            "patAppDate": "2018-04-23T10:15:43.511Z",
                            "patAppTimeFrom": "2018-04-23T10:15:43.511Z",
                            "patAppTimeTo": "2018-04-23T10:15:43.511Z",
                            "patAppType": data.patAppType,
                            "patAppReason": data.patAppReason,
                            "patAppDescription": data.patAppDescription,
                            "patAppStatus": "Canceled"
                        };
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log('wsPostHeader : >>', resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                            }
                        });
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceplanlistPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to reject?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        var passParam = { "patAppointmentID": data.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": data.fclProviderMapID },
                            "specialityMaster": { "specialityID": data.specialityID },
                            "patAppDate": "2018-04-23T10:15:43.511Z",
                            "patAppTimeFrom": "2018-04-23T10:15:43.511Z",
                            "patAppTimeTo": "2018-04-23T10:15:43.511Z",
                            "patAppType": data.patAppType,
                            "patAppReason": data.patAppReason,
                            "patAppDescription": data.patAppDescription,
                            "patAppStatus": "Rejected"
                        };
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log('wsPostHeader222 : >>', resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceplanlistPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to approve?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        // console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                        var passParam = { "patAppointmentID": data.patAppointmentID, "fclProviderMapID": { "fclProviderMapID": data.fclProviderMapID },
                            "specialityMaster": { "specialityID": data.specialityID },
                            "patAppDate": "2018-04-23T10:15:43.511Z",
                            "patAppTimeFrom": "2018-04-23T10:15:43.511Z",
                            "patAppTimeTo": "2018-04-23T10:15:43.511Z",
                            "patAppType": data.patAppType,
                            "patAppReason": data.patAppReason,
                            "patAppDescription": data.patAppDescription,
                            "patAppStatus": "Approved"
                        };
                        //console.log(passParam);
                        _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, passParam).then(function (resp) {
                            if (resp.status === 500) {
                                // showToast( resp.error.message, this.toastCtrl)
                            }
                            else {
                                //this.ViewAppointment=resp;
                                console.log('wsPostHeader : >>', resp);
                                if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Patient') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                                else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == 'Doctor') {
                                    _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_2__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, '').then(function (resp) {
                                        if (resp.status === 500) {
                                            // showToast( resp.error.message, this.toastCtrl)
                                        }
                                        else {
                                            //console.log('wsPostHeader : >>',resp);
                                            _this.appointmentTodayItems = resp;
                                            _this.currentAppointlist = resp;
                                        }
                                    });
                                }
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceplanlistPage.prototype.Addvisit = function (data) {
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: 'Alert',
            message: 'Are you sure you want to Add visit?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'Ok',
                    handler: function () {
                        console.log('Ok clicked');
                        //this.navCtrl.push(SignupPage,{item:data});
                    }
                }
            ]
        });
        alert.present();
    };
    InsuranceplanlistPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-insuranceplanlist',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceplanlist/insuranceplanlist.html"*/'<!--\n  Generated template for the InsuranceplanlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n      <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n      </button>\n      <ion-title>Insurance Plan List</ion-title>\n      <ion-buttons left>\n      <button ion-button icon-only >\n      <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n\n</ion-header>\n\n<!-- <ion-tabs selectedIndex="1">\n    <ion-tab [root]="tab1Root" [tabTitle]="Today" tabIcon="home"></ion-tab>\n    <ion-tab [root]="tab2Root" [tabTitle]="Tommorrow" tabIcon="home"></ion-tab>\n    <ion-tab [root]="tab3Root" [tabTitle]="View All" tabIcon="home"></ion-tab>\n  </ion-tabs> -->\n  \n  \n<ion-content padding>\n    <div class="cmn-list-page">\n      <div class="cmn-tab-dsgn">\n          <ul>\n            <li class="first" (click)="changeItem(1)"><button type="button" class="tab-btn">Today</button></li>\n            <li (click)="changeItem(2)"><button type="button" class="tab-btn">Tomorrow</button></li>\n            <li class="last" (click)="changeItem(3)"><button type="button" class="tab-btn">View All</button></li>\n          </ul>\n      </div>\n      <ion-list class="cmn-tb-cntnt">\n        <ion-item-sliding #slidingItem *ngFor="let item of currentAppointlist">\n            <ion-item (click)="openItem(item)" >\n                <div class="ptnt-name">{{item.providerName}}</div>\n                <div class="rson-fr-meet">{{item.fcLocationName}} - {{item.facilityCenterType}}</div>\n                <div class="apmnt-tm">{{item.patAppDate}} {{item.totime}}</div>\n                <div class="apmnt-status">{{item.patAppStatus}}</div>\n              </ion-item>\n                 <ion-item-options *ngIf="item.patAppStatus== \'Pending\' && selectRole == \'Patient\'">\n                  <button ion-button color="calm" (click)="editItem(item.patAppointmentID)">Edit</button>\n                  <button ion-button color="danger" (click)="Cancel(item)">Cancel</button>\n                </ion-item-options>\n                <ion-item-options *ngIf="item.patAppStatus== \'Completed\' && selectRole == \'Patient\'">\n                  <button ion-button color="danger" (click)="ReBook(item)">Re-Book</button>\n                </ion-item-options>\n                <ion-item-options *ngIf="item.patAppStatus== \'Approved\' && selectRole == \'Patient\'">\n                  <button ion-button color="danger" (click)="Cancel(item)">Cancel</button>\n                </ion-item-options>\n            <ion-item-options *ngIf="item.patAppStatus== \'Rejected\' && selectRole == \'Patient\'">\n                <button ion-button (click)="ReBook(item)">Re-Book</button>\n            </ion-item-options>\n            <ion-item-options *ngIf="item.patAppStatus== \'Canceled\' && selectRole == \'Patient\'">\n                <button ion-button (click)="ReBook(item)">Re-Book</button>\n            </ion-item-options>\n  \n              <ion-item-options *ngIf="item.patAppStatus == \'Pending\' && selectRole == \'Doctor\'">\n                <button ion-button (click)="Approved(item)">Approve</button>\n                <button ion-button color="danger" (click)="Rejected(item)">Reject</button>\n                <button ion-button color="danger" (click)="Canceled(item)">Cancel</button>\n              </ion-item-options>\n              <ion-item-options *ngIf="item.patAppStatus == \'Approved\' && selectRole == \'Doctor\'">\n                <button ion-button (click)="Addvisit(item)">Add Visit</button>\n                <button ion-button color="danger" (click)="Canceled(item)">Cancel</button>\n              </ion-item-options>          \n          </ion-item-sliding>\n      </ion-list>\n    </div>\n    <ion-fab bottom right>\n      <button style="background-color:#4633BE;" ion-fab (click)="addItem()"><ion-icon name="add"></ion-icon></button>\n      </ion-fab>\n\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/insurance/insuranceplanlist/insuranceplanlist.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */], __WEBPACK_IMPORTED_MODULE_6__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */]])
    ], InsuranceplanlistPage);
    return InsuranceplanlistPage;
}());

//# sourceMappingURL=insuranceplanlist.js.map

/***/ }),

/***/ 560:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LabprofileprofessionalinfoPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the LabprofileprofessionalinfoPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LabprofileprofessionalinfoPage = /** @class */ (function () {
    function LabprofileprofessionalinfoPage(navCtrl, navParams, api, alertCtrl, toastCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.toastCtrl = toastCtrl;
        this.mobileNumberValidation = /^[0-9]{10}$/;
        this.isShow = false;
        this.AllLabData = [];
        this.TempDisease = [];
        this.dataRes = [];
        this.AllDoctor = [];
        this.AllMedicine = [];
        this.professionalProfile = {
            fclProviderMap: '',
            labReportsLevel1: [],
            drugCompoundMaster: [],
            doctor: [],
        };
    }
    LabprofileprofessionalinfoPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad LabprofileprofessionalinfoPage');
        this.getProfessionalData();
        //  this.getAllLab()
    };
    LabprofileprofessionalinfoPage.prototype.getProfessionalData = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getLabProfileProfessionalData, '')
            .then(function (res) {
            if (res.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.professionalProfile.fclProviderMap = res.data.fclProviderMap;
                console.log("fclProviderMap is id ", res.data.fclProviderMap);
                console.log("location name is", res.data.locationName);
                console.log("Professional data is", res.data);
                console.log("Professional labReportLevel1ID is", res.data.labReportLevel1ID);
                _this.professionalProfile.labReportsLevel1 = res.data.labReportLevel1ID;
                _this.professionalProfile.doctor = res.data.doctor;
            }
        });
    };
    LabprofileprofessionalinfoPage.prototype.filterassociatedreport = function (searchTerm) {
        var _this = this;
        var empty;
        var data = {
            lrl1Name: this.associatedReport
        };
        this.api.wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getalllabreportbyparamter, data)
            .then(function (resp) {
            _this.AllLabData = resp.data;
            if (_this.associatedReport == "") {
                return _this.AllLabData = empty;
            }
        });
    };
    LabprofileprofessionalinfoPage.prototype.filterassociateddoctor = function (searchTerm) {
        var _this = this;
        var empty;
        var data = {
            DoctorName: this.associatedDoctor
        };
        this.api.wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getalldoctorbyparameter, data)
            .then(function (resp) {
            _this.AllDoctor = resp.data;
            if (_this.associatedDoctor == "") {
                return _this.AllDoctor = empty;
            }
        });
    };
    LabprofileprofessionalinfoPage.prototype.filterassociatedmedicine = function (searchTerm) {
        var _this = this;
        var empty;
        var data = {
            drugCompoundName: this.associatedMedicine
        };
        this.api.wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getallmedicinebyparameter, data)
            .then(function (resp) {
            _this.AllMedicine = resp.data;
            if (_this.associatedMedicine == "") {
                return _this.AllMedicine = empty;
            }
        });
    };
    LabprofileprofessionalinfoPage.prototype.getReportId = function (id) {
        console.log("id is>>>>>>", id.labReportLevel1ID);
        console.log(this.professionalProfile.labReportsLevel1);
        // alert(this.containsObject(id.labReportLevel1ID, this.professionalProfile.labReportsLevel1))
        if (this.containsObject(id.labReportLevel1ID, this.professionalProfile.labReportsLevel1)) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Your report is already present in the list", this.toastCtrl);
        }
        else {
            this.professionalProfile.labReportsLevel1.push(id);
        }
    };
    LabprofileprofessionalinfoPage.prototype.getDoctorId = function (d) {
        //  console.log("doctor object is like>>>>>>",d)
        if (this.containsObjectDoctor(d.fclProviderMapID, this.professionalProfile.doctor)) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Your report is already present in the list", this.toastCtrl);
        }
        else {
            this.professionalProfile.doctor.push(d);
        }
    };
    LabprofileprofessionalinfoPage.prototype.getMedicineId = function (d) {
        //  console.log("doctor object is like>>>>>>",d)
        if (this.containsObjectMedicine(d.drugCompoundID, this.professionalProfile.drugCompoundMaster)) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Your report is already present in the list", this.toastCtrl);
        }
        else {
            this.professionalProfile.drugCompoundMaster.push(d);
        }
    };
    LabprofileprofessionalinfoPage.prototype.containsObjectMedicine = function (obj, list) {
        var i;
        var result = list.map(function (a) { return a.drugCompoundID; });
        for (i = 0; i < result.length; i++) {
            // console.log("a is" + result[i])
            // console.log("obj is" + obj)
            if (result[i] == obj) {
                return true;
            }
            else {
            }
        }
        return false;
    };
    LabprofileprofessionalinfoPage.prototype.containsObjectDoctor = function (obj, list) {
        var i;
        var result = list.map(function (a) { return a.fclProviderMapID; });
        for (i = 0; i < result.length; i++) {
            // console.log("a is" + result[i])
            // console.log("obj is" + obj)
            if (result[i] == obj) {
                return true;
            }
            else {
            }
        }
        return false;
    };
    LabprofileprofessionalinfoPage.prototype.containsObject = function (obj, list) {
        var i;
        var result = list.map(function (a) { return a.labReportLevel1ID; });
        for (i = 0; i < result.length; i++) {
            // console.log("a is" + result[i])
            // console.log("obj is" + obj)
            if (result[i] == obj) {
                return true;
            }
            else {
            }
        }
        return false;
    };
    LabprofileprofessionalinfoPage.prototype.submitDetails = function () {
        var _this = this;
        //  console.log("SUBMITT::---- " + JSON.stringify(this.professionalProfile));
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].updateProfessionalLaboratoryProfile, this.professionalProfile)
            .then(function (res) {
            if (res.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(res.message, _this.toastCtrl);
                console.log("Details of Lab Professional data is submitted", res.message);
            }
        });
    };
    LabprofileprofessionalinfoPage.prototype.deleteElementReport = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this report?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.professionalProfile.labReportsLevel1.indexOf(list);
                        if (index > -1) {
                            _this.professionalProfile.labReportsLevel1.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    LabprofileprofessionalinfoPage.prototype.deleteElementDoctor = function (list) {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: 'Confirm Delete',
            message: 'Are you sure, you want to delete this Doctor?',
            buttons: [
                {
                    text: 'Cancel',
                    role: 'cancel',
                    handler: function () {
                        console.log('Cancel clicked');
                    }
                },
                {
                    text: 'OK',
                    handler: function () {
                        var index = _this.professionalProfile.doctor.indexOf(list);
                        if (index > -1) {
                            _this.professionalProfile.doctor.splice(index, 1);
                        }
                        console.log('Item deleted');
                    }
                }
            ]
        });
        alert.present();
    };
    LabprofileprofessionalinfoPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-labprofileprofessionalinfo',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labprofileprofessionalinfo/labprofileprofessionalinfo.html"*/'<!--\n  Generated template for the LabprofileprofessionalinfoPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n</ion-header>\n\n\n<ion-content padding>\n\n   <!-- <ion-item>\n    <ion-label floating>Associated Doctor</ion-label>\n    <ion-input type="text" (keyup)="filterassociateddoctor($event)" [(ngModel)]="associatedDoctor"></ion-input>\n  </ion-item>\n\n   <ion-item *ngIf=" AllDoctor?.length > 0">\n   <ion-list *ngFor="let d of AllDoctor" (click)="getDoctorId(d)"> \n    {{d.providerName}}\n   </ion-list>\n   </ion-item>\n\n  <ion-item>\n    <ion-list>\n      <ion-item *ngFor="let list of professionalProfile.doctor">\n        {{list.providerName}}\n        <ion-icon class="trashicon" (click)="deleteElementDoctor(list)" name="trash" data-ng-if="(professionalProfile.doctor.length > 0)"></ion-icon>\n      </ion-item>\n    </ion-list>\n  </ion-item> -->\n\n\n<!--@arpit\n  <ion-item>\n    <ion-label floating>Associated Report</ion-label>\n    <ion-input type="text"  (keyup)="filterassociatedreport($event)" [(ngModel)]="associatedReport" ></ion-input>\n  </ion-item>\n\n  <ion-item *ngIf=" AllLabData?.length > 0">\n   <ion-list *ngFor="let d of AllLabData" (click)="getReportId(d)"> \n    {{d.lrl1Name  }}\n   </ion-list>\n   </ion-item>\n\n  <ion-item>\n    <ion-list>\n      <ion-item *ngFor="let list of professionalProfile.labReportsLevel1">\n        {{list.lrl1Name}}\n        <ion-icon class="trashicon" (click)="deleteElementReport(list)" name="trash" data-ng-if="(professionalProfile.labReportsLevel1.length > 0)"></ion-icon>\n      </ion-item>\n    </ion-list>\n  </ion-item>\n-->\n\n <!--  <ion-item>\n    <ion-label floating>Associated Medicine</ion-label>\n    <ion-input type="text" [(ngModel)]="associatedMedicine"></ion-input>\n  </ion-item>\n\n  <button ion-button (click)="addtoListMedicine()">Add Medicine</button>\n\n  <ion-item>\n    <ion-list>\n      <ion-item *ngFor="let list of professionalProfile.associatedMedicineList">\n        {{list}}\n        <ion-icon class="trashicon" (click)="deleteElementMedicine(list)" name="trash" data-ng-if="(professionalProfile.associatedMedicineList.length > 0)"></ion-icon>\n      </ion-item>\n    </ion-list>\n  </ion-item> -->\n\n  \n  <!-- <div padding align="center">\n    <div padding>\n      <button ion-button type="submit" (click)="submitDetails()">Submit</button>\n      <button ion-button type="Cancel">Cancel</button>\n    </div>\n  </div> -->\n</ion-content>'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/labprofileprofessionalinfo/labprofileprofessionalinfo.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], LabprofileprofessionalinfoPage);
    return LabprofileprofessionalinfoPage;
}());

//# sourceMappingURL=labprofileprofessionalinfo.js.map

/***/ }),

/***/ 561:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__ = __webpack_require__(562);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__app_module__ = __webpack_require__(566);


Object(__WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__["a" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_1__app_module__["a" /* AppModule */]);
//# sourceMappingURL=main.js.map

/***/ }),

/***/ 566:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export firebaseConfig */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__ = __webpack_require__(64);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__app_component__ = __webpack_require__(688);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_commonpages_login_login__ = __webpack_require__(136);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pages_doctor_dash_board_for_doctor_dash_board_for_doctor__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__pages_patient_dash_board_for_patient_dash_board_for_patient__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__pages_patient_addappointment_addappointment__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__pages_patient_patientprofile_patientprofile__ = __webpack_require__(279);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__components_scrollable_tabs_scrollable_tabs__ = __webpack_require__(689);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__pages_patient_patientprofiledocuments_patientprofiledocuments__ = __webpack_require__(281);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__pages_patient_profiledemographic_profiledemographic__ = __webpack_require__(280);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__pages_commonpages_changepassword_changepassword__ = __webpack_require__(97);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__pages_commonpages_forgotpassword_forgotpassword__ = __webpack_require__(231);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__pages_patient_patientprofilepersonal_patientprofilepersonal__ = __webpack_require__(282);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__pages_patient_patientprofileextended_patientprofileextended__ = __webpack_require__(283);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__pages_doctor_doctorprofilepersonal_doctorprofilepersonal__ = __webpack_require__(242);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__pages_doctor_doctorprofileextended_doctorprofileextended__ = __webpack_require__(243);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__pages_doctor_doctorprofile_doctorprofile__ = __webpack_require__(241);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__pages_doctor_doctorprofileprofessionalinfo_doctorprofileprofessionalinfo__ = __webpack_require__(245);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__pages_patient_appointmentlist_appointmentlist__ = __webpack_require__(137);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__pages_patient_viewappointment_viewappointment__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__pages_patient_editappointment_editappointment__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__pages_doctor_doctorvisitlist_doctorvisitlist__ = __webpack_require__(138);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__pages_patient_patientdoctorvisitlist_patientdoctorvisitlist__ = __webpack_require__(141);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__ionic_native_status_bar__ = __webpack_require__(438);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__ionic_native_splash_screen__ = __webpack_require__(439);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__angular_common_http__ = __webpack_require__(172);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__pages_patient_patientdoctorvisitlistview_patientdoctorvisitlistview__ = __webpack_require__(236);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__ionic_native_file__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__ionic_native_file_path__ = __webpack_require__(48);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__pages_doctor_doctor_add_or_edit_visit_doctor_add_or_edit_visit__ = __webpack_require__(235);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__pages_laboratory_labprofile_labprofile__ = __webpack_require__(261);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__pages_laboratory_labprofilelaboratory_labprofilelaboratory__ = __webpack_require__(262);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__pages_laboratory_labprofiledemographic_labprofiledemographic__ = __webpack_require__(263);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__pages_laboratory_labprofileprofessionalinfo_labprofileprofessionalinfo__ = __webpack_require__(560);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__pages_medicalstore_medicalprofile_medicalprofile__ = __webpack_require__(547);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__pages_medicalstore_medicalprofilebasicdetail_medicalprofilebasicdetail__ = __webpack_require__(269);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__pages_medicalstore_medicalprofiledemographic_medicalprofiledemographic__ = __webpack_require__(270);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__pages_medicalstore_medicalprofileprofessional_medicalprofileprofessional__ = __webpack_require__(271);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__pages_medicalstore_medicalchangepassword_medicalchangepassword__ = __webpack_require__(268);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__pages_insurance_insuranceprofile_insuranceprofile__ = __webpack_require__(543);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__pages_insurance_insurancebasicdetail_insurancebasicdetail__ = __webpack_require__(252);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__pages_insurance_insuranceprofiledemographic_insuranceprofiledemographic__ = __webpack_require__(254);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__pages_insurance_insuranceprofileprofessional_insuranceprofileprofessional__ = __webpack_require__(255);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__pages_insurance_insurancechangepassword_insurancechangepassword__ = __webpack_require__(253);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__pages_hospital_hospitalprofile_hospitalprofile__ = __webpack_require__(537);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__pages_hospital_hospitalbasicdetail_hospitalbasicdetail__ = __webpack_require__(248);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__pages_hospital_hospitalprofiledemographic_hospitalprofiledemographic__ = __webpack_require__(250);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__pages_hospital_hospitalprofileprofessional_hospitalprofileprofessional__ = __webpack_require__(251);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__pages_hospital_hospitalchangepassword_hospitalchangepassword__ = __webpack_require__(249);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__pages_patient_patientlabreportlist_patientlabreportlist__ = __webpack_require__(142);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__pages_patient_patientmedicineboughtlist_patientmedicineboughtlist__ = __webpack_require__(553);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__pages_patient_patientinsurancelist_patientinsurancelist__ = __webpack_require__(552);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__pages_patient_patienthospitaladmitlist_patienthospitaladmitlist__ = __webpack_require__(551);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__pages_patient_patientclaimedinsurancelist_patientclaimedinsurancelist__ = __webpack_require__(550);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__pages_patient_patientlabreportlistview_patientlabreportlistview__ = __webpack_require__(237);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__pages_patient_patientclaimedinsurancelistview_patientclaimedinsurancelistview__ = __webpack_require__(275);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__pages_patient_patientmedicineboughtlistview_patientmedicineboughtlistview__ = __webpack_require__(278);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__pages_patient_patientinsurancelistview_patientinsurancelistview__ = __webpack_require__(277);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__pages_patient_patienthospitaladmitlistview_patienthospitaladmitlistview__ = __webpack_require__(276);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__pages_laboratory_laboratorydashboard_laboratorydashboard__ = __webpack_require__(99);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__pages_laboratory_labincomingappoinment_labincomingappoinment__ = __webpack_require__(259);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__pages_laboratory_labreport_labreport__ = __webpack_require__(143);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__pages_hospital_dash_board_for_hospital_dash_board_for_hospital__ = __webpack_require__(535);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__pages_hospital_hospitalclaimedinsuranceincomingapporvallist_hospitalclaimedinsuranceincomingapporvallist__ = __webpack_require__(556);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__pages_hospital_hospitalclaimedinsuranceincomingapporvallistview_hospitalclaimedinsuranceincomingapporvallistview__ = __webpack_require__(536);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__pages_hospital_hospitalpatientadmitlist_hospitalpatientadmitlist__ = __webpack_require__(557);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__pages_insurance_dash_board_for_insurance_dash_board_for_insurance__ = __webpack_require__(540);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__pages_insurance_insuranceincomingclaimlist_insuranceincomingclaimlist__ = __webpack_require__(558);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__pages_insurance_insuranceincomingclaimlistview_insuranceincomingclaimlistview__ = __webpack_require__(541);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__pages_insurance_insuranceplanlist_insuranceplanlist__ = __webpack_require__(559);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__pages_insurance_insuranceplanlistdetailview_insuranceplanlistdetailview__ = __webpack_require__(542);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__pages_medicalstore_dash_board_for_medicalstore_dash_board_for_medicalstore__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__pages_medicalstore_incomingmedicinerequiredlist_incomingmedicinerequiredlist__ = __webpack_require__(284);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__pages_medicalstore_incomingmedicinerequiredlistview_incomingmedicinerequiredlistview__ = __webpack_require__(546);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__pages_medicalstore_tracking_tracking__ = __webpack_require__(548);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__pages_commonpages_signup_signup__ = __webpack_require__(232);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__pages_insurance_addplan_addplan__ = __webpack_require__(539);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__pages_patient_addbooklab_addbooklab__ = __webpack_require__(74);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__pages_patient_patientaddinsurance_patientaddinsurance__ = __webpack_require__(549);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__ionic_native_file_chooser__ = __webpack_require__(396);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__ionic_native_base64__ = __webpack_require__(395);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__ionic_native_document_picker__ = __webpack_require__(397);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__pages_hospital_patientadmitform_patientadmitform__ = __webpack_require__(538);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_88__providers_validation_validation__ = __webpack_require__(440);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_89__components_control_messages_components_control_messages_components__ = __webpack_require__(690);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_90__pages_patient_patienttracking_patienttracking__ = __webpack_require__(554);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_91__pages_laboratory_labaddreport_labaddreport__ = __webpack_require__(100);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_92__pages_laboratory_labviewreport_labviewreport__ = __webpack_require__(238);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_93__pages_patient_patientbooklablist_patientbooklablist__ = __webpack_require__(273);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_94__pages_laboratory_labbookinglist_labbookinglist__ = __webpack_require__(544);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_95__pages_laboratory_laboratorviewappoinment_laboratorviewappoinment__ = __webpack_require__(260);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_96__pages_doctor_doctorvisitlistview_doctorvisitlistview__ = __webpack_require__(234);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_97__ionic_native_file_transfer__ = __webpack_require__(121);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_98__pages_patient_rebookappointment_rebookappointment__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_99__pages_patient_viewpatientbooklab_viewpatientbooklab__ = __webpack_require__(274);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_100__ionic_native_in_app_browser__ = __webpack_require__(195);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_101__pages_pharmadelivered_pharmadelivered__ = __webpack_require__(98);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_102__pages_patient_addpharmaappointment_addpharmaappointment__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_103__pages_patient_pharmaappointmentlist_pharmaappointmentlist__ = __webpack_require__(286);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_104__pages_pharmaview_pharmaview__ = __webpack_require__(287);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_105__pages_patientreports_patientreports__ = __webpack_require__(139);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_106__pipes_pipes_module__ = __webpack_require__(691);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_107__pages_medicinesrequestview_medicinesrequestview__ = __webpack_require__(285);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_108__pages_patient_editpharmaappointment_editpharmaappointment__ = __webpack_require__(288);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_109__pages_deliverables_deliverables__ = __webpack_require__(240);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_110__pages_laboratory_reportfeeslist_reportfeeslist__ = __webpack_require__(265);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_111__pages_laboratory_addreportfees_addreportfees__ = __webpack_require__(257);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_112__pages_laboratory_editreportfees_editreportfees__ = __webpack_require__(258);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_113__pages_listmedicineinventory_listmedicineinventory__ = __webpack_require__(266);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_114__pages_medicineinventory_medicineinventory__ = __webpack_require__(267);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_115__pages_editemedicineinventory_editemedicineinventory__ = __webpack_require__(247);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_116__pages_laboratory_addnewreport_addnewreport__ = __webpack_require__(256);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_117__pages_addreport_addreport__ = __webpack_require__(230);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_118__ionic_native_network__ = __webpack_require__(177);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_119__ionic_native_crop_ngx__ = __webpack_require__(398);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_120__ionic_native_fcm__ = __webpack_require__(120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_121__pages_doctor_transactionhistory_transactionhistory__ = __webpack_require__(140);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_122__pages_laboratory_labtransactionhistory_labtransactionhistory__ = __webpack_require__(239);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_123__ionic_native_local_notifications__ = __webpack_require__(196);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_124__pages_doctor_doctorprofiledocument_doctorprofiledocument__ = __webpack_require__(246);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_125__ionic_native_google_plus__ = __webpack_require__(393);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_126__ionic_native_google_maps__ = __webpack_require__(122);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_127__ionic_native_geolocation__ = __webpack_require__(123);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_128_angularfire2__ = __webpack_require__(693);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_128_angularfire2___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_128_angularfire2__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_129_firebase__ = __webpack_require__(977);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_129_firebase___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_129_firebase__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_130__pages_mapdemo_mapdemo__ = __webpack_require__(545);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_131__pages_addresstopinmap_addresstopinmap__ = __webpack_require__(534);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_132__ionic_native_photo_viewer__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_133__pages_laboratory_labprofiledocument_labprofiledocument__ = __webpack_require__(264);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_134__pages_medicalstore_medicalstoreprofiledocument_medicalstoreprofiledocument__ = __webpack_require__(272);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_135__ionic_native_video_player__ = __webpack_require__(392);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_136__pages_video_video__ = __webpack_require__(555);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_137__ionic_native_image_picker__ = __webpack_require__(119);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_138_ng2_select2__ = __webpack_require__(985);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_138_ng2_select2___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_138_ng2_select2__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_139__pages_addpinlocation_addpinlocation__ = __webpack_require__(533);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_140__providers_geocoder_geocoder__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_141__angular_http__ = __webpack_require__(986);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_142__ionic_native_native_geocoder__ = __webpack_require__(347);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_143__pages_patient_order_details_patient_order_details__ = __webpack_require__(233);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_144__pages_doctor_doctorprofiledemographic_doctorprofiledemographic__ = __webpack_require__(244);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

































































































//import { DoctorvisitlistviewPageModule } from '../pages/doctor/doctorvisitlistview/doctorvisitlistview.module';













// import { delimiter } from "path";























// import { ImagePicker } from "@ionic-native/image-picker";












var firebaseConfig = {
    apiKey: "AIzaSyAkxMqQW32yABSn5JlwC0DTggNPfbvcnVA",
    authDomain: "myfirstpro-bb873.firebaseapp.com",
    databaseURL: "https://myfirstpro-bb873.firebaseio.com",
    projectId: "myfirstpro-bb873",
    storageBucket: "myfirstpro-bb873.appspot.com",
    messagingSenderId: "401030294796",
    appId: "1:401030294796:web:8f08cdbfd69888e3146d29",
    measurementId: "G-V5VXXFL2BZ"
};
__WEBPACK_IMPORTED_MODULE_129_firebase___default.a.initializeApp(firebaseConfig);
var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_3__app_component__["a" /* MyApp */],
                __WEBPACK_IMPORTED_MODULE_4__pages_commonpages_login_login__["a" /* LoginPage */],
                __WEBPACK_IMPORTED_MODULE_133__pages_laboratory_labprofiledocument_labprofiledocument__["a" /* LabprofiledocumentPage */],
                __WEBPACK_IMPORTED_MODULE_134__pages_medicalstore_medicalstoreprofiledocument_medicalstoreprofiledocument__["a" /* MedicalstoreprofiledocumentPage */],
                __WEBPACK_IMPORTED_MODULE_121__pages_doctor_transactionhistory_transactionhistory__["a" /* TransactionhistoryPage */],
                __WEBPACK_IMPORTED_MODULE_122__pages_laboratory_labtransactionhistory_labtransactionhistory__["a" /* LabtransactionhistoryPage */],
                __WEBPACK_IMPORTED_MODULE_80__pages_commonpages_signup_signup__["a" /* SignupPage */],
                __WEBPACK_IMPORTED_MODULE_5__pages_doctor_dash_board_for_doctor_dash_board_for_doctor__["a" /* DashBoardForDoctorPage */],
                __WEBPACK_IMPORTED_MODULE_6__pages_patient_dash_board_for_patient_dash_board_for_patient__["a" /* DashBoardForPatientPage */],
                __WEBPACK_IMPORTED_MODULE_7__pages_patient_addappointment_addappointment__["a" /* AddappointmentPage */],
                __WEBPACK_IMPORTED_MODULE_144__pages_doctor_doctorprofiledemographic_doctorprofiledemographic__["a" /* DoctorprofiledemographicPage */],
                __WEBPACK_IMPORTED_MODULE_8__pages_patient_patientprofile_patientprofile__["a" /* PatientprofilePage */],
                __WEBPACK_IMPORTED_MODULE_14__pages_patient_patientprofilepersonal_patientprofilepersonal__["a" /* PatientprofilepersonalPage */],
                __WEBPACK_IMPORTED_MODULE_11__pages_patient_profiledemographic_profiledemographic__["a" /* ProfiledemographicPage */],
                __WEBPACK_IMPORTED_MODULE_16__pages_patient_patientprofileextended_patientprofileextended__["a" /* PatientprofileextendedPage */],
                __WEBPACK_IMPORTED_MODULE_10__pages_patient_patientprofiledocuments_patientprofiledocuments__["a" /* PatientprofiledocumentsPage */],
                __WEBPACK_IMPORTED_MODULE_124__pages_doctor_doctorprofiledocument_doctorprofiledocument__["a" /* DoctorprofiledocumentPage */],
                __WEBPACK_IMPORTED_MODULE_12__pages_commonpages_changepassword_changepassword__["a" /* ChangepasswordPage */],
                __WEBPACK_IMPORTED_MODULE_19__pages_doctor_doctorprofile_doctorprofile__["a" /* DoctorprofilePage */],
                __WEBPACK_IMPORTED_MODULE_17__pages_doctor_doctorprofilepersonal_doctorprofilepersonal__["a" /* DoctorprofilepersonalPage */],
                __WEBPACK_IMPORTED_MODULE_18__pages_doctor_doctorprofileextended_doctorprofileextended__["a" /* DoctorprofileextendedPage */],
                __WEBPACK_IMPORTED_MODULE_20__pages_doctor_doctorprofileprofessionalinfo_doctorprofileprofessionalinfo__["a" /* DoctorprofileprofessionalinfoPage */],
                __WEBPACK_IMPORTED_MODULE_9__components_scrollable_tabs_scrollable_tabs__["a" /* ScrollableTabs */],
                __WEBPACK_IMPORTED_MODULE_21__pages_patient_appointmentlist_appointmentlist__["a" /* AppointmentlistPage */],
                __WEBPACK_IMPORTED_MODULE_103__pages_patient_pharmaappointmentlist_pharmaappointmentlist__["a" /* PharmaAppointmentlistPage */],
                __WEBPACK_IMPORTED_MODULE_22__pages_patient_viewappointment_viewappointment__["a" /* ViewappointmentPage */],
                __WEBPACK_IMPORTED_MODULE_23__pages_patient_editappointment_editappointment__["a" /* EditappointmentPage */],
                __WEBPACK_IMPORTED_MODULE_24__pages_doctor_doctorvisitlist_doctorvisitlist__["a" /* DoctorvisitlistPage */],
                __WEBPACK_IMPORTED_MODULE_25__pages_patient_patientdoctorvisitlist_patientdoctorvisitlist__["a" /* PatientdoctorvisitlistPage */],
                __WEBPACK_IMPORTED_MODULE_31__pages_patient_patientdoctorvisitlistview_patientdoctorvisitlistview__["a" /* PatientdoctorvisitlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_13__pages_commonpages_forgotpassword_forgotpassword__["a" /* ForgotpasswordPage */],
                __WEBPACK_IMPORTED_MODULE_8__pages_patient_patientprofile_patientprofile__["a" /* PatientprofilePage */],
                __WEBPACK_IMPORTED_MODULE_14__pages_patient_patientprofilepersonal_patientprofilepersonal__["a" /* PatientprofilepersonalPage */],
                __WEBPACK_IMPORTED_MODULE_11__pages_patient_profiledemographic_profiledemographic__["a" /* ProfiledemographicPage */],
                __WEBPACK_IMPORTED_MODULE_16__pages_patient_patientprofileextended_patientprofileextended__["a" /* PatientprofileextendedPage */],
                __WEBPACK_IMPORTED_MODULE_10__pages_patient_patientprofiledocuments_patientprofiledocuments__["a" /* PatientprofiledocumentsPage */],
                __WEBPACK_IMPORTED_MODULE_143__pages_patient_order_details_patient_order_details__["a" /* PatientOrderDetailsPage */],
                __WEBPACK_IMPORTED_MODULE_124__pages_doctor_doctorprofiledocument_doctorprofiledocument__["a" /* DoctorprofiledocumentPage */],
                __WEBPACK_IMPORTED_MODULE_34__pages_doctor_doctor_add_or_edit_visit_doctor_add_or_edit_visit__["a" /* DoctorAddOrEditVisitPage */],
                __WEBPACK_IMPORTED_MODULE_35__pages_laboratory_labprofile_labprofile__["a" /* LabprofilePage */],
                __WEBPACK_IMPORTED_MODULE_36__pages_laboratory_labprofilelaboratory_labprofilelaboratory__["a" /* LabprofilelaboratoryPage */],
                __WEBPACK_IMPORTED_MODULE_37__pages_laboratory_labprofiledemographic_labprofiledemographic__["a" /* LabprofiledemographicPage */],
                __WEBPACK_IMPORTED_MODULE_38__pages_laboratory_labprofileprofessionalinfo_labprofileprofessionalinfo__["a" /* LabprofileprofessionalinfoPage */],
                __WEBPACK_IMPORTED_MODULE_39__pages_medicalstore_medicalprofile_medicalprofile__["a" /* MedicalprofilePage */],
                __WEBPACK_IMPORTED_MODULE_40__pages_medicalstore_medicalprofilebasicdetail_medicalprofilebasicdetail__["a" /* MedicalprofilebasicdetailPage */],
                __WEBPACK_IMPORTED_MODULE_41__pages_medicalstore_medicalprofiledemographic_medicalprofiledemographic__["a" /* MedicalprofiledemographicPage */],
                __WEBPACK_IMPORTED_MODULE_42__pages_medicalstore_medicalprofileprofessional_medicalprofileprofessional__["a" /* MedicalprofileprofessionalPage */],
                __WEBPACK_IMPORTED_MODULE_43__pages_medicalstore_medicalchangepassword_medicalchangepassword__["a" /* MedicalchangepasswordPage */],
                __WEBPACK_IMPORTED_MODULE_44__pages_insurance_insuranceprofile_insuranceprofile__["a" /* InsuranceprofilePage */],
                __WEBPACK_IMPORTED_MODULE_45__pages_insurance_insurancebasicdetail_insurancebasicdetail__["a" /* InsurancebasicdetailPage */],
                __WEBPACK_IMPORTED_MODULE_46__pages_insurance_insuranceprofiledemographic_insuranceprofiledemographic__["a" /* InsuranceprofiledemographicPage */],
                __WEBPACK_IMPORTED_MODULE_47__pages_insurance_insuranceprofileprofessional_insuranceprofileprofessional__["a" /* InsuranceprofileprofessionalPage */],
                __WEBPACK_IMPORTED_MODULE_48__pages_insurance_insurancechangepassword_insurancechangepassword__["a" /* InsurancechangepasswordPage */],
                __WEBPACK_IMPORTED_MODULE_49__pages_hospital_hospitalprofile_hospitalprofile__["a" /* HospitalprofilePage */],
                __WEBPACK_IMPORTED_MODULE_50__pages_hospital_hospitalbasicdetail_hospitalbasicdetail__["a" /* HospitalbasicdetailPage */],
                __WEBPACK_IMPORTED_MODULE_51__pages_hospital_hospitalprofiledemographic_hospitalprofiledemographic__["a" /* HospitalprofiledemographicPage */],
                __WEBPACK_IMPORTED_MODULE_52__pages_hospital_hospitalprofileprofessional_hospitalprofileprofessional__["a" /* HospitalprofileprofessionalPage */],
                __WEBPACK_IMPORTED_MODULE_53__pages_hospital_hospitalchangepassword_hospitalchangepassword__["a" /* HospitalchangepasswordPage */],
                __WEBPACK_IMPORTED_MODULE_54__pages_patient_patientlabreportlist_patientlabreportlist__["a" /* PatientlabreportlistPage */],
                __WEBPACK_IMPORTED_MODULE_55__pages_patient_patientmedicineboughtlist_patientmedicineboughtlist__["a" /* PatientmedicineboughtlistPage */],
                __WEBPACK_IMPORTED_MODULE_56__pages_patient_patientinsurancelist_patientinsurancelist__["a" /* PatientinsurancelistPage */],
                __WEBPACK_IMPORTED_MODULE_57__pages_patient_patienthospitaladmitlist_patienthospitaladmitlist__["a" /* PatienthospitaladmitlistPage */],
                __WEBPACK_IMPORTED_MODULE_58__pages_patient_patientclaimedinsurancelist_patientclaimedinsurancelist__["a" /* PatientclaimedinsurancelistPage */],
                __WEBPACK_IMPORTED_MODULE_59__pages_patient_patientlabreportlistview_patientlabreportlistview__["a" /* PatientlabreportlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_60__pages_patient_patientclaimedinsurancelistview_patientclaimedinsurancelistview__["a" /* PatientclaimedinsurancelistviewPage */],
                __WEBPACK_IMPORTED_MODULE_61__pages_patient_patientmedicineboughtlistview_patientmedicineboughtlistview__["a" /* PatientmedicineboughtlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_62__pages_patient_patientinsurancelistview_patientinsurancelistview__["a" /* PatientinsurancelistviewPage */],
                __WEBPACK_IMPORTED_MODULE_63__pages_patient_patienthospitaladmitlistview_patienthospitaladmitlistview__["a" /* PatienthospitaladmitlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_64__pages_laboratory_laboratorydashboard_laboratorydashboard__["a" /* LaboratorydashboardPage */],
                __WEBPACK_IMPORTED_MODULE_65__pages_laboratory_labincomingappoinment_labincomingappoinment__["a" /* LabincomingappoinmentPage */],
                __WEBPACK_IMPORTED_MODULE_66__pages_laboratory_labreport_labreport__["a" /* LabreportPage */],
                __WEBPACK_IMPORTED_MODULE_67__pages_hospital_dash_board_for_hospital_dash_board_for_hospital__["a" /* DashBoardForHospitalPage */],
                __WEBPACK_IMPORTED_MODULE_68__pages_hospital_hospitalclaimedinsuranceincomingapporvallist_hospitalclaimedinsuranceincomingapporvallist__["a" /* HospitalclaimedinsuranceincomingapporvallistPage */],
                __WEBPACK_IMPORTED_MODULE_69__pages_hospital_hospitalclaimedinsuranceincomingapporvallistview_hospitalclaimedinsuranceincomingapporvallistview__["a" /* HospitalclaimedinsuranceincomingapporvallistviewPage */],
                __WEBPACK_IMPORTED_MODULE_70__pages_hospital_hospitalpatientadmitlist_hospitalpatientadmitlist__["a" /* HospitalpatientadmitlistPage */],
                __WEBPACK_IMPORTED_MODULE_71__pages_insurance_dash_board_for_insurance_dash_board_for_insurance__["a" /* DashBoardForInsurancePage */],
                __WEBPACK_IMPORTED_MODULE_72__pages_insurance_insuranceincomingclaimlist_insuranceincomingclaimlist__["a" /* InsuranceincomingclaimlistPage */],
                __WEBPACK_IMPORTED_MODULE_73__pages_insurance_insuranceincomingclaimlistview_insuranceincomingclaimlistview__["a" /* InsuranceincomingclaimlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_74__pages_insurance_insuranceplanlist_insuranceplanlist__["a" /* InsuranceplanlistPage */],
                __WEBPACK_IMPORTED_MODULE_75__pages_insurance_insuranceplanlistdetailview_insuranceplanlistdetailview__["a" /* InsuranceplanlistdetailviewPage */],
                __WEBPACK_IMPORTED_MODULE_76__pages_medicalstore_dash_board_for_medicalstore_dash_board_for_medicalstore__["a" /* DashBoardForMedicalstorePage */],
                __WEBPACK_IMPORTED_MODULE_77__pages_medicalstore_incomingmedicinerequiredlist_incomingmedicinerequiredlist__["a" /* IncomingmedicinerequiredlistPage */],
                __WEBPACK_IMPORTED_MODULE_78__pages_medicalstore_incomingmedicinerequiredlistview_incomingmedicinerequiredlistview__["a" /* IncomingmedicinerequiredlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_79__pages_medicalstore_tracking_tracking__["a" /* TrackingPage */],
                __WEBPACK_IMPORTED_MODULE_81__pages_insurance_addplan_addplan__["a" /* AddplanPage */],
                __WEBPACK_IMPORTED_MODULE_82__pages_patient_addbooklab_addbooklab__["a" /* AddbooklabPage */],
                __WEBPACK_IMPORTED_MODULE_83__pages_patient_patientaddinsurance_patientaddinsurance__["a" /* PatientaddinsurancePage */],
                __WEBPACK_IMPORTED_MODULE_87__pages_hospital_patientadmitform_patientadmitform__["a" /* PatientadmitformPage */],
                __WEBPACK_IMPORTED_MODULE_89__components_control_messages_components_control_messages_components__["a" /* ControlMessagesComponent */],
                __WEBPACK_IMPORTED_MODULE_90__pages_patient_patienttracking_patienttracking__["a" /* PatienttrackingPage */],
                __WEBPACK_IMPORTED_MODULE_91__pages_laboratory_labaddreport_labaddreport__["a" /* LabaddreportPage */],
                __WEBPACK_IMPORTED_MODULE_92__pages_laboratory_labviewreport_labviewreport__["a" /* LabviewreportPage */],
                __WEBPACK_IMPORTED_MODULE_134__pages_medicalstore_medicalstoreprofiledocument_medicalstoreprofiledocument__["a" /* MedicalstoreprofiledocumentPage */],
                __WEBPACK_IMPORTED_MODULE_93__pages_patient_patientbooklablist_patientbooklablist__["a" /* PatientbooklablistPage */],
                __WEBPACK_IMPORTED_MODULE_94__pages_laboratory_labbookinglist_labbookinglist__["a" /* LabbookinglistPage */],
                __WEBPACK_IMPORTED_MODULE_95__pages_laboratory_laboratorviewappoinment_laboratorviewappoinment__["a" /* LaboratorviewappoinmentPage */],
                __WEBPACK_IMPORTED_MODULE_92__pages_laboratory_labviewreport_labviewreport__["a" /* LabviewreportPage */],
                __WEBPACK_IMPORTED_MODULE_96__pages_doctor_doctorvisitlistview_doctorvisitlistview__["a" /* DoctorvisitlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_98__pages_patient_rebookappointment_rebookappointment__["a" /* RebookappointmentPage */],
                __WEBPACK_IMPORTED_MODULE_99__pages_patient_viewpatientbooklab_viewpatientbooklab__["a" /* ViewpatientbooklabPage */],
                __WEBPACK_IMPORTED_MODULE_101__pages_pharmadelivered_pharmadelivered__["a" /* PharmadeliveredPage */],
                __WEBPACK_IMPORTED_MODULE_102__pages_patient_addpharmaappointment_addpharmaappointment__["a" /* AddPharmaAppointmentPage */],
                __WEBPACK_IMPORTED_MODULE_104__pages_pharmaview_pharmaview__["a" /* PharmaviewPage */],
                __WEBPACK_IMPORTED_MODULE_102__pages_patient_addpharmaappointment_addpharmaappointment__["a" /* AddPharmaAppointmentPage */],
                __WEBPACK_IMPORTED_MODULE_105__pages_patientreports_patientreports__["a" /* PatientreportsPage */],
                __WEBPACK_IMPORTED_MODULE_107__pages_medicinesrequestview_medicinesrequestview__["a" /* MedicinesrequestviewPage */],
                __WEBPACK_IMPORTED_MODULE_108__pages_patient_editpharmaappointment_editpharmaappointment__["a" /* EditPharmaAppointmentPage */],
                __WEBPACK_IMPORTED_MODULE_105__pages_patientreports_patientreports__["a" /* PatientreportsPage */],
                __WEBPACK_IMPORTED_MODULE_109__pages_deliverables_deliverables__["a" /* DeliverablesPage */],
                __WEBPACK_IMPORTED_MODULE_110__pages_laboratory_reportfeeslist_reportfeeslist__["a" /* ReportfeeslistPage */],
                __WEBPACK_IMPORTED_MODULE_111__pages_laboratory_addreportfees_addreportfees__["a" /* AddreportfeesPage */],
                __WEBPACK_IMPORTED_MODULE_112__pages_laboratory_editreportfees_editreportfees__["a" /* EditreportfeesPage */],
                __WEBPACK_IMPORTED_MODULE_116__pages_laboratory_addnewreport_addnewreport__["a" /* AddnewreportPage */],
                __WEBPACK_IMPORTED_MODULE_113__pages_listmedicineinventory_listmedicineinventory__["a" /* ListmedicineinventoryPage */],
                __WEBPACK_IMPORTED_MODULE_114__pages_medicineinventory_medicineinventory__["a" /* MedicineinventoryPage */],
                __WEBPACK_IMPORTED_MODULE_115__pages_editemedicineinventory_editemedicineinventory__["a" /* EditemedicineinventoryPage */],
                __WEBPACK_IMPORTED_MODULE_117__pages_addreport_addreport__["a" /* AddreportPage */],
                __WEBPACK_IMPORTED_MODULE_130__pages_mapdemo_mapdemo__["a" /* MapdemoPage */],
                __WEBPACK_IMPORTED_MODULE_131__pages_addresstopinmap_addresstopinmap__["a" /* AddresstopinmapPage */],
                __WEBPACK_IMPORTED_MODULE_136__pages_video_video__["a" /* VideoPage */],
                __WEBPACK_IMPORTED_MODULE_139__pages_addpinlocation_addpinlocation__["a" /* AddpinlocationPage */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__["a" /* BrowserModule */],
                __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["g" /* IonicModule */].forRoot(__WEBPACK_IMPORTED_MODULE_3__app_component__["a" /* MyApp */], {}, {
                    links: [
                        { loadChildren: '../pages/addpinlocation/addpinlocation.module#AddpinlocationPageModule', name: 'AddpinlocationPage', segment: 'addpinlocation', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/addreport/addreport.module#AddreportPageModule', name: 'AddreportPage', segment: 'addreport', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/addresstopinmap/addresstopinmap.module#AddresstopinmapPageModule', name: 'AddresstopinmapPage', segment: 'addresstopinmap', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/commonpages/changepassword/changepassword.module#ChangepasswordPageModule', name: 'ChangepasswordPage', segment: 'changepassword', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/commonpages/forgotpassword/forgotpassword.module#ForgotpasswordPageModule', name: 'ForgotpasswordPage', segment: 'forgotpassword', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/commonpages/login/login.module#LoginPageModule', name: 'LoginPage', segment: 'login', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/commonpages/signup/signup.module#SignupPageModule', name: 'SignupPage', segment: 'signup', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/deliverables/deliverables.module#DeliverablesPageModule', name: 'DeliverablesPage', segment: 'deliverables', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/doctor/dash-board-for-doctor/dash-board-for-doctor.module#DashBoardForDoctorPageModule', name: 'DashBoardForDoctorPage', segment: 'dash-board-for-doctor', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/doctor/doctorprofile/doctorprofile.module#DoctorprofilePageModule', name: 'DoctorprofilePage', segment: 'doctorprofile', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/doctor/doctorprofileextended/doctorprofileextended.module#DoctorprofileextendedPageModule', name: 'DoctorprofileextendedPage', segment: 'doctorprofileextended', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/doctor/doctorprofileprofessionalinfo/doctorprofileprofessionalinfo.module#DoctorprofileprofessionalinfoPageModule', name: 'DoctorprofileprofessionalinfoPage', segment: 'doctorprofileprofessionalinfo', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/doctor/doctorvisitlist/doctorvisitlist.module#DoctorvisitlistPageModule', name: 'DoctorvisitlistPage', segment: 'doctorvisitlist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/doctor/doctorvisitlistview/doctorvisitlistview.module#DoctorvisitlistviewPageModule', name: 'DoctorvisitlistviewPage', segment: 'doctorvisitlistview', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/doctor/transactionhistory/transactionhistory.module#TransactionhistoryPageModule', name: 'TransactionhistoryPage', segment: 'transactionhistory', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/editemedicineinventory/editemedicineinventory.module#EditemedicineinventoryPageModule', name: 'EditemedicineinventoryPage', segment: 'editemedicineinventory', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/hospital/dash-board-for-hospital/dash-board-for-hospital.module#DashBoardForHospitalPageModule', name: 'DashBoardForHospitalPage', segment: 'dash-board-for-hospital', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/hospital/hospitalbasicdetail/hospitalbasicdetail.module#HospitalbasicdetailPageModule', name: 'HospitalbasicdetailPage', segment: 'hospitalbasicdetail', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/hospital/hospitalchangepassword/hospitalchangepassword.module#HospitalchangepasswordPageModule', name: 'HospitalchangepasswordPage', segment: 'hospitalchangepassword', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/hospital/hospitalclaimedinsuranceincomingapporvallistview/hospitalclaimedinsuranceincomingapporvallistview.module#HospitalclaimedinsuranceincomingapporvallistviewPageModule', name: 'HospitalclaimedinsuranceincomingapporvallistviewPage', segment: 'hospitalclaimedinsuranceincomingapporvallistview', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/hospital/hospitalprofile/hospitalprofile.module#HospitalprofilePageModule', name: 'HospitalprofilePage', segment: 'hospitalprofile', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/hospital/hospitalprofiledemographic/hospitalprofiledemographic.module#HospitalprofiledemographicPageModule', name: 'HospitalprofiledemographicPage', segment: 'hospitalprofiledemographic', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/hospital/hospitalprofileprofessional/hospitalprofileprofessional.module#HospitalprofileprofessionalPageModule', name: 'HospitalprofileprofessionalPage', segment: 'hospitalprofileprofessional', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/hospital/patientadmitform/patientadmitform.module#PatientadmitformPageModule', name: 'PatientadmitformPage', segment: 'patientadmitform', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/insurance/addplan/addplan.module#AddplanPageModule', name: 'AddplanPage', segment: 'addplan', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/insurance/dash-board-for-insurance/dash-board-for-insurance.module#DashBoardForInsurancePageModule', name: 'DashBoardForInsurancePage', segment: 'dash-board-for-insurance', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/insurance/insurancebasicdetail/insurancebasicdetail.module#InsurancebasicdetailPageModule', name: 'InsurancebasicdetailPage', segment: 'insurancebasicdetail', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/insurance/insurancechangepassword/insurancechangepassword.module#InsurancechangepasswordPageModule', name: 'InsurancechangepasswordPage', segment: 'insurancechangepassword', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/insurance/insuranceincomingclaimlistview/insuranceincomingclaimlistview.module#InsuranceincomingclaimlistviewPageModule', name: 'InsuranceincomingclaimlistviewPage', segment: 'insuranceincomingclaimlistview', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/insurance/insuranceplanlistdetailview/insuranceplanlistdetailview.module#InsuranceplanlistdetailviewPageModule', name: 'InsuranceplanlistdetailviewPage', segment: 'insuranceplanlistdetailview', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/insurance/insuranceprofile/insuranceprofile.module#InsuranceprofilePageModule', name: 'InsuranceprofilePage', segment: 'insuranceprofile', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/insurance/insuranceprofiledemographic/insuranceprofiledemographic.module#InsuranceprofiledemographicPageModule', name: 'InsuranceprofiledemographicPage', segment: 'insuranceprofiledemographic', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/insurance/insuranceprofileprofessional/insuranceprofileprofessional.module#InsuranceprofileprofessionalPageModule', name: 'InsuranceprofileprofessionalPage', segment: 'insuranceprofileprofessional', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/addnewreport/addnewreport.module#AddnewreportPageModule', name: 'AddnewreportPage', segment: 'addnewreport', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/addreportfees/addreportfees.module#AddreportfeesPageModule', name: 'AddreportfeesPage', segment: 'addreportfees', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/demographiclab/demographiclab.module#DemographiclabPageModule', name: 'DemographiclabPage', segment: 'demographiclab', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/editreportfees/editreportfees.module#EditreportfeesPageModule', name: 'EditreportfeesPage', segment: 'editreportfees', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/labbookinglist/labbookinglist.module#LabbookinglistPageModule', name: 'LabbookinglistPage', segment: 'labbookinglist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/labincomingappoinment/labincomingappoinment.module#LabincomingappoinmentPageModule', name: 'LabincomingappoinmentPage', segment: 'labincomingappoinment', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/laboratorydashboard/laboratorydashboard.module#LaboratorydashboardPageModule', name: 'LaboratorydashboardPage', segment: 'laboratorydashboard', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/laboratoryprofessionalinformation/laboratoryprofessionalinformation.module#LaboratoryprofessionalinformationPageModule', name: 'LaboratoryprofessionalinformationPage', segment: 'laboratoryprofessionalinformation', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/labprofile/labprofile.module#LabprofilePageModule', name: 'LabprofilePage', segment: 'labprofile', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/labreport/labreport.module#LabreportPageModule', name: 'LabreportPage', segment: 'labreport', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/labtransactionhistory/labtransactionhistory.module#LabtransactionhistoryPageModule', name: 'LabtransactionhistoryPage', segment: 'labtransactionhistory', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/labviewreport/labviewreport.module#LabviewreportPageModule', name: 'LabviewreportPage', segment: 'labviewreport', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/reportfeeslist/reportfeeslist.module#ReportfeeslistPageModule', name: 'ReportfeeslistPage', segment: 'reportfeeslist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/listmedicineinventory/listmedicineinventory.module#ListmedicineinventoryPageModule', name: 'ListmedicineinventoryPage', segment: 'listmedicineinventory', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/mapdemo/mapdemo.module#MapdemoPageModule', name: 'MapdemoPage', segment: 'mapdemo', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/medicalstore/dash-board-for-medicalstore/dash-board-for-medicalstore.module#DashBoardForMedicalstorePageModule', name: 'DashBoardForMedicalstorePage', segment: 'dash-board-for-medicalstore', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/medicalstore/incomingmedicinerequiredlistview/incomingmedicinerequiredlistview.module#IncomingmedicinerequiredlistviewPageModule', name: 'IncomingmedicinerequiredlistviewPage', segment: 'incomingmedicinerequiredlistview', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/medicalstore/medicalchangepassword/medicalchangepassword.module#MedicalchangepasswordPageModule', name: 'MedicalchangepasswordPage', segment: 'medicalchangepassword', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/medicalstore/medicalprofile/medicalprofile.module#MedicalprofilePageModule', name: 'MedicalprofilePage', segment: 'medicalprofile', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/medicalstore/medicalprofilebasicdetail/medicalprofilebasicdetail.module#MedicalprofilebasicdetailPageModule', name: 'MedicalprofilebasicdetailPage', segment: 'medicalprofilebasicdetail', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/medicalstore/medicalprofiledemographic/medicalprofiledemographic.module#MedicalprofiledemographicPageModule', name: 'MedicalprofiledemographicPage', segment: 'medicalprofiledemographic', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/medicalstore/medicalprofileprofessional/medicalprofileprofessional.module#MedicalprofileprofessionalPageModule', name: 'MedicalprofileprofessionalPage', segment: 'medicalprofileprofessional', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/medicalstore/tracking/tracking.module#TrackingPageModule', name: 'TrackingPage', segment: 'tracking', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/medicineinventory/medicineinventory.module#MedicineinventoryPageModule', name: 'MedicineinventoryPage', segment: 'medicineinventory', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient-order-details/patient-order-details.module#PatientOrderDetailsPageModule', name: 'PatientOrderDetailsPage', segment: 'patient-order-details', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/dash-board-for-patient/dash-board-for-patient.module#DashBoardForPatientPageModule', name: 'DashBoardForPatientPage', segment: 'dash-board-for-patient', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientaddinsurance/patientaddinsurance.module#PatientaddinsurancePageModule', name: 'PatientaddinsurancePage', segment: 'patientaddinsurance', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientbooklablist/patientbooklablist.module#PatientbooklablistPageModule', name: 'PatientbooklablistPage', segment: 'patientbooklablist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientclaimedinsurancelist/patientclaimedinsurancelist.module#PatientclaimedinsurancelistPageModule', name: 'PatientclaimedinsurancelistPage', segment: 'patientclaimedinsurancelist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientclaimedinsurancelistview/patientclaimedinsurancelistview.module#PatientclaimedinsurancelistviewPageModule', name: 'PatientclaimedinsurancelistviewPage', segment: 'patientclaimedinsurancelistview', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientdoctorvisitlist/patientdoctorvisitlist.module#PatientdoctorvisitlistPageModule', name: 'PatientdoctorvisitlistPage', segment: 'patientdoctorvisitlist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientdoctorvisitlistview/patientdoctorvisitlistview.module#PatientdoctorvisitlistviewPageModule', name: 'PatientdoctorvisitlistviewPage', segment: 'patientdoctorvisitlistview', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patienthospitaladmitlist/patienthospitaladmitlist.module#PatienthospitaladmitlistPageModule', name: 'PatienthospitaladmitlistPage', segment: 'patienthospitaladmitlist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patienthospitaladmitlistview/patienthospitaladmitlistview.module#PatienthospitaladmitlistviewPageModule', name: 'PatienthospitaladmitlistviewPage', segment: 'patienthospitaladmitlistview', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientinsurancelist/patientinsurancelist.module#PatientinsurancelistPageModule', name: 'PatientinsurancelistPage', segment: 'patientinsurancelist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientinsurancelistview/patientinsurancelistview.module#PatientinsurancelistviewPageModule', name: 'PatientinsurancelistviewPage', segment: 'patientinsurancelistview', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientlabreportlist/patientlabreportlist.module#PatientlabreportlistPageModule', name: 'PatientlabreportlistPage', segment: 'patientlabreportlist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientlabreportlistview/patientlabreportlistview.module#PatientlabreportlistviewPageModule', name: 'PatientlabreportlistviewPage', segment: 'patientlabreportlistview', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientmedicineboughtlist/patientmedicineboughtlist.module#PatientmedicineboughtlistPageModule', name: 'PatientmedicineboughtlistPage', segment: 'patientmedicineboughtlist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientmedicineboughtlistview/patientmedicineboughtlistview.module#PatientmedicineboughtlistviewPageModule', name: 'PatientmedicineboughtlistviewPage', segment: 'patientmedicineboughtlistview', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientprofile/patientprofile.module#PatientprofilePageModule', name: 'PatientprofilePage', segment: 'patientprofile', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patienttracking/patienttracking.module#PatienttrackingPageModule', name: 'PatienttrackingPage', segment: 'patienttracking', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/video/video.module#VideoPageModule', name: 'VideoPage', segment: 'video', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/doctor/doctor-add-or-edit-visit/doctor-add-or-edit-visit.module#DoctorAddOrEditVisitPageModule', name: 'DoctorAddOrEditVisitPage', segment: 'doctor-add-or-edit-visit', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/doctor/doctorprofiledemographic/doctorprofiledemographic.module#DoctorprofiledemographicPageModule', name: 'DoctorprofiledemographicPage', segment: 'doctorprofiledemographic', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/doctor/doctorprofiledocument/doctorprofiledocument.module#DoctorprofiledocumentPageModule', name: 'DoctorprofiledocumentPage', segment: 'doctorprofiledocument', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/doctor/doctorprofilepersonal/doctorprofilepersonal.module#DoctorprofilepersonalPageModule', name: 'DoctorprofilepersonalPage', segment: 'doctorprofilepersonal', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/hospital/hospitalclaimedinsuranceincomingapporvallist/hospitalclaimedinsuranceincomingapporvallist.module#HospitalclaimedinsuranceincomingapporvallistPageModule', name: 'HospitalclaimedinsuranceincomingapporvallistPage', segment: 'hospitalclaimedinsuranceincomingapporvallist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/hospital/hospitalpatientadmitlist/hospitalpatientadmitlist.module#HospitalpatientadmitlistPageModule', name: 'HospitalpatientadmitlistPage', segment: 'hospitalpatientadmitlist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/insurance/insuranceincomingclaimlist/insuranceincomingclaimlist.module#InsuranceincomingclaimlistPageModule', name: 'InsuranceincomingclaimlistPage', segment: 'insuranceincomingclaimlist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/insurance/insuranceplanlist/insuranceplanlist.module#InsuranceplanlistPageModule', name: 'InsuranceplanlistPage', segment: 'insuranceplanlist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/labaddreport/labaddreport.module#LabaddreportPageModule', name: 'LabaddreportPage', segment: 'labaddreport', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/laboratorviewappoinment/laboratorviewappoinment.module#LaboratorviewappoinmentPageModule', name: 'LaboratorviewappoinmentPage', segment: 'laboratorviewappoinment', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/labprofiledemographic/labprofiledemographic.module#LabprofiledemographicPageModule', name: 'LabprofiledemographicPage', segment: 'labprofiledemographic', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/labprofiledocument/labprofiledocument.module#LabprofiledocumentPageModule', name: 'LabprofiledocumentPage', segment: 'labprofiledocument', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/labprofilelaboratory/labprofilelaboratory.module#LabprofilelaboratoryPageModule', name: 'LabprofilelaboratoryPage', segment: 'labprofilelaboratory', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/laboratory/labprofileprofessionalinfo/labprofileprofessionalinfo.module#LabprofileprofessionalinfoPageModule', name: 'LabprofileprofessionalinfoPage', segment: 'labprofileprofessionalinfo', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/medicalstore/incomingmedicinerequiredlist/incomingmedicinerequiredlist.module#IncomingmedicinerequiredlistPageModule', name: 'IncomingmedicinerequiredlistPage', segment: 'incomingmedicinerequiredlist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/medicalstore/medicalstoreprofiledocument/medicalstoreprofiledocument.module#MedicalstoreprofiledocumentPageModule', name: 'MedicalstoreprofiledocumentPage', segment: 'medicalstoreprofiledocument', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/medicinesrequestview/medicinesrequestview.module#MedicinesrequestviewPageModule', name: 'MedicinesrequestviewPage', segment: 'medicinesrequestview', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/appointmentlist/appointmentlist.module#AppointmentlistPageModule', name: 'AppointmentlistPage', segment: 'appointmentlist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/editappointment/editappointment.module#EditappointmentPageModule', name: 'EditappointmentPage', segment: 'editappointment', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientprofiledocuments/patientprofiledocuments.module#PatientprofiledocumentsPageModule', name: 'PatientprofiledocumentsPage', segment: 'patientprofiledocuments', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientprofileextended/patientprofileextended.module#PatientprofileextendedPageModule', name: 'PatientprofileextendedPage', segment: 'patientprofileextended', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/patientprofilepersonal/patientprofilepersonal.module#PatientprofilepersonalPageModule', name: 'PatientprofilepersonalPage', segment: 'patientprofilepersonal', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/pharmaappointmentlist/pharmaappointmentlist.module#PharmaAppointmentlistPageModule', name: 'PharmaAppointmentlistPage', segment: 'pharmaappointmentlist', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/profiledemographic/profiledemographic.module#ProfiledemographicPageModule', name: 'ProfiledemographicPage', segment: 'profiledemographic', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/rebookappointment/rebookappointment.module#RebookappointmentPageModule', name: 'RebookappointmentPage', segment: 'rebookappointment', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/viewappointment/viewappointment.module#ViewappointmentPageModule', name: 'ViewappointmentPage', segment: 'viewappointment', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/viewpatientbooklab/viewpatientbooklab.module#ViewpatientbooklabPageModule', name: 'ViewpatientbooklabPage', segment: 'viewpatientbooklab', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patientreports/patientreports.module#PatientreportsPageModule', name: 'PatientreportsPage', segment: 'patientreports', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/pharmadelivered/pharmadelivered.module#PharmadeliveredPageModule', name: 'PharmadeliveredPage', segment: 'pharmadelivered', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/pharmaview/pharmaview.module#PharmaviewPageModule', name: 'PharmaviewPage', segment: 'pharmaview', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/addappointment/addappointment.module#AddappointmentPageModule', name: 'AddappointmentPage', segment: 'addappointment', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/addbooklab/addbooklab.module#AddbooklabPageModule', name: 'AddbooklabPage', segment: 'addbooklab', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/addpharmaappointment/addpharmaappointment.module#AddPharmaAppointmentPageModule', name: 'AddPharmaAppointmentPage', segment: 'addpharmaappointment', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/patient/editpharmaappointment/editpharmaappointment.module#EditPharmaAppointmentPageModule', name: 'EditPharmaAppointmentPage', segment: 'editpharmaappointment', priority: 'low', defaultHistory: [] }
                    ]
                }),
                __WEBPACK_IMPORTED_MODULE_29__angular_common_http__["b" /* HttpClientModule */],
                __WEBPACK_IMPORTED_MODULE_106__pipes_pipes_module__["a" /* PipesModule */],
                __WEBPACK_IMPORTED_MODULE_128_angularfire2__["AngularFireModule"].initializeApp(firebaseConfig),
                __WEBPACK_IMPORTED_MODULE_138_ng2_select2__["Select2Module"],
                __WEBPACK_IMPORTED_MODULE_141__angular_http__["a" /* HttpModule */]
            ],
            bootstrap: [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["e" /* IonicApp */]],
            entryComponents: [
                __WEBPACK_IMPORTED_MODULE_3__app_component__["a" /* MyApp */],
                __WEBPACK_IMPORTED_MODULE_4__pages_commonpages_login_login__["a" /* LoginPage */],
                __WEBPACK_IMPORTED_MODULE_80__pages_commonpages_signup_signup__["a" /* SignupPage */],
                __WEBPACK_IMPORTED_MODULE_133__pages_laboratory_labprofiledocument_labprofiledocument__["a" /* LabprofiledocumentPage */],
                __WEBPACK_IMPORTED_MODULE_5__pages_doctor_dash_board_for_doctor_dash_board_for_doctor__["a" /* DashBoardForDoctorPage */],
                __WEBPACK_IMPORTED_MODULE_6__pages_patient_dash_board_for_patient_dash_board_for_patient__["a" /* DashBoardForPatientPage */],
                __WEBPACK_IMPORTED_MODULE_7__pages_patient_addappointment_addappointment__["a" /* AddappointmentPage */],
                __WEBPACK_IMPORTED_MODULE_8__pages_patient_patientprofile_patientprofile__["a" /* PatientprofilePage */],
                __WEBPACK_IMPORTED_MODULE_14__pages_patient_patientprofilepersonal_patientprofilepersonal__["a" /* PatientprofilepersonalPage */],
                __WEBPACK_IMPORTED_MODULE_11__pages_patient_profiledemographic_profiledemographic__["a" /* ProfiledemographicPage */],
                __WEBPACK_IMPORTED_MODULE_16__pages_patient_patientprofileextended_patientprofileextended__["a" /* PatientprofileextendedPage */],
                __WEBPACK_IMPORTED_MODULE_10__pages_patient_patientprofiledocuments_patientprofiledocuments__["a" /* PatientprofiledocumentsPage */],
                __WEBPACK_IMPORTED_MODULE_124__pages_doctor_doctorprofiledocument_doctorprofiledocument__["a" /* DoctorprofiledocumentPage */],
                __WEBPACK_IMPORTED_MODULE_12__pages_commonpages_changepassword_changepassword__["a" /* ChangepasswordPage */],
                __WEBPACK_IMPORTED_MODULE_19__pages_doctor_doctorprofile_doctorprofile__["a" /* DoctorprofilePage */],
                __WEBPACK_IMPORTED_MODULE_17__pages_doctor_doctorprofilepersonal_doctorprofilepersonal__["a" /* DoctorprofilepersonalPage */],
                __WEBPACK_IMPORTED_MODULE_18__pages_doctor_doctorprofileextended_doctorprofileextended__["a" /* DoctorprofileextendedPage */],
                __WEBPACK_IMPORTED_MODULE_20__pages_doctor_doctorprofileprofessionalinfo_doctorprofileprofessionalinfo__["a" /* DoctorprofileprofessionalinfoPage */],
                __WEBPACK_IMPORTED_MODULE_21__pages_patient_appointmentlist_appointmentlist__["a" /* AppointmentlistPage */],
                __WEBPACK_IMPORTED_MODULE_103__pages_patient_pharmaappointmentlist_pharmaappointmentlist__["a" /* PharmaAppointmentlistPage */],
                __WEBPACK_IMPORTED_MODULE_22__pages_patient_viewappointment_viewappointment__["a" /* ViewappointmentPage */],
                __WEBPACK_IMPORTED_MODULE_23__pages_patient_editappointment_editappointment__["a" /* EditappointmentPage */],
                __WEBPACK_IMPORTED_MODULE_24__pages_doctor_doctorvisitlist_doctorvisitlist__["a" /* DoctorvisitlistPage */],
                __WEBPACK_IMPORTED_MODULE_25__pages_patient_patientdoctorvisitlist_patientdoctorvisitlist__["a" /* PatientdoctorvisitlistPage */],
                __WEBPACK_IMPORTED_MODULE_31__pages_patient_patientdoctorvisitlistview_patientdoctorvisitlistview__["a" /* PatientdoctorvisitlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_121__pages_doctor_transactionhistory_transactionhistory__["a" /* TransactionhistoryPage */],
                __WEBPACK_IMPORTED_MODULE_13__pages_commonpages_forgotpassword_forgotpassword__["a" /* ForgotpasswordPage */],
                __WEBPACK_IMPORTED_MODULE_34__pages_doctor_doctor_add_or_edit_visit_doctor_add_or_edit_visit__["a" /* DoctorAddOrEditVisitPage */],
                __WEBPACK_IMPORTED_MODULE_35__pages_laboratory_labprofile_labprofile__["a" /* LabprofilePage */],
                __WEBPACK_IMPORTED_MODULE_36__pages_laboratory_labprofilelaboratory_labprofilelaboratory__["a" /* LabprofilelaboratoryPage */],
                __WEBPACK_IMPORTED_MODULE_37__pages_laboratory_labprofiledemographic_labprofiledemographic__["a" /* LabprofiledemographicPage */],
                __WEBPACK_IMPORTED_MODULE_38__pages_laboratory_labprofileprofessionalinfo_labprofileprofessionalinfo__["a" /* LabprofileprofessionalinfoPage */],
                __WEBPACK_IMPORTED_MODULE_39__pages_medicalstore_medicalprofile_medicalprofile__["a" /* MedicalprofilePage */],
                __WEBPACK_IMPORTED_MODULE_40__pages_medicalstore_medicalprofilebasicdetail_medicalprofilebasicdetail__["a" /* MedicalprofilebasicdetailPage */],
                __WEBPACK_IMPORTED_MODULE_41__pages_medicalstore_medicalprofiledemographic_medicalprofiledemographic__["a" /* MedicalprofiledemographicPage */],
                __WEBPACK_IMPORTED_MODULE_42__pages_medicalstore_medicalprofileprofessional_medicalprofileprofessional__["a" /* MedicalprofileprofessionalPage */],
                __WEBPACK_IMPORTED_MODULE_43__pages_medicalstore_medicalchangepassword_medicalchangepassword__["a" /* MedicalchangepasswordPage */],
                __WEBPACK_IMPORTED_MODULE_44__pages_insurance_insuranceprofile_insuranceprofile__["a" /* InsuranceprofilePage */],
                __WEBPACK_IMPORTED_MODULE_45__pages_insurance_insurancebasicdetail_insurancebasicdetail__["a" /* InsurancebasicdetailPage */],
                __WEBPACK_IMPORTED_MODULE_46__pages_insurance_insuranceprofiledemographic_insuranceprofiledemographic__["a" /* InsuranceprofiledemographicPage */],
                __WEBPACK_IMPORTED_MODULE_47__pages_insurance_insuranceprofileprofessional_insuranceprofileprofessional__["a" /* InsuranceprofileprofessionalPage */],
                __WEBPACK_IMPORTED_MODULE_48__pages_insurance_insurancechangepassword_insurancechangepassword__["a" /* InsurancechangepasswordPage */],
                __WEBPACK_IMPORTED_MODULE_49__pages_hospital_hospitalprofile_hospitalprofile__["a" /* HospitalprofilePage */],
                __WEBPACK_IMPORTED_MODULE_50__pages_hospital_hospitalbasicdetail_hospitalbasicdetail__["a" /* HospitalbasicdetailPage */],
                __WEBPACK_IMPORTED_MODULE_51__pages_hospital_hospitalprofiledemographic_hospitalprofiledemographic__["a" /* HospitalprofiledemographicPage */],
                __WEBPACK_IMPORTED_MODULE_52__pages_hospital_hospitalprofileprofessional_hospitalprofileprofessional__["a" /* HospitalprofileprofessionalPage */],
                __WEBPACK_IMPORTED_MODULE_53__pages_hospital_hospitalchangepassword_hospitalchangepassword__["a" /* HospitalchangepasswordPage */],
                __WEBPACK_IMPORTED_MODULE_54__pages_patient_patientlabreportlist_patientlabreportlist__["a" /* PatientlabreportlistPage */],
                __WEBPACK_IMPORTED_MODULE_55__pages_patient_patientmedicineboughtlist_patientmedicineboughtlist__["a" /* PatientmedicineboughtlistPage */],
                __WEBPACK_IMPORTED_MODULE_56__pages_patient_patientinsurancelist_patientinsurancelist__["a" /* PatientinsurancelistPage */],
                __WEBPACK_IMPORTED_MODULE_57__pages_patient_patienthospitaladmitlist_patienthospitaladmitlist__["a" /* PatienthospitaladmitlistPage */],
                __WEBPACK_IMPORTED_MODULE_58__pages_patient_patientclaimedinsurancelist_patientclaimedinsurancelist__["a" /* PatientclaimedinsurancelistPage */],
                __WEBPACK_IMPORTED_MODULE_59__pages_patient_patientlabreportlistview_patientlabreportlistview__["a" /* PatientlabreportlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_60__pages_patient_patientclaimedinsurancelistview_patientclaimedinsurancelistview__["a" /* PatientclaimedinsurancelistviewPage */],
                __WEBPACK_IMPORTED_MODULE_61__pages_patient_patientmedicineboughtlistview_patientmedicineboughtlistview__["a" /* PatientmedicineboughtlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_62__pages_patient_patientinsurancelistview_patientinsurancelistview__["a" /* PatientinsurancelistviewPage */],
                __WEBPACK_IMPORTED_MODULE_63__pages_patient_patienthospitaladmitlistview_patienthospitaladmitlistview__["a" /* PatienthospitaladmitlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_143__pages_patient_order_details_patient_order_details__["a" /* PatientOrderDetailsPage */],
                __WEBPACK_IMPORTED_MODULE_64__pages_laboratory_laboratorydashboard_laboratorydashboard__["a" /* LaboratorydashboardPage */],
                __WEBPACK_IMPORTED_MODULE_65__pages_laboratory_labincomingappoinment_labincomingappoinment__["a" /* LabincomingappoinmentPage */],
                __WEBPACK_IMPORTED_MODULE_66__pages_laboratory_labreport_labreport__["a" /* LabreportPage */],
                __WEBPACK_IMPORTED_MODULE_67__pages_hospital_dash_board_for_hospital_dash_board_for_hospital__["a" /* DashBoardForHospitalPage */],
                __WEBPACK_IMPORTED_MODULE_144__pages_doctor_doctorprofiledemographic_doctorprofiledemographic__["a" /* DoctorprofiledemographicPage */],
                __WEBPACK_IMPORTED_MODULE_68__pages_hospital_hospitalclaimedinsuranceincomingapporvallist_hospitalclaimedinsuranceincomingapporvallist__["a" /* HospitalclaimedinsuranceincomingapporvallistPage */],
                __WEBPACK_IMPORTED_MODULE_69__pages_hospital_hospitalclaimedinsuranceincomingapporvallistview_hospitalclaimedinsuranceincomingapporvallistview__["a" /* HospitalclaimedinsuranceincomingapporvallistviewPage */],
                __WEBPACK_IMPORTED_MODULE_70__pages_hospital_hospitalpatientadmitlist_hospitalpatientadmitlist__["a" /* HospitalpatientadmitlistPage */],
                __WEBPACK_IMPORTED_MODULE_71__pages_insurance_dash_board_for_insurance_dash_board_for_insurance__["a" /* DashBoardForInsurancePage */],
                __WEBPACK_IMPORTED_MODULE_72__pages_insurance_insuranceincomingclaimlist_insuranceincomingclaimlist__["a" /* InsuranceincomingclaimlistPage */],
                __WEBPACK_IMPORTED_MODULE_73__pages_insurance_insuranceincomingclaimlistview_insuranceincomingclaimlistview__["a" /* InsuranceincomingclaimlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_74__pages_insurance_insuranceplanlist_insuranceplanlist__["a" /* InsuranceplanlistPage */],
                __WEBPACK_IMPORTED_MODULE_75__pages_insurance_insuranceplanlistdetailview_insuranceplanlistdetailview__["a" /* InsuranceplanlistdetailviewPage */],
                __WEBPACK_IMPORTED_MODULE_76__pages_medicalstore_dash_board_for_medicalstore_dash_board_for_medicalstore__["a" /* DashBoardForMedicalstorePage */],
                __WEBPACK_IMPORTED_MODULE_77__pages_medicalstore_incomingmedicinerequiredlist_incomingmedicinerequiredlist__["a" /* IncomingmedicinerequiredlistPage */],
                __WEBPACK_IMPORTED_MODULE_78__pages_medicalstore_incomingmedicinerequiredlistview_incomingmedicinerequiredlistview__["a" /* IncomingmedicinerequiredlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_79__pages_medicalstore_tracking_tracking__["a" /* TrackingPage */],
                __WEBPACK_IMPORTED_MODULE_81__pages_insurance_addplan_addplan__["a" /* AddplanPage */],
                __WEBPACK_IMPORTED_MODULE_82__pages_patient_addbooklab_addbooklab__["a" /* AddbooklabPage */],
                __WEBPACK_IMPORTED_MODULE_83__pages_patient_patientaddinsurance_patientaddinsurance__["a" /* PatientaddinsurancePage */],
                __WEBPACK_IMPORTED_MODULE_87__pages_hospital_patientadmitform_patientadmitform__["a" /* PatientadmitformPage */],
                __WEBPACK_IMPORTED_MODULE_90__pages_patient_patienttracking_patienttracking__["a" /* PatienttrackingPage */],
                __WEBPACK_IMPORTED_MODULE_91__pages_laboratory_labaddreport_labaddreport__["a" /* LabaddreportPage */],
                __WEBPACK_IMPORTED_MODULE_93__pages_patient_patientbooklablist_patientbooklablist__["a" /* PatientbooklablistPage */],
                __WEBPACK_IMPORTED_MODULE_94__pages_laboratory_labbookinglist_labbookinglist__["a" /* LabbookinglistPage */],
                __WEBPACK_IMPORTED_MODULE_95__pages_laboratory_laboratorviewappoinment_laboratorviewappoinment__["a" /* LaboratorviewappoinmentPage */],
                __WEBPACK_IMPORTED_MODULE_92__pages_laboratory_labviewreport_labviewreport__["a" /* LabviewreportPage */],
                __WEBPACK_IMPORTED_MODULE_96__pages_doctor_doctorvisitlistview_doctorvisitlistview__["a" /* DoctorvisitlistviewPage */],
                __WEBPACK_IMPORTED_MODULE_98__pages_patient_rebookappointment_rebookappointment__["a" /* RebookappointmentPage */],
                __WEBPACK_IMPORTED_MODULE_99__pages_patient_viewpatientbooklab_viewpatientbooklab__["a" /* ViewpatientbooklabPage */],
                __WEBPACK_IMPORTED_MODULE_101__pages_pharmadelivered_pharmadelivered__["a" /* PharmadeliveredPage */],
                __WEBPACK_IMPORTED_MODULE_102__pages_patient_addpharmaappointment_addpharmaappointment__["a" /* AddPharmaAppointmentPage */],
                __WEBPACK_IMPORTED_MODULE_104__pages_pharmaview_pharmaview__["a" /* PharmaviewPage */],
                __WEBPACK_IMPORTED_MODULE_102__pages_patient_addpharmaappointment_addpharmaappointment__["a" /* AddPharmaAppointmentPage */],
                __WEBPACK_IMPORTED_MODULE_105__pages_patientreports_patientreports__["a" /* PatientreportsPage */],
                __WEBPACK_IMPORTED_MODULE_107__pages_medicinesrequestview_medicinesrequestview__["a" /* MedicinesrequestviewPage */],
                __WEBPACK_IMPORTED_MODULE_108__pages_patient_editpharmaappointment_editpharmaappointment__["a" /* EditPharmaAppointmentPage */],
                __WEBPACK_IMPORTED_MODULE_105__pages_patientreports_patientreports__["a" /* PatientreportsPage */],
                __WEBPACK_IMPORTED_MODULE_109__pages_deliverables_deliverables__["a" /* DeliverablesPage */],
                __WEBPACK_IMPORTED_MODULE_110__pages_laboratory_reportfeeslist_reportfeeslist__["a" /* ReportfeeslistPage */],
                __WEBPACK_IMPORTED_MODULE_111__pages_laboratory_addreportfees_addreportfees__["a" /* AddreportfeesPage */],
                __WEBPACK_IMPORTED_MODULE_112__pages_laboratory_editreportfees_editreportfees__["a" /* EditreportfeesPage */],
                __WEBPACK_IMPORTED_MODULE_113__pages_listmedicineinventory_listmedicineinventory__["a" /* ListmedicineinventoryPage */],
                __WEBPACK_IMPORTED_MODULE_114__pages_medicineinventory_medicineinventory__["a" /* MedicineinventoryPage */],
                __WEBPACK_IMPORTED_MODULE_115__pages_editemedicineinventory_editemedicineinventory__["a" /* EditemedicineinventoryPage */],
                __WEBPACK_IMPORTED_MODULE_116__pages_laboratory_addnewreport_addnewreport__["a" /* AddnewreportPage */],
                __WEBPACK_IMPORTED_MODULE_117__pages_addreport_addreport__["a" /* AddreportPage */],
                __WEBPACK_IMPORTED_MODULE_121__pages_doctor_transactionhistory_transactionhistory__["a" /* TransactionhistoryPage */],
                __WEBPACK_IMPORTED_MODULE_122__pages_laboratory_labtransactionhistory_labtransactionhistory__["a" /* LabtransactionhistoryPage */],
                __WEBPACK_IMPORTED_MODULE_130__pages_mapdemo_mapdemo__["a" /* MapdemoPage */],
                __WEBPACK_IMPORTED_MODULE_131__pages_addresstopinmap_addresstopinmap__["a" /* AddresstopinmapPage */],
                __WEBPACK_IMPORTED_MODULE_136__pages_video_video__["a" /* VideoPage */],
                __WEBPACK_IMPORTED_MODULE_139__pages_addpinlocation_addpinlocation__["a" /* AddpinlocationPage */]
            ],
            providers: [
                __WEBPACK_IMPORTED_MODULE_26__ionic_native_status_bar__["a" /* StatusBar */],
                __WEBPACK_IMPORTED_MODULE_118__ionic_native_network__["a" /* Network */],
                __WEBPACK_IMPORTED_MODULE_27__ionic_native_splash_screen__["a" /* SplashScreen */],
                { provide: __WEBPACK_IMPORTED_MODULE_1__angular_core__["ErrorHandler"], useClass: __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["f" /* IonicErrorHandler */] },
                __WEBPACK_IMPORTED_MODULE_28__providers_api_api__["a" /* ApiProvider */],
                __WEBPACK_IMPORTED_MODULE_30__angular_common__["d" /* DatePipe */],
                __WEBPACK_IMPORTED_MODULE_132__ionic_native_photo_viewer__["a" /* PhotoViewer */],
                __WEBPACK_IMPORTED_MODULE_15__ionic_native_camera__["a" /* Camera */],
                // Transfer,
                __WEBPACK_IMPORTED_MODULE_33__ionic_native_file_path__["a" /* FilePath */],
                __WEBPACK_IMPORTED_MODULE_84__ionic_native_file_chooser__["a" /* FileChooser */],
                __WEBPACK_IMPORTED_MODULE_85__ionic_native_base64__["a" /* Base64 */],
                __WEBPACK_IMPORTED_MODULE_137__ionic_native_image_picker__["a" /* ImagePicker */],
                __WEBPACK_IMPORTED_MODULE_86__ionic_native_document_picker__["a" /* DocumentPicker */],
                __WEBPACK_IMPORTED_MODULE_88__providers_validation_validation__["a" /* ValidationProvider */],
                __WEBPACK_IMPORTED_MODULE_97__ionic_native_file_transfer__["a" /* FileTransfer */],
                __WEBPACK_IMPORTED_MODULE_100__ionic_native_in_app_browser__["a" /* InAppBrowser */],
                __WEBPACK_IMPORTED_MODULE_32__ionic_native_file__["a" /* File */],
                __WEBPACK_IMPORTED_MODULE_119__ionic_native_crop_ngx__["a" /* Crop */],
                __WEBPACK_IMPORTED_MODULE_120__ionic_native_fcm__["a" /* FCM */],
                __WEBPACK_IMPORTED_MODULE_123__ionic_native_local_notifications__["a" /* LocalNotifications */],
                __WEBPACK_IMPORTED_MODULE_125__ionic_native_google_plus__["a" /* GooglePlus */],
                __WEBPACK_IMPORTED_MODULE_126__ionic_native_google_maps__["a" /* GoogleMaps */],
                __WEBPACK_IMPORTED_MODULE_127__ionic_native_geolocation__["a" /* Geolocation */],
                __WEBPACK_IMPORTED_MODULE_137__ionic_native_image_picker__["a" /* ImagePicker */],
                __WEBPACK_IMPORTED_MODULE_135__ionic_native_video_player__["a" /* VideoPlayer */],
                __WEBPACK_IMPORTED_MODULE_140__providers_geocoder_geocoder__["a" /* GeocoderProvider */],
                __WEBPACK_IMPORTED_MODULE_142__ionic_native_native_geocoder__["a" /* NativeGeocoder */]
            ]
        })
    ], AppModule);
    return AppModule;
}());

//# sourceMappingURL=app.module.js.map

/***/ }),

/***/ 591:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

var crypto = __webpack_require__(352);
var util = __webpack_require__(390);



var crypt = {
  iv: '@@@@&&&&####$$$$',

  encrypt: function (data,custom_key) {
    var iv = this.iv;
    var key = custom_key;
    var algo = '256';
    switch (key.length) {
    case 16:
      algo = '128';
      break;
    case 24:
      algo = '192';
      break;
    case 32:
      algo = '256';
      break;

    }
    var cipher = crypto.createCipheriv('AES-' + algo + '-CBC', key, iv);
    //var cipher = crypto.createCipher('aes256',key);
    var encrypted = cipher.update(data, 'binary', 'base64');
    encrypted += cipher.final('base64');
    return encrypted;
  },

  decrypt: function (data,custom_key) {
    var iv = this.iv;
    var key = custom_key;
    var algo = '256';
    switch (key.length) {
    case 16:
      algo = '128';
      break;
    case 24:
      algo = '192';
      break;
    case 32:
      algo = '256';
      break;
    }
    var decipher = crypto.createDecipheriv('AES-' + algo + '-CBC', key, iv);
    var decrypted = decipher.update(data, 'base64', 'binary');
    try {
      decrypted += decipher.final('binary');
    } catch (e) {
      util.log(util.inspect(e));
    }
    return decrypted;
  },

  gen_salt: function (length, cb) {
    crypto.randomBytes((length * 3.0) / 4.0, function (err, buf) {
      var salt;
      if (!err) {
        salt = buf.toString("base64");
      }
      //salt=Math.floor(Math.random()*8999)+1000;
      cb(err, salt);
    });
  },

  /* one way md5 hash with salt */
  md5sum: function (salt, data) {
    return crypto.createHash('md5').update(salt + data).digest('hex');
  },
  sha256sum: function (salt, data) {
    return crypto.createHash('sha256').update(data + salt).digest('hex');
  }
};

module.exports = crypt;

(function () {
  var i;

  function logsalt(err, salt) {
    if (!err) {
      console.log('salt is ' + salt);
    }
  }

  if (__webpack_require__.c[__webpack_require__.s] === module) {
    var enc = crypt.encrypt('One97');
    console.log('encrypted - ' + enc);
    console.log('decrypted - ' + crypt.decrypt(enc));

    for (i = 0; i < 5; i++) {
      crypt.gen_salt(4, logsalt);
    }
  }

}());

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(351)(module)))

/***/ }),

/***/ 594:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 596:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 61:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RebookappointmentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_common__ = __webpack_require__(14);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the RebookappointmentPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var RebookappointmentPage = /** @class */ (function () {
    function RebookappointmentPage(datepipe, navCtrl, navParams, api, toastCtrl) {
        this.datepipe = datepipe;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.toastCtrl = toastCtrl;
        this.facilitiesArray = [];
        this.locationArray = [];
        this.specialityArray = [];
        this.doctorArray = [];
        this.visittypeArray = [];
        this.visitreasonArray = [];
        this.facilityCenterID = "";
        this.fcLocationMapID = "";
        this.fclProviderMapID = "";
        this.specialityID = "";
        this.visittypeId = "";
        this.visitreasonId = "";
        this.viewgetappointmentArray = {};
        this.patAppointmentID = [];
        ///available schedule////
        this.availableschedule = [
            {
                time: " Mon: 12:00 pm to 4:00 pm ",
                time1: " Wed: 12:00 pm to 4:00 pm "
            },
            {
                time: " Fri: 06:00 pm to 08:00 pm ",
                time1: "Sat: 06:00 pm to 08:00 pm"
            }
        ];
        this.patAppointmentID = this.navParams.get("patAppointmentID");
        this.getviewgetappointment();
    }
    RebookappointmentPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad AddappointmentPage");
    };
    RebookappointmentPage.prototype.getallFacilities = function () {
        var _this = this;
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllFacility, "").then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("facilityCall====>", resp);
                _this.facilitiesArray = resp.data;
                _this.facilityCenterID = _this.facilitiesArray[0].facilityCenterID;
                _this.getFacilityid(_this.facilityCenterID);
            }
        });
    };
    RebookappointmentPage.prototype.getFacilityid = function (facilityid) {
        this.facilityCenterID = facilityid;
        this.getAllLocations();
    };
    /// locations////
    RebookappointmentPage.prototype.getAllLocations = function () {
        var _this = this;
        var data = {
            facilityCenterID: this.facilityCenterID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLocationByFacility, data)
            .then(function (resp) {
            _this.locationArray = resp.data;
            console.log("location====>", resp);
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log("facilityCall====>", resp);
                _this.locationArray = resp.data;
                _this.fcLocationMapID = _this.locationArray[0].fcLocationMapID;
                _this.getlocationid(_this.fcLocationMapID);
            }
            // if (this.fcLocationMapID.length)
            // {
            //  console.log('ChangableididlsjkID-===>',this.fcLocationMapID);
            // }else{
            //  this.fcLocationMapID =  this.selectedfcLocationMapID;
            // }
            // console.log('locationID===>',this.fcLocationMapID);
            // this.fcLocationMapID =  this.selectedfcLocationMapID;
        });
    };
    RebookappointmentPage.prototype.getlocationid = function (locationid) {
        console.log("calleeeddddd===>", this.fcLocationMapID);
        this.fcLocationMapID = locationid;
        this.getAllSpeciality();
    };
    /// Speciality////
    RebookappointmentPage.prototype.getAllSpeciality = function () {
        var _this = this;
        var data = {
            fcLocationMapID: this.fcLocationMapID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllSpecialityByLocationAndFacility, data)
            .then(function (resp) {
            _this.specialityArray = resp.data;
            console.log("specilaity====>", resp);
            _this.specialityID = _this.selectedspecialityID;
            _this.getspecialityid(_this.specialityID);
        });
    };
    RebookappointmentPage.prototype.getspecialityid = function (speciality) {
        this.specialityID = speciality;
        this.getAllDoctors();
    };
    /// get all doctors////
    RebookappointmentPage.prototype.getAllDoctors = function () {
        var _this = this;
        var data = {
            FcLocationMapID: this.fcLocationMapID,
            SpecialityID: this.specialityID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDoctorByLocationAndspeciality, data)
            .then(function (resp) {
            _this.doctorArray = resp.data;
            // this.fclProviderMapID =  this.doctorArray[0].fclProviderMapID;
            _this.fclProviderMapID = _this.selectedfclProviderMapID;
            _this.getdoctorid(_this.fclProviderMapID);
            _this.visittype();
        });
    };
    RebookappointmentPage.prototype.getdoctorid = function (doctorid) {
        this.fclProviderMapID = doctorid;
    };
    /// get visit type////
    RebookappointmentPage.prototype.visittype = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentType, "")
            .then(function (resp) {
            _this.visittypeArray = resp.data;
            _this.visittypeId = _this.selectedvisittypeId;
            _this.getvisittypeid(_this.visittypeId);
            _this.visitreason();
        });
    };
    RebookappointmentPage.prototype.getvisittypeid = function (visit) {
        this.visittypeId = visit;
    };
    /// visit reason////
    RebookappointmentPage.prototype.visitreason = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentReason, "")
            .then(function (resp) {
            _this.visitreasonArray = resp.data;
            _this.visitreasonId = _this.selectedvisitreasonId;
            _this.getvisitreasonid(_this.visitreasonId);
            // this.visitreasonId = this.visitreasonArray[0].key;
        });
    };
    RebookappointmentPage.prototype.getvisitreasonid = function (visit) {
        this.visitreasonId = visit;
    };
    /// view and get appointment api////
    RebookappointmentPage.prototype.getviewgetappointment = function () {
        var _this = this;
        var data1 = {
            patAppointmentID: this.patAppointmentID
            // patAppointmentID: 107
        };
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].viewAndEditAppointmentPatient, data1)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                //  console.log("RESPONNSE:--- "+JSON.stringify(resp));
                _this.viewgetappointmentArray = resp.data;
                // var obj = JSON.stringify(resp);
                // this.specialityArray = JSON.parse(obj);
                // this.specialityArray=resp.data.filter(item => item.specialityName === 'Skin')
                console.log("successsssssss=> apointmentpage", _this.viewgetappointmentArray);
                _this.getallFacilities();
                _this.selectedfacilityCenterID = resp.data.facilityCenterID;
                console.log("centered ID", _this.selectedfacilityCenterID);
                _this.selectedfcLocationMapID = resp.data.fcLocationMapID;
                _this.selectedspecialityID = resp.data.specialityID;
                _this.selectedfclProviderMapID = resp.data.fclProviderMapID;
                _this.selectedvisittypeId = resp.data.patAppType;
                _this.selectedvisitreasonId = resp.data.patAppReason;
                var timediffFrom = resp.data.patAppTimeFrom - 19800000;
                var timediffTo = resp.data.patAppTimeTo - 19800000;
                _this.selectedpatAppDate = _this.changeStringToDate(new Date(resp.data.patAppDate).toISOString());
                console.log("datettttttttttttttttttt", _this.selectedpatAppDate);
                _this.selectedpatAppTimeFrom = _this.changeStringToDate(new Date(timediffFrom).toISOString());
                console.log("datettttttttttttttttttt", _this.selectedpatAppDate);
                _this.selectedpatAppTimeTo = _this.changeStringToDate(new Date(timediffTo).toISOString());
                console.log("datettttttttttttttttttt", _this.selectedpatAppTimeTo);
                // this.selectedpatAppTimeFrom =resp.data.patAppDate?this.changeStringToDate(resp.data.patAppDate+" "+resp.data.patAppTimeFrom):"";
                // this.selectedpatAppTimeTo =resp.data.patAppDate?this.changeStringToDate(resp.data.patAppDate+" "+resp.data.patAppTimeTo):"";
                _this.selectedpatAppDescription = resp.data.patAppDescription;
            }
        });
    };
    RebookappointmentPage.prototype.formatDate = function (date) {
        var monthNames = [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
        ];
        var day = date.getDate();
        var monthIndex = date.getMonth();
        var year = date.getFullYear();
        return day + " " + monthNames[monthIndex] + " " + year;
    };
    RebookappointmentPage.prototype.callEditAppointmentApi = function () {
        var _this = this;
        if (this.facilityCenterID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select facility", this.toastCtrl);
            return;
        }
        if (this.fcLocationMapID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Location", this.toastCtrl);
            return;
        }
        if (this.specialityID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Speciality", this.toastCtrl);
            return;
        }
        if (this.fclProviderMapID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Doctor", this.toastCtrl);
            return;
        }
        if (this.selectedpatAppDate.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment date", this.toastCtrl);
            return;
        }
        if (this.selectedpatAppTimeFrom.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment start time", this.toastCtrl);
            return;
        }
        if (this.selectedpatAppTimeTo.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment end time", this.toastCtrl);
            return;
        }
        if (this.visittypeId.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select type Of Visit", this.toastCtrl);
            return;
        }
        if (this.visitreasonId.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Reason to Visit", this.toastCtrl);
            return;
        }
        if (this.selectedpatAppDescription.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please add detail Description", this.toastCtrl);
            return;
        }
        var date = new Date(this.selectedpatAppDate);
        var datetopass = date.getTime();
        console.log("datebefore", "" + datetopass);
        var timefrom = new Date(this.selectedpatAppTimeFrom);
        var timefromtopass = timefrom.getTime();
        console.log("timebefrm", "" + timefromtopass);
        var timeto = new Date(this.selectedpatAppTimeTo);
        var timetopass = timeto.getTime();
        console.log("timeto", "" + timetopass);
        var data = JSON.stringify({
            fclProviderMapID: { fclProviderMapID: this.fclProviderMapID },
            specialityMaster: { specialityID: this.specialityID },
            patAppDate: datetopass,
            patAppTimeFrom: timefromtopass,
            patAppTimeTo: timetopass,
            // patAppTimeFrom: '08:00 am',
            // patAppTimeTo: '08:15 pm',
            patAppType: this.visittypeId,
            patAppReason: this.visitreasonId,
            patAppDescription: this.selectedpatAppDescription,
            patAppStatus: "Pending"
        });
        console.log("ADDDdata::----" + data);
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditAppointment, data)
            .then(function (resp) {
            console.log("resp :-" + resp);
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Appointment book updated successfully", _this.toastCtrl);
                _this.navCtrl.pop();
            }
        });
    };
    ///to convert date and time////
    RebookappointmentPage.prototype.changeStringToDate = function (dateString, format //date
    ) {
        if (format) {
            //19800000
            //
            return this.changeDateFormat(new Date(new Date(dateString).getTime() -
                new Date(dateString).getTimezoneOffset() * 60000), format);
        }
        else {
            return new Date(new Date(dateString).getTime() -
                new Date(dateString).getTimezoneOffset() * 60000).toISOString();
        }
    };
    RebookappointmentPage.prototype.changeDateFormat = function (date, formate //date to any format
    ) {
        var latest_date = this.datepipe.transform(date, formate);
        return latest_date;
    };
    RebookappointmentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-rebookappointment",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/rebookappointment/rebookappointment.html"*/'<!--\n  Generated template for the AddAppointmentPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Re - Book Appointment</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="book-apmnt pt-20 bg-fff">\n    <form class="cmn-form no-input-efct mb-20">\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="faciltyCenterName"\n          [(ngModel)]="facilityCenterID"\n          [disabled]="facilitiesArray.length == 0"\n          (change)="getFacilityid($event.target.value)"\n        >\n          <option\n            *ngFor="let category of facilitiesArray; let idx = index"\n            [value]="category.facilityCenterID"\n            selected="{{ (idx == 0).facilityCenterID }}"\n            >{{ category.facilityCenterName }}</option\n          >\n        </select>\n        <label>Facility</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="fcLocationName"\n          [(ngModel)]="fcLocationMapID"\n          [disabled]="locationArray.length == 0"\n          (change)="getlocationid($event.target.value)"\n        >\n          <option\n            *ngFor="let location of locationArray; let idx = index"\n            [value]="location.fcLocationMapID"\n            selected="{{ (idx == 0).fcLocationMapID }}"\n            >{{ location.fcLocationName }}</option\n          >\n        </select>\n        <label>Location</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="specialityName"\n          [(ngModel)]="specialityID"\n          [disabled]="specialityArray.length == 0"\n          (change)="getspecialityid($event.target.value)"\n        >\n          <option\n            *ngFor="let speciality of specialityArray; let idx = index"\n            [value]="speciality.specialityID"\n            selected="{{ (idx == 0).specialityID }}"\n            >{{ speciality.specialityName }}</option\n          >\n        </select>\n        <label>Speciality</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="providerName"\n          [(ngModel)]="fclProviderMapID"\n          [disabled]="doctorArray.length == 0"\n          (change)="getdoctorid($event)"\n        >\n          <option\n            *ngFor="let doctor of doctorArray; let idx = index"\n            [value]="doctor.fclProviderMapID"\n            selected="{{ (idx == 0).fclProviderMapID }}"\n            >{{ doctor.providerName }}</option\n          >\n        </select>\n        <label>List of Doctor</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          [(ngModel)]="visittypeId"\n          name="visitType"\n          (change)="getvisittypeid($event.target.value)"\n        >\n          <option\n            *ngFor="let visit of visittypeArray; let idx = index"\n            [value]="visit.key"\n            selected="{{ (idx == 0).key }}"\n            >{{ visit.value }}</option\n          >\n          <!-- selected="{{ (idx == 0).key }}" -->\n        </select>\n        <label>Case</label>\n      </div>\n      <!-- <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Fees of selected Doctor</label>\n            <input\n              type="number"\n              name="feesText"\n              [(ngModel)]="fees"\n              class="form-control"\n              readonly="true"\n            />\n          </div>\n        </div> -->\n      <!-- <div class="floating-label cmn-select">\n          <select\n            class="floating-select form-control"\n            [(ngModel)]="coupounCode"\n            name="promocode"\n            (change)="getapplypromocode($event.target.value)"\n          >\n            <option\n              *ngFor="let promo of promocodeArray; let idx = index"\n              [value]="promo.coupounCode"\n              selected="{{ (idx == 0).coupounCode }}"\n              >{{ promo.coupounCode }}</option\n            >\n          </select>\n          <label>Apply Coupan Code</label>\n        </div> -->\n\n      <!-- <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Total Fees Amount </label>\n            <input\n              type="number"\n              name="amountToutal"\n              [(ngModel)]="feesAmount"\n              class="form-control"\n              readonly="true"\n            />\n          </div>\n        </div> -->\n\n      <!-- <div class="avl-schdl"> -->\n      <!-- <div class="scdl-ttl">Available Schedule</div>\n          <div class="scdl-row clearfix">\n            <div class="scdl-day pull-left">Monday</div>\n            <div class="scdl-time pull-right">12:00 PM to 04:00 PM</div>\n          </div>\n          <div class="scdl-row clearfix">\n            <div class="scdl-day pull-left">Wednesday</div>\n            <div class="scdl-time pull-right">12:00 PM to 04:00 PM</div>\n          </div>\n          <div class="scdl-row clearfix">\n            <div class="scdl-day pull-left">Saturday</div>\n            <div class="scdl-time pull-right">06:00 PM to 08:00 PM</div>\n          </div>\n          <div class="scdl-row clearfix">\n            <div class="scdl-day pull-left">Sunday</div>\n            <div class="scdl-time pull-right">06:00 PM to 08:00 PM</div>\n          </div> -->\n      <!-- </div> -->\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Date of Appointment</label>\n          <ion-datetime\n            displayFormat="DD MMMM YYYY"\n            pickerFormat="DD MMMM YYYY"\n            name="date"\n            [(ngModel)]="selectedpatAppDate"\n          ></ion-datetime>\n          <span class="input-icon"><img src="assets/images/date.png"/></span>\n        </div>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Time From</label>\n          <ion-datetime\n            displayFormat="hh:mm a"\n            pickerFormat="hh:mm a"\n            [(ngModel)]="selectedpatAppTimeFrom"\n            name="timeFrom"\n          ></ion-datetime>\n          <span class="input-icon"><img src="assets/images/time.png"/></span>\n        </div>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Time To</label>\n          <ion-datetime\n            displayFormat="hh:mm a"\n            pickerFormat="hh:mm a"\n            [(ngModel)]="selectedpatAppTimeTo"\n            name="timeTo"\n          ></ion-datetime>\n          <span class="input-icon"><img src="assets/images/time.png"/></span>\n        </div>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          [(ngModel)]="visitreasonId"\n          [disabled]="visitreasonArray.length == 0"\n          (ionChange)="getvisitreasonid($event)"\n          name="reasonForVisit"\n        >\n          <option\n            *ngFor="let reason of visitreasonArray; let idx = index"\n            [value]="reason.key"\n            selected="{{ (idx == 0).key }}"\n            >{{ reason.value }}</option\n          >\n        </select>\n        <label>Reason for Visit</label>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="floating-label cmn-inpt">\n          <textarea\n            class="floating-input cmn-txtarea"\n            type="text"\n            name="Desciption"\n            [(ngModel)]="selectedpatAppDescription"\n            rows="4"\n          ></textarea>\n          <label>Additional Detail</label>\n        </div>\n      </div>\n\n      <!-- <ion-list>\n          <ion-item>\n            <ion-label>COD (Cash On Delivery))</ion-label>\n            <ion-checkbox name="cod" (click)="addValue($event)"></ion-checkbox>\n          </ion-item>\n        </ion-list> -->\n\n      <div class="form-button bg-gray pt-25 text-center">\n        <button\n          type="button"\n          class="cmn-thm-btn mr-25"\n          (click)="callEditAppointmentApi()"\n        >\n          SAVE\n        </button>\n        <button type="button" class="cmn-wht-btn">\n          CANCEL\n        </button>\n      </div>\n    </form>\n  </div>\n</ion-content>\n\n<!-- <ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle right>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Re - Book Appointment</ion-title>\n    <ion-buttons left>\n      <button ion-button icon-only>\n        <ion-icon name="" class="header-logo"></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <div class="cmn-inr-form">\n    <ion-list>\n      \n      <ion-item>\n        <ion-label color="" floating>Facility</ion-label>\n        <ion-select [(ngModel)]="facilityCenterID"[disabled]="facilitiesArray.length == 0"  (ionChange)="getFacilityid($event)">\n\n          <ion-option *ngFor="let category of facilitiesArray;let idx=index" [value]="category.facilityCenterID" selected="{{(idx==0).facilityCenterID}}">{{category.facilityCenterName}}</ion-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="" floating>Location</ion-label>\n        <ion-select [disabled]="locationArray.length == 0" [(ngModel)]="selectedLocation" (ionChange)="getlocationid($event)">\n          <ion-option *ngFor="let location of locationArray;let idx=index" [value]="location.fcLocationMapID" selected="{{(idx==0).fcLocationMapID}}">{{location.fcLocationName}}</ion-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="" floating>Speciality </ion-label>\n        <ion-select [(ngModel)]="specialityID" [disabled]="specialityArray.length == 0" (ionChange)="getspecialityid($event)">\n          <ion-option *ngFor="let speciality of specialityArray;let idx=index" [value]="speciality.specialityID" selected="{{(idx==0).specialityID}}">{{speciality.specialityName}}</ion-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="" floating>List of Doctors </ion-label>\n        <ion-select [(ngModel)]="fclProviderMapID" [disabled]="doctorArray.length == 0" (ionChange)="getdoctorid($event)">\n          <ion-option *ngFor="let doctor of doctorArray;let idx=index" [value]="doctor.fclProviderMapID" selected="{{(idx==0).fclProviderMapID}}">{{doctor.providerName}}</ion-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="" floating>Date Of Appointment </ion-label>\n        <ion-datetime displayFormat="DD MMMM YYYY" pickerFormat="DD MMMM YYYY" [(ngModel)]="selectedpatAppDate"></ion-datetime>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="" floating>Time From</ion-label>\n        <ion-datetime displayFormat="hh:mm a" pickerFormat="hh:mm a" [(ngModel)]="selectedpatAppTimeFrom"></ion-datetime>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="" floating>Time To</ion-label>\n        <ion-datetime displayFormat="hh:mm a" pickerFormat="hh:mm a" [(ngModel)]="selectedpatAppTimeTo"></ion-datetime>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="" floating>Visit Type</ion-label>\n        <ion-select [(ngModel)]="visittypeId" (ionChange)="getvisittypeid($event)">\n          <ion-option *ngFor="let visit of visittypeArray;let idx=index" [value]="visit.key" selected="{{(idx==0).key}}">{{visit.value}}</ion-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <ion-label color="" floating>Reason for visit</ion-label>\n        <ion-select [(ngModel)]="visitreasonId" [disabled]="visitreasonArray.length == 0" (ionChange)="getvisitreasonid($event)">\n          <ion-option *ngFor="let reason of visitreasonArray;let idx=index" [value]="reason.key" selected="{{(idx==0).key}}">{{reason.value}}</ion-option>\n        </ion-select>\n      </ion-item>\n\n    \n\n\n    <ion-item>\n        <ion-label color="" floating>Additional Desciption</ion-label>\n\n        <ion-input type="text" name="Desciption" [(ngModel)]="selectedpatAppDescription"></ion-input>\n    </ion-item>\n\n      <div class="cmn-ftr-btn">\n        <button (click)="callEditAppointmentApi()" ion-button class="cmn-btn-styl prpl-btn" block>Save</button>\n      </div>\n\n    </ion-list>\n  </div>\n</ion-content> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/rebookappointment/rebookappointment.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__angular_common__["d" /* DatePipe */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], RebookappointmentPage);
    return RebookappointmentPage;
}());

//# sourceMappingURL=rebookappointment.js.map

/***/ }),

/***/ 62:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DashBoardForPatientPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__patientdoctorvisitlist_patientdoctorvisitlist__ = __webpack_require__(141);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__patientlabreportlist_patientlabreportlist__ = __webpack_require__(142);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pharmadelivered_pharmadelivered__ = __webpack_require__(98);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_fcm__ = __webpack_require__(120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_local_notifications__ = __webpack_require__(196);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the DashBoardForPatientPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DashBoardForPatientPage = /** @class */ (function () {
    function DashBoardForPatientPage(navCtrl, navParams, api, localNotifications, fcm) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.localNotifications = localNotifications;
        this.fcm = fcm;
        this.visitlistcount = "";
        this.patientlablistcount = "";
        this.pharmadeliverlistcount = "";
    }
    DashBoardForPatientPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        console.log("ionViewDidLoad DashBoardForPatientPage");
        //API for visitList
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDoctorVisitPatient, "").then(function (resp) {
            var doctorVisitList = resp;
            _this.visitlistcount = doctorVisitList.data.totalNumber;
        });
        //API for patientLabList
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLabReport, "").then(function (resp) {
            var doctorVisitList = resp;
            _this.patientlablistcount = doctorVisitList.data.totalNumber;
        });
        //API For PharmaDeliveredList
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Patient") {
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["a" /* APIName */].getpharmadelivered, "").then(function (resp) {
                // this.appointmentTodayItemes=resp.data.patAppointmentPojo;
                // this.currentAppointlist=resp.data.patAppointmentPojo;
                _this.pharmadeliverlistcount = resp.data.totalNumber;
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["a" /* APIName */].getpharmadelivered, "").then(function (resp) {
                // this.= resp.data.patAppointmentPojo;
                _this.pharmadeliverlistcount = resp.data.totalNumber;
            });
        }
    };
    DashBoardForPatientPage.prototype.viewVisitList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__patientdoctorvisitlist_patientdoctorvisitlist__["a" /* PatientdoctorvisitlistPage */]);
    };
    DashBoardForPatientPage.prototype.viewLaboratoryReportList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__patientlabreportlist_patientlabreportlist__["a" /* PatientlabreportlistPage */]);
    };
    DashBoardForPatientPage.prototype.viewPharmaDeliverdList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__pharmadelivered_pharmadelivered__["a" /* PharmadeliveredPage */]);
    };
    DashBoardForPatientPage.prototype.singlenotification = function () {
        var _this = this;
        this.fcm.onNotification().subscribe(function (resp) {
            // showToast("on notification call " + resp, this.toastCtrl);
            console.log("on notification call : ");
            console.log("Respomse : " + resp);
            var myObjStr = JSON.stringify(resp);
            console.log("response:" + myObjStr);
            alert("on notification" + myObjStr);
            _this.localNotifications.schedule({
                // id: 1,
                title: resp.title,
                text: resp.body
            });
            //this.singlenotification();
            // if (resp.wasTapped) {
            //   showToast("Received in background", this.toastCtrl);
            //   console.log("Received in background");
            // } else {
            //   showToast("Received in foreground", this.toastCtrl);
            //   console.log("Received in foreground");
            // }
        });
    };
    DashBoardForPatientPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-dash-board-for-patient",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/dash-board-for-patient/dash-board-for-patient.html"*/'<!--\n  Generated template for the DashBoardForPatientPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Dashboard</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only (click)="singlenotification()">\n        <ion-icon name="" class="notification-icon"\n          >\n\n    \n          <span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="page-content-white">\n    <div class="page-wrapper">\n      <div class="page-container">\n        <!-- start page content -->\n        <div class="page-content-wrapper home">\n          <div class="page-content">\n            <div class="page-bar clearfix">\n              <div class="page-title-breadcrumb">\n                <div class=" pull-left">\n                  <div class="page-title">Welcome to Health Chain</div>\n                </div>\n                <!-- <ol class="breadcrumb page-breadcrumb pull-right">\n                            <li><i class="fa fa-home"></i>&nbsp;<a class="parent-item" routerLink="/home">Home</a>&nbsp;<i class="fa fa-angle-right"></i>\n                            </li>\n                            <li class="active">Dashboard</li>\n                        </ol> -->\n              </div>\n            </div>\n            <!-- start widget -->\n            <div class="state-overview">\n              <div class="">\n                <div class="col-xl-4 col-md-6 col-12">\n                  <div class="info-box orange-bg info-dctr-vst-icon">\n                    <div class="info-box-content d-flex align-items-center">\n                      <span class="info-box-text"\n                        >Doctor <br />\n                        Visit</span\n                      >\n                      <span class="info-box-number ml-auto">{{\n                        visitlistcount\n                      }}</span>\n                    </div>\n                    <!-- /.info-box-content -->\n                    <!-- <button ion-button color="calm" (click)="editItem(item.patAppointmentID)"></button> -->\n                    <button class="view-dtl-btn" (click)="viewVisitList()">\n                      View Details\n                    </button>\n                  </div>\n                  <!-- /.info-box -->\n                </div>\n                <!-- /.col -->\n                <div class="col-xl-4 col-md-6 col-12">\n                  <div class="info-box pink-bg lab-report-icon">\n                    <div class="info-box-content d-flex align-items-center">\n                      <span class="info-box-text">\n                        Lab<br />\n                        Report</span\n                      >\n                      <span class="info-box-number ml-auto">{{\n                        patientlablistcount\n                      }}</span>\n                    </div>\n                    <!-- /.info-box-content -->\n                    <button\n                      class="view-dtl-btn"\n                      (click)="viewLaboratoryReportList()"\n                    >\n                      View Details\n                    </button>\n                  </div>\n                  <!-- /.info-box -->\n                </div>\n                <!-- /.col -->\n                <div class="col-xl-4 col-md-6 col-12">\n                  <div class="info-box blue-bg pharma-delvers-icon">\n                    <div class="info-box-content d-flex align-items-center">\n                      <span class="info-box-text"\n                        >Pharma <br />\n                        Delivered</span\n                      >\n                      <span class="info-box-number ml-auto">{{\n                        pharmadeliverlistcount\n                      }}</span>\n                    </div>\n                    <!-- /.info-box-content -->\n                    <button\n                      class="view-dtl-btn"\n                      (click)="viewPharmaDeliverdList()"\n                    >\n                      View Details\n                    </button>\n                  </div>\n                  <!-- /.info-box -->\n                </div>\n                <!-- /.col -->\n              </div>\n            </div>\n          </div>\n\n          <!-- start admited patient list -->\n\n          <!-- end of patient list -->\n\n          <!-- start of pharma list -->\n          <!-- <div class="col-xl-6 col-md-12 col-sm-12">\n                        <div class="card card-box pharma-appointment">\n                            <div class="card-head">\n                                <header>Pharmas Profile</header>\n                                <div class="tools">\n                                    <a class="btn btn-primary" (click)=ViewPharmaList(); title="View All">View All</a>\n                                </div>\n                            </div>\n                            <div class="card-body ">\n                               \n                                <div class="dshbord-empty-data hide">\n                                    <img src="../../images/pharma-empty-icon.png" alt="">\n                                    <h2>No appointments yet!</h2>\n                                    <div class=""><a href="#">Click here</a> to book Pharma Appointment</div>\n                                </div>\n                              \n                              <div class="table-wrap">\n                                    <div class="table-responsive">                                \n                                        <table id="pharmatable" datatable [dtOptions]="medoption" [dtTrigger]="medTrigger" class="table table-hover order-column valign-middle">\n                                            <colgroup>\n                                                <col width="16.66%">\n                                                <col width="16.66%">\n                                                <col width="16.66%">\n                                                <col width="16.66%">\n                                                <col width="16.66%">\n                                                <col width="16.66%"> \n                                            </colgroup>\n                                            <thead class="thead-light">\n                                                  <tr>\n                                                    <th> Full Name </th>\n                                                    <th> Email </th>\n                                                    <th> phone no. </th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    <tr  *ngFor="let a of pharmaListn                                                        <td>{{a.fullName}}</td>\n                                                        <td> {{a.email}}</td>\n                                                        <td>  {{a.phoneNo}}</td>\n                                                        \n                                                     \n                                                     </tr>\n                                                  <tr *ngIf="medicineBoughtListModel ?.length == 0">\n                                                      <td colspan="6" class="no-data-available">No data!</td>\n                                                  </tr>\n                                                </tbody>\n                                          </table>\n                                    </div>\n                                </div>	\n                            </div>\n                        </div>\n                    </div>\n                </div> -->\n          <!-- end admited pharma list -->\n        </div>\n      </div>\n      <!-- end page content -->\n    </div>\n\n    <!-- include js -->\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/dash-board-for-patient/dash-board-for-patient.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_5__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_native_local_notifications__["a" /* LocalNotifications */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_fcm__["a" /* FCM */]])
    ], DashBoardForPatientPage);
    return DashBoardForPatientPage;
}());

//# sourceMappingURL=dash-board-for-patient.js.map

/***/ }),

/***/ 627:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 628:
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 68:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddPharmaAppointmentPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__ionic_native_in_app_browser__ = __webpack_require__(195);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_forms__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_camera__ = __webpack_require__(30);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_native_image_picker__ = __webpack_require__(119);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_native_photo_viewer__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__ionic_native_file__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__patient_order_details_patient_order_details__ = __webpack_require__(233);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var checksum_lib = __webpack_require__(178);
var paytm_config = __webpack_require__(391).paytm_config;
var AddPharmaAppointmentPage = /** @class */ (function () {
    function AddPharmaAppointmentPage(navCtrl, navParams, api, datepipe, toastCtrl, iab, fb, actionSheetCrtl, camera, imagePicker, photoViewer, file, fb1) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.datepipe = datepipe;
        this.toastCtrl = toastCtrl;
        this.iab = iab;
        this.fb = fb;
        this.actionSheetCrtl = actionSheetCrtl;
        this.camera = camera;
        this.imagePicker = imagePicker;
        this.photoViewer = photoViewer;
        this.file = file;
        this.fb1 = fb1;
        this.facilitiesArray = [];
        this.locationArray = [];
        this.MedicalStoreArray = [];
        this.MedByPharmaArray = [];
        this.doctorArray = [];
        this.visittypeArray = [];
        this.deliverytypeArray = [];
        this.visitreasonArray = [];
        this.facilityCenterID = "";
        this.fcLocationMapID = "";
        this.fclProviderMapID = "";
        this.drugcompundID = "";
        this.costpermedicine = "";
        this.visittypeId = "";
        this.deliverytypeId = "";
        this.visitreasonId = "";
        this.patAppDate = "";
        this.patAppTime = "";
        this.patAppTimeTo = "";
        this.patAppDescription = "";
        this.fees = "";
        this.orderID = 0;
        this.custID = 0;
        this.txnAmount = "";
        this.providerId = "";
        this.selectedMeds = [];
        this.deliveryType = "";
        this.paramarray = {};
        this.checkpres = "No";
        this.checked = false;
        this.newmed = [];
        this.sameselectedMeds = [];
        this.selectedQuantity = [];
        this.arrcertificates = [];
        this.formData = new FormData();
        this.medData = {
            medicineName: "",
            selectedQuantity: 0
        };
        this.paramarray["MID"] = paytm_config.MID; //Provided by Paytm
        this.paramarray["INDUSTRY_TYPE_ID"] = "Retail"; //Provided by Paytm
        this.paramarray["CHANNEL_ID"] = "WAP"; //Provided by Paytm
        this.paramarray["WEBSITE"] = "WEBSTAGING"; //Provided by Paytm
        this.paramarray["ENVIRONMENT"] = "staging";
        this.paramarray["CHECKSUMHASH"] = "";
        this.orderMedicineForm = this.fb.group({});
        this.value = ["multiple2", "multiple4"];
        this.options = {
            multiple: true
        };
        this.current = this.value.join(" | ");
        this.selectForm = this.fb1.group({
            MedicineRequired: new __WEBPACK_IMPORTED_MODULE_6__angular_forms__["b" /* FormControl */]()
        });
        // this.selectForm.controls['MedicineRequired'].valueChanges.subscribe(val=>{
        //   console.log(val);
        // });
    }
    AddPharmaAppointmentPage.prototype.changed = function (data) {
        // this.current = data.value.join(' | ');
    };
    AddPharmaAppointmentPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad AddappointmentPage");
        this.getallFacilities();
        this.visitreason();
        this.visittype();
    };
    /// facility////
    AddPharmaAppointmentPage.prototype.getallFacilities = function () {
        var _this = this;
        var data1 = {
            facilityCenterType: "MedicalStore"
        };
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllFacilityByPerameter, data1)
            .then(function (resp) {
            if (resp.status === 500) {
            }
            else {
                _this.facilitiesArray = resp.data;
                _this.facilityCenterID = _this.facilitiesArray[0].facilityCenterID;
                _this.getFacilityid(_this.facilityCenterID);
            }
        });
    };
    AddPharmaAppointmentPage.prototype.getFacilityid = function (facilityid) {
        this.facilityCenterID = facilityid;
        this.getAllLocations();
        console.log("facilityCenterID", "" + this.facilityCenterID);
    };
    AddPharmaAppointmentPage.prototype.checkpresmethod = function () {
        if (this.checkpres == "Yes") {
            this.showForm = false;
        }
        else {
            this.showForm = true;
        }
    };
    /// locations////
    AddPharmaAppointmentPage.prototype.getAllLocations = function () {
        var _this = this;
        var data = {
            facilityCenterID: this.facilityCenterID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLocationByFacility, data)
            .then(function (resp) {
            _this.locationArray = resp.data;
            if (_this.locationArray.length > 0) {
                _this.fcLocationMapID = _this.locationArray[0].fcLocationMapID;
                _this.getlocationid(_this.fcLocationMapID);
            }
            else {
                _this.fcLocationMapID = "";
                _this.getlocationid(_this.fcLocationMapID);
            }
        });
    };
    AddPharmaAppointmentPage.prototype.getlocationid = function (locationid) {
        this.fcLocationMapID = locationid;
        console.log("locationID::" + locationid);
        this.getAllMedicalStore();
    };
    /// MedicalStore////
    AddPharmaAppointmentPage.prototype.getAllMedicalStore = function () {
        var _this = this;
        var data = {
            fcLocationMapID: this.fcLocationMapID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllMedicalStore, data)
            .then(function (resp) {
            _this.MedicalStoreArray = resp.data;
            if (_this.MedicalStoreArray.length > 0) {
                _this.fclProviderMapID = _this.MedicalStoreArray[0].fclProviderMapID;
                _this.providerId = _this.MedicalStoreArray[0].providerID;
                _this.getmedicalStoreID(_this.fclProviderMapID);
            }
            else {
                _this.fclProviderMapID = "";
                _this.providerId = "";
            }
        });
    };
    AddPharmaAppointmentPage.prototype.getmedicalStoreID = function (medicalStore) {
        console.log(medicalStore);
        this.fclProviderMapID = medicalStore;
        this.getMedByPharma();
    };
    AddPharmaAppointmentPage.prototype.getMedByPharma = function () {
        var _this = this;
        var data = {
            fclProviderMapID: this.fclProviderMapID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getMedByPharma, data)
            .then(function (resp) {
            _this.MedByPharmaArray = resp.data.medicinePojoList;
            console.log("MedByPharma===========", _this.MedByPharmaArray);
            if (_this.MedByPharmaArray.length > 0) {
                _this.drugcompundID = _this.MedByPharmaArray[0];
                _this.getMedByPharmaID(_this.drugcompundID, _this.drugcompundID);
            }
            else {
                _this.drugcompundID = "";
            }
        });
    };
    AddPharmaAppointmentPage.prototype.getMedByPharmaID = function (medByPharma, type) {
        // if (type != undefined) {
        var _this = this;
        console.log(JSON.stringify(medByPharma));
        console.log(type);
        this.selectedMeds = [];
        if (medByPharma != undefined && medByPharma instanceof Array) {
            medByPharma.forEach(function (element) {
                var drugname = _this.MedByPharmaArray.find(function (item) { return item.medicineName === element.text; });
                _this.selectedMeds.push(drugname);
            });
        }
        else {
        }
        // }
        // console.log(this.selectedMeds);
    };
    AddPharmaAppointmentPage.prototype.getQuantity = function () {
        var totalcost = 0;
        var _loop_1 = function (key) {
            if (this_1.newmed[key] < 0) {
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Proper Quantity", this_1.toastCtrl);
            }
            costformed = this_1.selectedMeds.filter(function (item) { return item.medicineName === key; });
            var data = { medname: "", medqua: 0, costpermedicine: 0 };
            data.medname = key;
            data.medqua = this_1.newmed[key];
            for (var _i = 0, costformed_1 = costformed; _i < costformed_1.length; _i++) {
                var cost = costformed_1[_i];
                data.costpermedicine = cost.costpermedicine;
            }
            this_1.sameselectedMeds.push(data);
        };
        var this_1 = this, costformed;
        for (var key in this.newmed) {
            _loop_1(key);
        }
        this.selectedQuantity = this.sameselectedMeds;
        var _loop_2 = function (val) {
            result = this_2.sameselectedMeds.filter(function (item) { return item.medname === val.medicineName; });
            if (result) {
                for (var _i = 0, result_1 = result; _i < result_1.length; _i++) {
                    var total = result_1[_i];
                    if (total.medqua <= val.medicineQuantity) {
                        totalcost += total.medqua * val.costpermedicine;
                    }
                    else {
                        // this.is_med = true;
                        Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please Enter Proper Quantity for " +
                            "'" +
                            val.medicineName +
                            "'" +
                            " Medicine", this_2.toastCtrl);
                        // this.errorMessage = "Please Enter Proper Quantity for " +"'"+val.medicineName+"'"+" Medicine";
                    }
                }
            }
        };
        var this_2 = this, result;
        for (var _i = 0, _a = this.selectedMeds; _i < _a.length; _i++) {
            var val = _a[_i];
            _loop_2(val);
        }
        this.finalmedcost = totalcost;
        this.sameselectedMeds = [];
        for (var key in this.newmed) {
            this.newmed[key] = "0";
        }
    };
    AddPharmaAppointmentPage.prototype.addValue = function () {
        this.checked = !this.checked;
        console.log("checked: " + this.checked); //it is working !!!
    };
    AddPharmaAppointmentPage.prototype.visittype = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentType, "")
            .then(function (resp) {
            _this.visittypeArray = resp.data;
            if (_this.visittypeArray.length > 0) {
                _this.visittypeId = _this.visittypeArray[0].key;
            }
            else {
                _this.visittypeId = "";
            }
        });
    };
    AddPharmaAppointmentPage.prototype.getvisittypeid = function (visit) {
        this.visittypeId = visit;
    };
    AddPharmaAppointmentPage.prototype.deliverytype = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentType, "")
            .then(function (resp) {
            _this.deliverytypeArray = resp.data;
            if (_this.deliverytypeArray.length > 0) {
                _this.deliverytypeId = _this.deliverytypeArray[0].key;
            }
            else {
                _this.deliverytypeId = "";
            }
        });
    };
    AddPharmaAppointmentPage.prototype.getdeliverytypeid = function (delivery) {
        this.deliverytypeId = delivery;
    };
    /// visit reason////
    AddPharmaAppointmentPage.prototype.visitreason = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentReason, "")
            .then(function (resp) {
            _this.visitreasonArray = resp.data;
            if (_this.visitreasonArray.length > 0) {
                _this.visitreasonId = _this.visitreasonArray[0].key;
            }
            else {
                _this.visitreasonId = "";
            }
        });
    };
    AddPharmaAppointmentPage.prototype.getvisitreasonid = function (visit) {
        this.visitreasonId = visit;
    };
    AddPharmaAppointmentPage.prototype.callAddAppointmentApi = function (item) {
        var _this = this;
        if (this.facilityCenterID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select facility", this.toastCtrl);
            return;
        }
        if (this.fcLocationMapID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Location", this.toastCtrl);
            return;
        }
        // if (this.fclProviderMapID.length == 0) {
        //   showToast("Please select Speciality", this.toastCtrl);
        //   return;
        // }
        if (this.drugcompundID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Medicine", this.toastCtrl);
            return;
        }
        if (this.visittypeId.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select type Of Visit", this.toastCtrl);
            return;
        }
        if (this.patAppDescription.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please add Medicine detail", this.toastCtrl);
            return;
        }
        var drugname = this.MedByPharmaArray.find(function (item) { return item.drugcompundID === _this.drugcompundID; }).medicineName;
        var drugcost = this.MedByPharmaArray.find(function (item) { return item.drugcompundID === _this.drugcompundID; }).costpermedicine;
        if (this.checked == false) {
            this.makePayment();
        }
        else {
            var data = JSON.stringify({
                fclProviderMapID: { fclProviderMapID: this.fclProviderMapID },
                meddetail: this.patAppDescription,
                medname: drugname,
                medcost: drugcost,
                visittype: this.visittypeId.trim()
            });
            // if (this.visittypeId.length == 0) {
            //   showToast("Please select type Of Visit", this.toastCtrl);
            //   return;
            // }
            // if (this.patAppDescription.length == 0) {
            //   showToast("Please add Medicine detail", this.toastCtrl);
            //   return;
            // }
            // this.navCtrl.push(PatientOrderDetailsPage);
            console.log("PharmaArray= ", this.selectedQuantity);
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__patient_order_details_patient_order_details__["a" /* PatientOrderDetailsPage */], {
                selectedMeds: this.selectedQuantity,
                finalcost: this.finalmedcost
            });
            // let drugname = this.MedByPharmaArray.find(
            //   item => item.drugcompundID === this.drugcompundID
            // ).medicineName;
            // let drugcost = this.MedByPharmaArray.find(
            //   item => item.drugcompundID === this.drugcompundID
            // ).costpermedicine;
            // if (this.checked == false) {
            //   this.makePayment();
            // } else
            // {
            // let data = JSON.stringify({
            //   fclProviderMapID: { fclProviderMapID: this.fclProviderMapID },
            //   meddetail: this.patAppDescription,
            //   medname: drugname,
            //   medcost: drugcost,
            //   visittype: this.visittypeId.trim()
            // });
            // console.log(data);
            // this.api
            //   .wsPostHeader(APIName.getmedicineboughtlist, data)
            //   .then((resp: any) => {
            //     if (resp.status === 500) {
            //       showToast(resp.error.message, this.toastCtrl);
            //     } else {
            //       if(this.showForm == true){
            //         const formModel = this.orderMedicineForm.value;
            //         const formData = new FormData();
            //         formData.append('apptid',resp.data);
            //         formData.append('`uploadpres`', this.uploadpres);
            //         this.api
            //         .wsPostHeader(APIName.pharmaimgupload, formData)
            //         .then((resp: any) => {
            //           if (resp.status === 500) {
            //             showToast(resp.error.message, this.toastCtrl);
            //             // localStorage.setItem(perProfile, resp.data.perCertificate);
            //           } else {
            //             showToast(resp.message, this.toastCtrl);
            //           }
            //         });
            //       }
            //       showToast("" + resp.message, this.toastCtrl);
            //       this.navCtrl.pop();
            //     }
            //   });
            // }
            console.log(data);
            this.api
                .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getmedicineboughtlist, data)
                .then(function (resp) {
                if (resp.status === 500) {
                    Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
                }
                else {
                    if (_this.showForm == true) {
                        var formModel = _this.orderMedicineForm.value;
                        var formData = new FormData();
                        formData.append("apptid", resp.data);
                        formData.append("`uploadpres`", _this.uploadpres);
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].pharmaimgupload, formData)
                            .then(function (resp) {
                            if (resp.status === 500) {
                                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.error.message, _this.toastCtrl);
                                // localStorage.setItem(perProfile, resp.data.perCertificate);
                            }
                            else {
                                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
                            }
                        });
                    }
                    Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("" + resp.message, _this.toastCtrl);
                    _this.navCtrl.pop();
                }
            });
        }
        this.makePayment();
    };
    AddPharmaAppointmentPage.prototype.buttonClickForChooseIDs = function () {
        var _this = this;
        Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["g" /* showActionSheetPhoto */])(this.actionSheetCrtl).then(function (seletedIndex) {
            _this.choosePhotoFromCameraOrGallery(seletedIndex);
        });
    };
    AddPharmaAppointmentPage.prototype.choosePhotoFromCameraOrGallery = function (sourceType) {
        var _this = this;
        var options = {
            quality: 100,
            destinationType: __WEBPACK_IMPORTED_MODULE_7__ionic_native_camera__["b" /* DestinationType */].FILE_URL,
            sourceType: sourceType,
            saveToPhotoAlbum: true,
            encodingType: this.camera.EncodingType.JPEG,
            mediaType: this.camera.MediaType.PICTURE,
            correctOrientation: true
        };
        // this.camera.getPicture(options).then(
        this.imagePicker.getPictures(options).then(function (imagePath) {
            console.log("getPicture >> ", imagePath);
            console.log("getPicture  normalizeURL(imagePath) >> ", Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath));
            for (var i = 0; i < imagePath.length; i++) {
                console.log("Image URI: " + imagePath[i]);
                _this.saveImage(Object(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["q" /* normalizeURL */])(imagePath[i]));
                // this.extendedProfile.perCertificate = imagePath[i];
            }
            _this.arrcertificates = imagePath;
        }, function (err) {
            alert(err);
        });
    };
    AddPharmaAppointmentPage.prototype.showPhoto = function (imagePath) {
        console.log("showPhoto clicked");
        this.photoViewer.show(imagePath);
    };
    AddPharmaAppointmentPage.prototype.saveImage = function (imageFileUri) {
        var _this = this;
        this.file
            .resolveLocalFilesystemUrl(imageFileUri)
            .then(function (entry) {
            return entry.file(function (file) {
                _this.readFile(file);
            });
        })
            .catch(function (err) { return console.log(err); });
    };
    AddPharmaAppointmentPage.prototype.readFile = function (file) {
        var _this = this;
        var reader = new FileReader();
        reader.onloadend = function () {
            var imgBlob = new Blob([reader.result], { type: file.type });
            // console.log("readFile() : file.type >> ", file.type);
            // console.log("readFile() : file >> ", file);
            _this.formData.append("perCertificate", imgBlob, file.name);
        };
        reader.readAsArrayBuffer(file);
    };
    // makePaymentPlugin() {
    //   var self = this;
    //   var min = 0;
    //   var max = 9999;
    //   var ORDER_ID = Math.floor(Math.random() * (+max - +min)) + +min;
    //   var CUST_ID = Math.floor(Math.random() * (+max + -min)) + +min;
    //   this.orderID = ORDER_ID;
    //   this.custID = CUST_ID;
    //   this.txnAmount = this.fees;
    //   this.paramarray["ORDER_ID"] = this.orderID; //unique OrderId for every request
    //   this.paramarray["CUST_ID"] = this.custID;
    //   this.paramarray["TXN_AMOUNT"] = this.fees;
    //   this.paramarray["CALLBACK_URL"] =
    //     "https://pguat.paytm.com/paytmchecksum/paytmCallback.jsp"; //Provided by Paytm
    //   // var checksum =  checksum_lib.genchecksum(paytmParams, "!29FEIkWuEqB@GEG");
    //   checksum_lib.genchecksumbystring(
    //     this.paramarray,
    //     paytm_config.MERCHANT_KEY,
    //     function(err, checksum) {
    //       console.log(checksum);
    //       console.log(JSON.stringify(checksum));
    //       self.pay(checksum, self.orderID.toString());
    //     }
    //   );
    // }
    // public pay(checksum: String, orderID: String) {
    //   var isValidChecksum = checksum_lib.verifychecksumbystring(
    //     this.paramarray,
    //     paytm_config.MERCHANT_KEY,
    //     checksum
    //   );
    //   if (isValidChecksum) {
    //     console.log("Checksum Matched");
    //   } else {
    //     console.log("Checksum Mismatched");
    //   }
    //   this.paramarray["CALLBACK_URL"] =
    //     "https://securegw-stage.paytm.in/theia/paytmCallback?ORDER_ID=" + orderID;
    //   this.paramarray["CHECKSUMHASH"] = checksum;
    //   window.paytm.startPayment(
    //     this.paramarray,
    //     this.successCallback,
    //     this.failureCallback
    //   );
    // }
    AddPharmaAppointmentPage.prototype.makePayment = function () {
        console.log("make PAyment");
        var min = 0;
        var max = 9999;
        var ORDER_ID = Math.floor(Math.random() * (+max - +min)) + +min;
        var CUST_ID = Math.floor(Math.random() * (+max + -min)) + +min;
        this.orderID = ORDER_ID;
        this.custID = CUST_ID;
        this.txnAmount = this.finalmedcost;
        // this.navCtrl.loadUrl(url, { openExternal:true });
        var options = {
            zoom: "no",
            fullscreen: "yes",
            hidenavigationbuttons: "no",
            toolbar: "no",
            hideurlbar: "yes"
        };
        var browser = this.iab.create("http://client.attuneinfocom.com/paytm_payment_demo/pgRedirect.php?ORDER_ID=" +
            this.orderID +
            "&CUST_ID=" +
            this.custID +
            "&TXN_AMOUNT=" +
            this.txnAmount +
            "&redirect_url=ionic", "_blank", {
            toolbar: "no",
            hideurlbar: "yes",
            fullscreen: "yes",
            location: "no",
            options: options
        });
        browser.on("loadstop").subscribe(function (event) {
            console.log("Stopeed");
            browser.insertCSS({ code: "toolbar{display: none;" });
        });
    };
    AddPharmaAppointmentPage.prototype.successCallback = function (response) {
        if (response.STATUS == "TXN_SUCCESS") {
            var txn_id = response.TXNID;
            var paymentmode = response.PAYMENTMODE;
            // other details and function after payment transaction
            console.log("payment succes ");
        }
        else {
            console.log("Transaction Failed for reason " + response.RESPMSG);
            console.log(response);
        }
    };
    AddPharmaAppointmentPage.prototype.failureCallback = function (error) {
        console.log("Transaction Failed for reason " + error.RESPMSG);
        console.log(error);
    };
    AddPharmaAppointmentPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-addpharmaappointment",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/addpharmaappointment/addpharmaappointment.html"*/'<!--\n  Generated template for the AddAppointmentPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Order Pharmachy</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="book-apmnt ordr-pharmacy pt-20 bg-fff">\n    <form class="cmn-form no-input-efct mb-20">\n      <!-- <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="facility"\n          [(ngModel)]="facilityCenterID"\n          (change)="getFacilityid($event.target.value)"\n        >\n          <option\n            *ngFor="let category of facilitiesArray; let idx = index"\n            [value]="category.facilityCenterID"\n            >{{ category.facilityCenterName }}</option\n          >\n        </select>\n        <label>Facility</label>\n      </div> -->\n\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="fcLocationName"\n          [disabled]="locationArray.length == 0"\n          [(ngModel)]="fcLocationMapID"\n          (change)="getlocationid($event.target.value)"\n        >\n          <option\n            *ngFor="let location of locationArray; let idx = index"\n            [value]="location.fcLocationMapID"\n            >{{ location.fcLocationName }}</option\n          >\n        </select>\n        <label>Location</label>\n      </div>\n\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          (click)="getAllMedicalStore()"\n          name="chemistName"\n          [disabled]="MedicalStoreArray.length == 0"\n          [(ngModel)]="fclProviderMapID"\n          (change)="getmedicalStoreID($event.target.value)"\n        >\n          <option\n            *ngFor="let medicalStore of MedicalStoreArray; let idx = index"\n            [value]="medicalStore.fclProviderMapID"\n            >{{ medicalStore.providerName }}</option\n          >\n        </select>\n        <label>Chemist</label>\n      </div>\n\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="fcLocationName"\n          [disabled]="locationArray.length == 0"\n          [(ngModel)]="fcLocationMapID"\n          (change)="getlocationid($event.target.value)"\n        >\n          <option\n            *ngFor="let location of locationArray; let idx = index"\n            [value]="location.fcLocationMapID"\n            >{{ location.fcLocationName }}</option\n          >\n        </select>\n        <label>Branch</label>\n      </div>\n\n      <div class="mdicne-rqird">\n        <label class="bmd-label-floating">Medicine Required</label>\n      </div>\n      <div class="floating-label cmn-select" [formGroup]="selectForm">\n        <select2\n          formControlName="MedicineRequired"\n          ngDefaultControl\n          name="MedicineRequired"\n          [(ngModel)]="drugcompundID"\n          [options]="options"\n          [width]="300"\n          (valueChanged)="getMedByPharmaID($event.data, drugcompundID)"\n        >\n          <option\n            *ngFor="let pharmaID of MedByPharmaArray; let idx = index"\n            [value]="pharmaID"\n            >{{ pharmaID.medicineName }}</option\n          >\n        </select2>\n      </div>\n\n      <div class="mt-10 clearfix odr-dtl-header">\n        <div class="apmn-rgt">\n          Total Medicines Cost :\n          <!-- <span><i>₹</i> 17.76</span> -->\n          <input\n            class="form-control"\n            type="number"\n            [(ngModel)]="finalmedcost"\n            name="totalmedicinecost"\n          />\n        </div>\n      </div>\n      <div class="cmn-list">\n        <div\n          class="cmn-apmnt-row clearfix"\n          *ngFor="let pharmaID of selectedMeds; let idx = index"\n        >\n          <div class="apmn-lft">\n            <img\n              src="assets/images/drugs-icon.png"\n              alt=""\n              width="20"\n              class="apmn-lft"\n            />\n            <div class="mdcin-dtl">\n              <div class="dr-name">{{ pharmaID.medicineName }}</div>\n              <!-- <div class="mdcin-cmpny">By ZYDUS CADILA HEALTHCARE LTD </div> -->\n              <div class="mdcin-price">\n                Cost Per Medicine:&nbsp;\n                <strong><i>₹</i>&nbsp;{{ pharmaID.costpermedicine }}</strong>\n              </div>\n              <div class="mdcin-qty-dtl">\n                Medicine Quantity:&nbsp;\n\n                <input\n                  type="number"\n                  id="medqua"\n                  name="{{pharmaID.medicineQuantity}}"\n                  [(ngModel)]="newmed[pharmaID.medicineName]"\n                  min="0"\n                  required\n                />\n                <!-- <div class="form-group" >\n         <label class="bmd-label-floating">Quantity</label>\n          <input\n            class="form-control"\n            type="number"\n            [(ngModel)]="costpermedicine"\n            name="quantity"\n          />\n          \n          <div\n          *ngFor="let pharmaID of selectedMeds; let idx = index">\n            {{pharmaID.medicineName}}\n            <input type="number" id="medqua" name="{{pharmaID.medicineQuantity}}" [(ngModel)]="newmed[pharmaID.medicineName]" min="0" required>\n            <div>\n                <p class="alert alert-success">\n              cost per medicine {{ pharmaID.medicineName }} is: Rs.{{ pharmaID.costpermedicine }}\n                  </p>\n            </div>\n            <div>\n                <p class="alert alert-success">\n              Total available quantity for{{ pharmaID.medicineName }} is:{{ pharmaID.medicineQuantity }}\n              </p>\n            </div>\n            </div>\n         \n        </div> -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Date of Appointment</label>\n          <ion-datetime\n            displayFormat="DD MMMM YYYY"\n            pickerFormat="DD MMMM YYYY"\n            name="date"\n            [(ngModel)]="patAppDate"\n          ></ion-datetime>\n          <span class="input-icon"><img src="assets/images/date.png"/></span>\n        </div>\n      </div>\n\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Time Of Appointment</label>\n          <ion-datetime\n            displayFormat="hh:mm a"\n            pickerFormat="hh:mm a"\n            [(ngModel)]="patAppTime"\n            name="timeFrom"\n          ></ion-datetime>\n          <span class="input-icon"><img src="assets/images/time.png"/></span>\n        </div>\n      </div> -->\n      <!-- <form > -->\n      <div class="floating-label cmn-select" [formGroup]="selectForm">\n        <label>Medicine Required</label>\n\n        <select2\n          formControlName="MedicineRequired"\n          ngDefaultControl\n          name="MedicineRequired"\n          [(ngModel)]="drugcompundID"\n          [options]="options"\n          [width]="500"\n          (valueChanged)="getMedByPharmaID($event.data, drugcompundID)"\n        >\n          <option\n            *ngFor="let pharmaID of MedByPharmaArray; let idx = index"\n            [value]="pharmaID"\n            >{{ pharmaID.medicineName }}</option\n          >\n        </select2>\n      </div>\n      <!-- </form> -->\n      <div class="form-group">\n        <label class="bmd-label-floating">Quantity</label>\n        <input\n          class="form-control"\n          type="number"\n          [(ngModel)]="costpermedicine"\n          name="quantity"\n        />\n\n        <div *ngFor="let pharmaID of selectedMeds; let idx = index">\n          {{pharmaID.medicineName}}\n          <input\n            type="number"\n            id="medqua"\n            name="{{pharmaID.medicineQuantity}}"\n            [(ngModel)]="newmed[pharmaID.medicineName]"\n            min="0"\n            required\n          />\n          <div>\n            <p class="alert alert-success">\n              cost per medicine {{ pharmaID.medicineName }} is: Rs.{{\n              pharmaID.costpermedicine }}\n            </p>\n          </div>\n          <div>\n            <p class="alert alert-success">\n              Total available quantity for{{ pharmaID.medicineName }} is:{{\n              pharmaID.medicineQuantity }}\n            </p>\n          </div>\n\n          <div *ngFor="let pharmaID of selectedMeds; let idx = index">\n            {{pharmaID.medicineName}}\n            <input\n              type="number"\n              id="medqua"\n              name="{{pharmaID.medicineQuantity}}"\n              [(ngModel)]="newmed[pharmaID.medicineName]"\n              min="0"\n              required\n            />\n            <div>\n              <p class="alert alert-success">\n                cost per medicine {{ pharmaID.medicineName }} is: Rs.{{\n                pharmaID.costpermedicine }}\n              </p>\n            </div>\n            <div>\n              <p class="alert alert-success">\n                Total available quantity for{{ pharmaID.medicineName }} is:{{\n                pharmaID.medicineQuantity }}\n              </p>\n            </div>\n          </div>\n        </div>\n        -->\n\n        <div class="offset-md-3 col-md-5 text-center mt-5">\n          <button type="button" class="btn btn-info" (click)="getQuantity();">\n            Generate Cost\n          </button>\n        </div>\n      </div>\n      <div class="offset-md-3 col-md-5 text-center">\n        <button type="button" class="btn btn-info" (click)="getQuantity();">\n          Generate Cost\n        </button>\n      </div>\n\n      <div class="form-group">\n        <label class="bmd-label-floating">Total Medicine Cost</label>\n        <input\n          class="form-control"\n          type="number"\n          [(ngModel)]="finalmedcost"\n          name="totalmedicinecost"\n        />\n      </div>\n\n      <!-- <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="visittype"\n          [(ngModel)]="visittypeId"\n          (change)="getvisittypeid($event.target.value)"\n        >\n          <option\n            *ngFor="let visit of visittypeArray; let idx = index"\n            [value]="visit.key"\n            >{{ visit.value }}</option\n          >\n        </select>\n        <label>Visit Type</label>\n      </div> -->\n\n      <!-- <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="deliveryType"\n          [(ngModel)]="deliveryType"\n          (change)="getdeliverytypeid($event.target.value)"\n        >\n          <option>Home Delivery</option>\n          <option>Pick-up</option>\n        </select>\n        <label>Delivery Type</label>\n      </div> -->\n\n      <div class="pl15 pr15 form-bb">\n        <div class="floating-label cmn-inpt">\n          <textarea\n            class="floating-input cmn-txtarea"\n            name="Desciption"\n            [(ngModel)]="patAppDescription"\n          ></textarea>\n          <label>Note</label>\n        </div>\n      </div>\n\n      <ion-list>\n        <ion-item>\n          <ion-label>COD (Cash On Delivery)</ion-label>\n          <ion-checkbox name="cod" (click)="addValue($event)"></ion-checkbox>\n        </ion-item>\n      </ion-list>\n\n      <div class="floating-label cmn-select">\n        <ion-label>Have Prescription ?</ion-label>\n        <div class="col-md-5">\n          <input\n            type="radio"\n            name="discounttype"\n            [(ngModel)]="checkpres"\n            value="Yes"\n            (click)="checkpresmethod()"\n          />\n          Yes &nbsp;\n          <input\n            type="radio"\n            name="discounttype"\n            [(ngModel)]="checkpres"\n            value="No"\n            (click)="checkpresmethod()"\n          />\n          No <br />\n        </div>\n      </div>\n\n      <div *ngIf="checkpres != \'No\' && checkpres != \'\'" class="w-100">\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Note</label>\n\n            <div class="pl15 pr15 form-bb">\n              <div class="form-group cmn-file-upld mb-0 pt-30">\n                <div class="filename"></div>\n                <input\n                  id="license-upld"\n                  type="file"\n                  class="form-control cmn-fl-input custom-file-input"\n                  value=""\n                />\n                <label\n                  (click)="buttonClickForChooseIDs(3)"\n                  class="custom-file-label bmd-label-floating"\n                  ><span class="lbl-txt">Upload File</span></label\n                >\n              </div>\n            </div>\n            <div class="preview-thumb pl15 pr15">\n              <div class="prvw-doc" *ngFor="let item of arrcertificates">\n                <img\n                  src="{{item}}"\n                  (click)="showPhoto(item)"\n                  class="prvw-doc"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class="form-button bg-gray pt-25 text-center">\n        <button class="btn cmn-thm-btn mr-25" (click)="callAddAppointmentApi()">\n          SAVE\n        </button>\n      </div>\n      -->\n\n      <div class="form-button bg-gray pt-25 text-center">\n        <button class="btn cmn-thm-btn mr-25" (click)="callAddAppointmentApi()">\n          MAKE PAYMENT\n        </button>\n        <button type="button" class="btn  cmn-wht-btn">CANCEL</button>\n      </div>\n    </form>\n  </div>\n  <script></script>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/addpharmaappointment/addpharmaappointment.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_4__angular_common__["d" /* DatePipe */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_5__ionic_native_in_app_browser__["a" /* InAppBrowser */],
            __WEBPACK_IMPORTED_MODULE_6__angular_forms__["a" /* FormBuilder */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_7__ionic_native_camera__["a" /* Camera */],
            __WEBPACK_IMPORTED_MODULE_8__ionic_native_image_picker__["a" /* ImagePicker */],
            __WEBPACK_IMPORTED_MODULE_9__ionic_native_photo_viewer__["a" /* PhotoViewer */],
            __WEBPACK_IMPORTED_MODULE_10__ionic_native_file__["a" /* File */],
            __WEBPACK_IMPORTED_MODULE_6__angular_forms__["a" /* FormBuilder */]])
    ], AddPharmaAppointmentPage);
    return AddPharmaAppointmentPage;
}());

//# sourceMappingURL=addpharmaappointment.js.map

/***/ }),

/***/ 688:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MyApp; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_status_bar__ = __webpack_require__(438);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_splash_screen__ = __webpack_require__(439);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_patient_patientprofile_patientprofile__ = __webpack_require__(279);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pages_doctor_doctorprofile_doctorprofile__ = __webpack_require__(241);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__pages_patient_appointmentlist_appointmentlist__ = __webpack_require__(137);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__pages_doctor_dash_board_for_doctor_dash_board_for_doctor__ = __webpack_require__(73);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__pages_patient_dash_board_for_patient_dash_board_for_patient__ = __webpack_require__(62);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__pages_commonpages_login_login__ = __webpack_require__(136);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__pages_doctor_doctorvisitlist_doctorvisitlist__ = __webpack_require__(138);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__pages_patient_patientdoctorvisitlist_patientdoctorvisitlist__ = __webpack_require__(141);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__pages_patient_patientlabreportlist_patientlabreportlist__ = __webpack_require__(142);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__pages_laboratory_laboratorydashboard_laboratorydashboard__ = __webpack_require__(99);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__pages_laboratory_labreport_labreport__ = __webpack_require__(143);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__pages_laboratory_labprofile_labprofile__ = __webpack_require__(261);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__pages_medicalstore_dash_board_for_medicalstore_dash_board_for_medicalstore__ = __webpack_require__(101);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__pages_medicalstore_incomingmedicinerequiredlist_incomingmedicinerequiredlist__ = __webpack_require__(284);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__pages_patient_patientbooklablist_patientbooklablist__ = __webpack_require__(273);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__pages_laboratory_labincomingappoinment_labincomingappoinment__ = __webpack_require__(259);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__pages_pharmadelivered_pharmadelivered__ = __webpack_require__(98);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__pages_patient_addpharmaappointment_addpharmaappointment__ = __webpack_require__(68);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__pages_patient_pharmaappointmentlist_pharmaappointmentlist__ = __webpack_require__(286);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__pages_patientreports_patientreports__ = __webpack_require__(139);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__pages_laboratory_reportfeeslist_reportfeeslist__ = __webpack_require__(265);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__pages_listmedicineinventory_listmedicineinventory__ = __webpack_require__(266);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__ionic_native_fcm__ = __webpack_require__(120);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__ionic_native_local_notifications__ = __webpack_require__(196);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






























// import { INotificationData } from "../../plugins/cordova-plugin-fcm-with-dependecy-updated/src/FCMPlugin.d";
var MyApp = /** @class */ (function () {
    function MyApp(platform, statusBar, splashScreen, toastCtrl, alertCtrl, fcm, localNotifications, api, events //public network:Network
    ) {
        var _this = this;
        this.platform = platform;
        this.statusBar = statusBar;
        this.splashScreen = splashScreen;
        this.toastCtrl = toastCtrl;
        this.alertCtrl = alertCtrl;
        this.fcm = fcm;
        this.localNotifications = localNotifications;
        this.api = api;
        this.events = events; //public network:Network
        this.rootPage = __WEBPACK_IMPORTED_MODULE_10__pages_commonpages_login_login__["a" /* LoginPage */];
        platform.ready().then(function () {
            //back button handle
            //Registration of push in Android and Windows Phone
            var lastTimeBackPress = 0;
            var timePeriodToExit = 2000;
            //login logout session manage by viral
            // this.username = localStorage.getItem(username);
            // this.currantuser =localStorage.getItem(this.currantuser);
            // console.log("print user name" +this.username);
            //   if(this.username!=null)
            //   {
            //     console.log("username not null");
            //     // this.nav.push(DashBoardForDoctorPage);
            //     this.nav.setRoot(DashBoardForDoctorPage);
            //     this.SetNavPages();
            //   }
            //   else{
            //     console.log("username null");
            //     // this.nav.push(LoginPage);
            //     this.nav.setRoot(LoginPage);
            //   }
            platform.registerBackButtonAction(function () {
                // get current active page
                var view = _this.nav.getActive();
                if (view.component.name == "LoginPage") {
                    //Double check to exit app
                    //     if (new Date().getTime() - lastTimeBackPress < timePeriodToExit) {
                    //       this.platform.exitApp(); //Exit from app
                    //     } else {
                    //       let toast = this.toastCtrl.create({
                    //         message: "Press back again to exit App",
                    //         duration: 3000,
                    //         position: "top"
                    //       });
                    //       toast.present();
                    //       lastTimeBackPress = new Date().getTime();
                    //     }
                    //   } else {
                    //     // go to previous page
                    //     this.nav.pop({});
                    //   }
                    _this.showAlert();
                }
                else {
                    _this.nav.pop();
                }
            });
        });
        this.initializeApp();
        events.subscribe("user:created", function (time) {
            _this.username = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_9__providers_commonfunction_commonfunction__["k" /* username */]);
            _this.perProfile = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_9__providers_commonfunction_commonfunction__["e" /* perProfile */]);
            // user and time are the same arguments passed in `events.publish(user, time)`
            console.log("Welcome", "at", time);
            _this.SetNavPages();
            _this.fcm.getToken().then(function (tokenN) {
                console.log("Get Token" + tokenN);
                alert("alertToken : " + tokenN);
                var body = {
                    userID: localStorage.getItem("fcmid"),
                    fcmtoken: tokenN
                };
                _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_9__providers_commonfunction_commonfunction__["a" /* APIName */].fcmbackend, body).then(function (resp) {
                    console.log("Respomse : " + resp);
                    var myObjStr = JSON.stringify(resp);
                    console.log("response:" + myObjStr);
                    // showToast("response : " + resp, this.toastCtrl);
                });
            });
            _this.fcm.onNotification().subscribe(function (resp) {
                // showToast("on notification call " + resp, this.toastCtrl);
                console.log("on notification call : ");
                console.log("Respomse : " + resp);
                var myObjStr = JSON.stringify(resp);
                console.log("response:" + myObjStr);
                alert("on notification" + myObjStr);
                _this.localNotifications.schedule({
                    // id: 1,
                    title: resp.title,
                    text: resp.body
                });
                //this.singlenotification();
                // if (resp.wasTapped) {
                //   showToast("Received in background", this.toastCtrl);
                //   console.log("Received in background");
                // } else {
                //   showToast("Received in foreground", this.toastCtrl);
                //   console.log("Received in foreground");
                // }
            });
            _this.fcm.onTokenRefresh().subscribe(function (tokenN) {
                console.log("Refresh Token" + tokenN);
                alert("alertToken : " + tokenN);
                var body = {
                    userID: localStorage.getItem("fcmid"),
                    fcmtoken: tokenN
                };
                _this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_9__providers_commonfunction_commonfunction__["a" /* APIName */].fcmbackend, body).then(function (resp) {
                    console.log("Respomse : " + resp);
                    var myObjStr = JSON.stringify(resp);
                    console.log("response:" + myObjStr);
                    // showToast("response : " + resp, this.toastCtrl);
                });
            });
        });
        // used for an example of ngFor and navigation
        this.pages = [
            { title: "Profile", component: __WEBPACK_IMPORTED_MODULE_4__pages_patient_patientprofile_patientprofile__["a" /* PatientprofilePage */], icon: "" },
            { title: "List Appointment", component: __WEBPACK_IMPORTED_MODULE_6__pages_patient_appointmentlist_appointmentlist__["a" /* AppointmentlistPage */], icon: "" }
        ];
    }
    MyApp.prototype.singlenotification = function () {
        console.log("singlenotification call...");
        this.localNotifications.schedule({
            id: 1,
            text: "Single ILocalNotification",
            icon: "http://codesolution.co.in/assets/images/code/codeicon.png"
        });
    };
    MyApp.prototype.showAlert = function () {
        var _this = this;
        var alert = this.alertCtrl.create({
            title: "Exit?",
            message: "Do you want to exit the app?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        alert = null;
                    }
                },
                {
                    text: "Exit",
                    handler: function () {
                        _this.platform.exitApp();
                    }
                }
            ]
        });
        alert.present();
    };
    MyApp.prototype.initializeApp = function () {
        this.statusBar.styleDefault();
        this.splashScreen.hide();
        // this.username = localStorage.getItem(username);
        // console.log("print user name" +this.username);
        //   if(this.username!=null)
        //   {
        //     console.log("username not null");
        //     // this.nav.push(DashBoardForDoctorPage);
        //     this.nav.setRoot(DashBoardForDoctorPage);
        //   }
        //   else{
        //     console.log("username null");
        //     // this.nav.push(LoginPage);
        //     this.nav.setRoot(LoginPage);
        //   }
        // });
    };
    MyApp.prototype.SetNavPages = function () {
        console.log("selectedRole in app.component = " + localStorage.getItem(__WEBPACK_IMPORTED_MODULE_9__providers_commonfunction_commonfunction__["f" /* selectedRole */]));
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_9__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
            this.pages = [
                {
                    title: "Profile",
                    component: __WEBPACK_IMPORTED_MODULE_5__pages_doctor_doctorprofile_doctorprofile__["a" /* DoctorprofilePage */],
                    icon: "assets/images/profile-ic.png"
                },
                {
                    title: "Dashboard",
                    component: __WEBPACK_IMPORTED_MODULE_7__pages_doctor_dash_board_for_doctor_dash_board_for_doctor__["a" /* DashBoardForDoctorPage */],
                    icon: "assets/images/dashboard.png"
                },
                {
                    title: "Appointments",
                    component: __WEBPACK_IMPORTED_MODULE_6__pages_patient_appointmentlist_appointmentlist__["a" /* AppointmentlistPage */],
                    icon: "assets/images/doctor-apmnt.png"
                },
                {
                    title: "Patient Visit",
                    component: __WEBPACK_IMPORTED_MODULE_11__pages_doctor_doctorvisitlist_doctorvisitlist__["a" /* DoctorvisitlistPage */],
                    icon: "assets/images/patient visit.png"
                },
                {
                    title: "Patient Report",
                    component: __WEBPACK_IMPORTED_MODULE_24__pages_patientreports_patientreports__["a" /* PatientreportsPage */],
                    icon: "assets/images/patient visit.png"
                }
                //{ title: "Add Doctor Visit", component: DoctorAddOrEditVisitPage }
            ];
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_9__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Laboratory") {
            // laboratory
            this.pages = [
                {
                    title: "Lab Profile",
                    component: __WEBPACK_IMPORTED_MODULE_16__pages_laboratory_labprofile_labprofile__["a" /* LabprofilePage */],
                    icon: "assets/images/profile-ic.png"
                },
                {
                    title: "Dashboard",
                    component: __WEBPACK_IMPORTED_MODULE_14__pages_laboratory_laboratorydashboard_laboratorydashboard__["a" /* LaboratorydashboardPage */],
                    icon: "assets/images/dashboard.png"
                },
                // {
                //   title: "video",
                //   component: VideoPage,
                //   icon: "assets/images/dashboard.png"
                // },
                {
                    title: "Patient Report",
                    component: __WEBPACK_IMPORTED_MODULE_15__pages_laboratory_labreport_labreport__["a" /* LabreportPage */],
                    icon: "assets/images/patient-report.png"
                },
                {
                    title: "Patient Appointments",
                    component: __WEBPACK_IMPORTED_MODULE_20__pages_laboratory_labincomingappoinment_labincomingappoinment__["a" /* LabincomingappoinmentPage */],
                    icon: "assets/images/patient-appointment.png"
                },
                {
                    title: "Report Fees",
                    component: __WEBPACK_IMPORTED_MODULE_25__pages_laboratory_reportfeeslist_reportfeeslist__["a" /* ReportfeeslistPage */],
                    icon: "assets/images/patient-appointment.png"
                }
                // { title: "Patient Report", component: LabreportPage },
                // { title: "Patient Appointments", component: LabincomingappoinmentPage },
                // { title: "Lab Add Report", component: LabaddreportPage },
                // { title: "Lab Profile", component: LabprofilePage },
            ];
            // { title: 'Lab Booking List', component: LabbookinglistPage }];
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_9__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Patient") {
            this.pages = [
                {
                    title: "Profile",
                    component: __WEBPACK_IMPORTED_MODULE_4__pages_patient_patientprofile_patientprofile__["a" /* PatientprofilePage */],
                    icon: "assets/images/profile-ic.png"
                },
                {
                    title: "Dashboard",
                    component: __WEBPACK_IMPORTED_MODULE_8__pages_patient_dash_board_for_patient_dash_board_for_patient__["a" /* DashBoardForPatientPage */],
                    icon: "assets/images/dashboard.png"
                },
                {
                    title: "Dr. Appointment",
                    component: __WEBPACK_IMPORTED_MODULE_6__pages_patient_appointmentlist_appointmentlist__["a" /* AppointmentlistPage */],
                    icon: "assets/images/doctor-apmnt.png"
                },
                {
                    title: "My Dr. Visit",
                    component: __WEBPACK_IMPORTED_MODULE_12__pages_patient_patientdoctorvisitlist_patientdoctorvisitlist__["a" /* PatientdoctorvisitlistPage */],
                    icon: "assets/images/doctor-visit.png"
                },
                {
                    title: "Lab Appointment",
                    component: __WEBPACK_IMPORTED_MODULE_19__pages_patient_patientbooklablist_patientbooklablist__["a" /* PatientbooklablistPage */],
                    icon: "assets/images/lab-apmnt.png"
                },
                {
                    title: "My Lab Report",
                    component: __WEBPACK_IMPORTED_MODULE_13__pages_patient_patientlabreportlist_patientlabreportlist__["a" /* PatientlabreportlistPage */],
                    icon: "assets/images/lab-report.png"
                },
                {
                    title: "Order Medicine",
                    component: __WEBPACK_IMPORTED_MODULE_22__pages_patient_addpharmaappointment_addpharmaappointment__["a" /* AddPharmaAppointmentPage */],
                    icon: "assets/images/doctor-apmnt.png"
                },
                // {
                //   title: "Order Details",
                //   component: PatientOrderDetailsPage,
                //   icon: "assets/images/doctor-apmnt.png"
                // },
                {
                    title: "My Order",
                    component: __WEBPACK_IMPORTED_MODULE_23__pages_patient_pharmaappointmentlist_pharmaappointmentlist__["a" /* PharmaAppointmentlistPage */],
                    icon: "assets/images/pharma-apmnt.png"
                }
                // {
                //   title: "Address Pin Location",
                //   component: AddpinlocationPage,
                //   icon: "assets/images/pharma-apmnt.png"
                // },
                // {
                //   title: "Pharma Delivered",
                //   component: PharmadeliveredPage,
                //   icon: "assets/images/pharma-delvry.png"
                // }
                // {
                //   title: "Map",
                //   component: MapdemoPage,
                //   icon: "assets/images/profile-ic.png"
                // },
                // {
                //   title: "AddresstoPinMap",
                //   component: AddresstopinmapPage,
                //   icon: "assets/images/profile-ic.png"
                // },
                // { title: 'Add Book Lab', component: AddbooklabPage }
            ];
            // { title: 'Hostpital Admit List', component: PatienthospitaladmitlistPage },
            // { title: 'Add Insurance', component: PatientaddinsurancePage },
            // { title: 'Insurance List', component: PatientinsurancelistPage },
            // { title: 'Claimed Insurance List', component: PatientclaimedinsurancelistPage },
            // { title: 'Medicine Bought List', component: PatientmedicineboughtlistPage },
            // { title: 'Tracking View', component: PatienttrackingPage }
            // hospital
            /*
                { title: 'Hospital Dashboard', component: DashBoardForHospitalPage },
                { title: 'Patient Admit List', component: HospitalpatientadmitlistPage },
                { title: 'Claimed Insurance List', component: HospitalclaimedinsuranceincomingapporvallistPage },
                { title: 'PatientAdmitForm', component: PatientadmitformPage },
                
                // insurance
                { title: 'Insurance Dashboard', component: DashBoardForInsurancePage },
                { title: 'Incoming Claim List', component: InsuranceincomingclaimlistPage },
                { title: 'Insurance Plan List', component: InsuranceplanlistPage },
                { title: 'Add Plan', component: AddplanPage },
                
                //medical store
                { title: 'Medical Store Dashboard', component: DashBoardForMedicalstorePage },
                { title: 'Incoming Medicine', component: IncomingmedicinerequiredlistPage },
                { title: 'Tracking', component: TrackingPage },
                */
            // Git Update
            // ];
            // } else {
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_9__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "MedicalCenter") {
            this.pages = [
                {
                    title: "Dashboard",
                    component: __WEBPACK_IMPORTED_MODULE_17__pages_medicalstore_dash_board_for_medicalstore_dash_board_for_medicalstore__["a" /* DashBoardForMedicalstorePage */],
                    icon: "assets/images/dashboard.png"
                },
                {
                    title: "Medicine Request",
                    component: __WEBPACK_IMPORTED_MODULE_18__pages_medicalstore_incomingmedicinerequiredlist_incomingmedicinerequiredlist__["a" /* IncomingmedicinerequiredlistPage */],
                    icon: "assets/images/pharma-apmnt.png"
                },
                // { title: "Tracking", component: TrackingPage },
                {
                    title: "Pharma Deliverd",
                    component: __WEBPACK_IMPORTED_MODULE_21__pages_pharmadelivered_pharmadelivered__["a" /* PharmadeliveredPage */],
                    icon: "assets/images/pharma-delvry.png"
                },
                {
                    title: "List Medicine Inventory",
                    component: __WEBPACK_IMPORTED_MODULE_26__pages_listmedicineinventory_listmedicineinventory__["a" /* ListmedicineinventoryPage */],
                    icon: "assets/images/pharma-apmnt.png"
                }
                // { title: 'Add Book Lab', component: AddbooklabPage }
            ];
        }
    };
    MyApp.prototype.openPage = function (page) {
        // Reset the content nav to have just this page
        // we wouldn't want the back button to show in this scenario
        this.nav.setRoot(page.component);
    };
    MyApp.prototype.logout = function () {
        localStorage.clear();
        this.nav.push(__WEBPACK_IMPORTED_MODULE_10__pages_commonpages_login_login__["a" /* LoginPage */]);
        this.nav.setRoot(__WEBPACK_IMPORTED_MODULE_10__pages_commonpages_login_login__["a" /* LoginPage */]);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* Nav */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* Nav */])
    ], MyApp.prototype, "nav", void 0);
    MyApp = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/app/app.html"*/'<ion-menu [content]="content">\n  <ion-header class="sdbr-mnu-hdr">\n    <ion-toolbar text-center>\n      <div class="userProfile-dtl">\n        <div class="userProfile">\n          <img src="{{perProfile}}" />\n        </div>\n        <!-- <h3>Mr. {{ username }}</h3> -->\n        <h3 class="pr-username">{{username}}</h3>\n        <!-- <span class="city-name">Seatle,USA</span> -->\n        <!-- <span>{{ profile }}</span> -->\n      </div>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content>\n    <ion-list class="sdbr-mnu">\n      <ion-item\n        menuClose\n        ion-item\n        *ngFor="let p of pages"\n        (click)="openPage(p)"\n      >\n        <img src="{{p.icon}}" />\n        {{ p.title }}\n      </ion-item>\n      <ion-item menuClose ion-item (click)="logout()">\n        <img src="assets/images/logout-ic.png" />\n        Logout\n      </ion-item>\n    </ion-list>\n  </ion-content>\n</ion-menu>\n\n<!-- Disable swipe-to-go-back because it\'s poor UX to combine STGB with side menus -->\n<ion-nav [root]="rootPage" #content swipeBackEnabled="false"></ion-nav>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/app/app.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_status_bar__["a" /* StatusBar */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_splash_screen__["a" /* SplashScreen */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_27__ionic_native_fcm__["a" /* FCM */],
            __WEBPACK_IMPORTED_MODULE_29__ionic_native_local_notifications__["a" /* LocalNotifications */],
            __WEBPACK_IMPORTED_MODULE_28__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["d" /* Events */] //public network:Network
        ])
    ], MyApp);
    return MyApp;
}());

//# sourceMappingURL=app.component.js.map

/***/ }),

/***/ 689:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ScrollableTabs; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ScrollableTabs = /** @class */ (function () {
    function ScrollableTabs(elemRef, renderer) {
        this.elemRef = elemRef;
        this.renderer = renderer;
        this.opts = {};
        this.tabs = [];
    }
    ScrollableTabs.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (changes.hasOwnProperty('opts')) {
            if (changes['opts'].currentValue.refresh) {
                setTimeout(function () {
                    _this.setAnchorStyles();
                    _this.scrollToselectedTab();
                }, 300);
            }
        }
    };
    ScrollableTabs.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.nativeTabbar = this.ionTabs._tabbar.nativeElement;
        this.tabs = this.ionTabs._tabs;
        this.currentTabIndex = typeof (this.ionTabs.selectedIndex) == "undefined" ? 0 : this.ionTabs.selectedIndex;
        this.ionTabs.ionChange.subscribe(function () {
            _this.scrollToselectedTab();
        });
        var _loop_1 = function (i) {
            this_1.tabs[i].ionSelect.subscribe(function () {
                _this.currentTabIndex = i;
            });
        };
        var this_1 = this;
        for (var i = 0; i < this.tabs.length; i++) {
            _loop_1(i);
        }
        // set tabbar overflow-x: scroll
        this.renderer.setElementStyle(this.nativeTabbar, "overflow-x", "scroll");
        // set tabbar overflow-y: hidden
        this.renderer.setElementStyle(this.nativeTabbar, "overflow-y", "hidden");
        this.setAnchorStyles();
        this.scrollToselectedTab();
    };
    ScrollableTabs.prototype.onResize = function (event) {
        var _this = this;
        this.setAnchorStyles();
        setTimeout(function () {
            _this.scrollToselectedTab();
        }, 300);
    };
    ScrollableTabs.prototype.setAnchorStyles = function () {
        if (typeof (this.nativeTabbar) != "undefined") {
            var tabBar_width = this.nativeTabbar.clientWidth;
            var numOfTabs = this.tabs.length;
            var numOfVisibleAnchors = 0;
            var sumOfVisibleAnchorWidth = 0;
            // loop through tab elements in tabs
            for (var i = 0; i < numOfTabs; i++) {
                var element = this.nativeTabbar.children[i];
                // when Tab visible (effecting show property)
                if (this.tabs[i]._isShown) {
                    numOfVisibleAnchors++;
                    // set <a> display: inline-table
                    this.renderer.setElementStyle(element, 'display', 'inline-table');
                    // set <a> width: 6rem
                    this.renderer.setElementStyle(element, 'width', '6rem');
                    // extra padding for title-only tags only
                    if (element.classList.contains("has-title-only")) {
                        // set <a> padding-top: 1.5rem
                        this.renderer.setElementStyle(element, 'padding-top', '1.5rem');
                    }
                    sumOfVisibleAnchorWidth += element.clientWidth;
                }
                else {
                    // set <a> display: none
                    this.renderer.setElementStyle(element, 'display', 'none');
                }
            }
            // to prevent extra space at end
            if (sumOfVisibleAnchorWidth < tabBar_width) {
                var anchorWidth = tabBar_width / numOfVisibleAnchors;
                for (var i = 0; i < numOfTabs; i++) {
                    var element = this.nativeTabbar.children[i];
                    // when Tab not not visible effecting show property
                    if (!element.classList.contains("tab-hidden")) {
                        this.renderer.setElementStyle(element, 'width', anchorWidth + 'px');
                    }
                }
            }
        }
    };
    ScrollableTabs.prototype.scrollToselectedTab = function () {
        if (typeof this.nativeTabbar != 'undefined') {
            var tabBar_width = this.nativeTabbar.clientWidth;
            var selectedTab = this.nativeTabbar.children[this.currentTabIndex];
            var selectedTab_Width = selectedTab.clientWidth;
            var selectedTab_LeftOffset = document.getElementById(selectedTab.id).offsetLeft;
            var selectedTab_mid = selectedTab_LeftOffset + (selectedTab_Width / 2);
            var newScrollLeft = selectedTab_mid - (tabBar_width / 2);
            this.scrollXTo(newScrollLeft, 300).then(function () { });
        }
    };
    ScrollableTabs.prototype.scrollXTo = function (x, duration) {
        if (duration === void 0) { duration = 300; }
        // scroll animation loop w/ easing
        var tabbar = this.nativeTabbar;
        if (!tabbar) {
            // invalid element
            return Promise.resolve();
        }
        x = x || 0;
        var originalRaf = (window[window['Zone']['__symbol__']('requestAnimationFrame')] || window[window['Zone']['__symbol__']('webkitRequestAnimationFrame')]);
        var nativeRaf = originalRaf !== undefined ? originalRaf['bind'](window) : window.requestAnimationFrame.bind(window);
        var fromX = tabbar.scrollLeft;
        var maxAttempts = (duration / 16) + 100;
        return new Promise(function (resolve) {
            var startTime;
            var attempts = 0;
            var isPlaying;
            // scroll loop
            function step() {
                attempts++;
                if (!tabbar || !isPlaying || attempts > maxAttempts) {
                    isPlaying = false;
                    resolve();
                    return;
                }
                var time = Math.min(1, ((Date.now() - startTime) / duration));
                // where .5 would be 50% of time on a linear scale easedT gives a
                // fraction based on the easing method
                var easedT = (--time) * time * time + 1;
                if (fromX !== x) {
                    tabbar.scrollLeft = Math.floor((easedT * (x - fromX)) + fromX);
                }
                if (easedT < 1) {
                    nativeRaf(step);
                }
                else {
                    // done
                    resolve();
                }
            }
            // start scroll loop
            isPlaying = true;
            // chill out for a frame first
            nativeRaf(function () {
                startTime = Date.now();
                nativeRaf(step);
            });
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('scrollable-tabs'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Tabs */])
    ], ScrollableTabs.prototype, "ionTabs", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])('opts'),
        __metadata("design:type", Object)
    ], ScrollableTabs.prototype, "opts", void 0);
    ScrollableTabs = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[scrollable-tabs]',
            host: {
                '(window:resize)': 'onResize($event)'
            }
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"], __WEBPACK_IMPORTED_MODULE_0__angular_core__["Renderer"]])
    ], ScrollableTabs);
    return ScrollableTabs;
}());

//# sourceMappingURL=scrollable-tabs.js.map

/***/ }),

/***/ 690:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ControlMessagesComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_validation_validation__ = __webpack_require__(440);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * Generated class for the ControlMessagesComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var ControlMessagesComponent = /** @class */ (function () {
    function ControlMessagesComponent() {
    }
    Object.defineProperty(ControlMessagesComponent.prototype, "errorMessage", {
        get: function () {
            for (var errorType in this.control.errors) {
                if (this.control.errors.hasOwnProperty(errorType) && this.control.touched) {
                    return __WEBPACK_IMPORTED_MODULE_2__providers_validation_validation__["a" /* ValidationProvider */].getValidatorErrorMessage(errorType, this.control.errors[errorType]);
                }
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_forms__["b" /* FormControl */])
    ], ControlMessagesComponent.prototype, "control", void 0);
    ControlMessagesComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'control-messages',
            template: "<div style=\"padding-left: 5%;float: left;color: red;\" *ngIf=\"errorMessage !== null\">{{errorMessage}}</div>"
        }),
        __metadata("design:paramtypes", [])
    ], ControlMessagesComponent);
    return ControlMessagesComponent;
}());

//# sourceMappingURL=control-messages-components.js.map

/***/ }),

/***/ 691:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PipesModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__trim_path_trim_path__ = __webpack_require__(692);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var PipesModule = /** @class */ (function () {
    function PipesModule() {
    }
    PipesModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [__WEBPACK_IMPORTED_MODULE_1__trim_path_trim_path__["a" /* TrimPathPipe */],
                __WEBPACK_IMPORTED_MODULE_1__trim_path_trim_path__["a" /* TrimPathPipe */]],
            imports: [],
            exports: [__WEBPACK_IMPORTED_MODULE_1__trim_path_trim_path__["a" /* TrimPathPipe */],
                __WEBPACK_IMPORTED_MODULE_1__trim_path_trim_path__["a" /* TrimPathPipe */]]
        })
    ], PipesModule);
    return PipesModule;
}());

//# sourceMappingURL=pipes.module.js.map

/***/ }),

/***/ 692:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrimPathPipe; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

/**
 * Generated class for the TrimPathPipe pipe.
 *
 * See https://angular.io/api/core/Pipe for more info on Angular Pipes.
 */
var TrimPathPipe = /** @class */ (function () {
    function TrimPathPipe() {
    }
    /**
     * Takes a value and makes it lowercase.
     */
    TrimPathPipe.prototype.transform = function (value) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        return value.replace(/^.*[\\\/]/, '');
    };
    TrimPathPipe = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({
            name: 'trimPath',
        })
    ], TrimPathPipe);
    return TrimPathPipe;
}());

//# sourceMappingURL=trim-path.js.map

/***/ }),

/***/ 73:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DashBoardForDoctorPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__patient_appointmentlist_appointmentlist__ = __webpack_require__(137);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__doctorvisitlist_doctorvisitlist__ = __webpack_require__(138);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patientreports_patientreports__ = __webpack_require__(139);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__transactionhistory_transactionhistory__ = __webpack_require__(140);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








/**
 * Generated class for the DashBoardForDoctorPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DashBoardForDoctorPage = /** @class */ (function () {
    function DashBoardForDoctorPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.appointmentlistcount = "";
        this.doctorvisitlistcount = "";
        this.patientreportlistcount = "";
        this.patientreportlist = [];
        this.transactionHistorycount = "";
        this.diagnosisMaster = [];
    }
    DashBoardForDoctorPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        console.log("ionViewDidLoad DashBoardForDoctorPage");
        //API for AppointmentList
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Patient") {
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, "").then(function (resp) {
                _this.appointmentlistcount = resp.data.totalNumber;
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, "").then(function (resp) {
                _this.appointmentlistcount = resp.data.totalNumber;
            });
        }
        //API for DoctorVisitList
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["a" /* APIName */].getDoctorVisitlist, "").then(function (resp) {
            _this.doctorvisitlistcount = resp.data.totalNumber;
        });
        //API for PatientReportList
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["a" /* APIName */].getpatientreports, "").then(function (resp) {
            _this.patientreportlist = resp.data.labReportPojo;
            // this.patientreportlistcount = this.patientreportlist.length();
        });
        //API for Transaction History
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_6__providers_commonfunction_commonfunction__["a" /* APIName */].getTransactionHistory, "").then(function (resp) {
            _this.transactionHistorycount = resp.data.totalNumber;
        });
    };
    DashBoardForDoctorPage.prototype.viewAppointmentList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__patient_appointmentlist_appointmentlist__["a" /* AppointmentlistPage */]);
    };
    DashBoardForDoctorPage.prototype.viewDoctorVisitList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__doctorvisitlist_doctorvisitlist__["a" /* DoctorvisitlistPage */]);
    };
    DashBoardForDoctorPage.prototype.viewPatientReportList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patientreports_patientreports__["a" /* PatientreportsPage */]);
    };
    DashBoardForDoctorPage.prototype.viewTransactionList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__transactionhistory_transactionhistory__["a" /* TransactionhistoryPage */]);
    };
    DashBoardForDoctorPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-dash-board-for-doctor",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/dash-board-for-doctor/dash-board-for-doctor.html"*/'<!--\n  Generated template for the DashBoardForDoctorPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Dashboard</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="page-content-white">\n    <div class="page-wrapper">\n      <div class="page-container">\n        <!-- start page content -->\n        <div class="page-content-wrapper home">\n          <div class="page-content">\n            <div class="page-bar clearfix">\n              <div class="page-title-breadcrumb">\n                <div class=" pull-left">\n                  <div class="page-title">Welcome to Health Chain</div>\n                </div>\n                <!-- <ol class="breadcrumb page-breadcrumb pull-right">\n                            <li><i class="fa fa-home"></i>&nbsp;<a class="parent-item" routerLink="/home">Home</a>&nbsp;<i class="fa fa-angle-right"></i>\n                            </li>\n                            <li class="active">Dashboard</li>\n                        </ol> -->\n              </div>\n            </div>\n            <!-- start widget -->\n            <div class="state-overview">\n              <div class="">\n                <div class="col-xl-4 col-md-6 col-12">\n                  <div class="info-box orange-bg info-dctr-vst-icon">\n                    <div class="info-box-content d-flex align-items-center">\n                      <span class="info-box-text">Appointments </span>\n                      <span class="info-box-number ml-auto"\n                        >{{ appointmentlistcount }}</span\n                      >\n                    </div>\n                    <!-- /.info-box-content -->\n                    <!-- <button ion-button color="calm" (click)="editItem(item.patAppointmentID)"></button> -->\n                    <button\n                      class="view-dtl-btn"\n                      (click)="viewAppointmentList()"\n                    >\n                      View Details\n                    </button>\n                  </div>\n                  <!-- /.info-box -->\n                </div>\n                .\n                <!-- /.col -->\n                <div class="col-xl-4 col-md-6 col-12">\n                  <div class="info-box pink-bg lab-report-icon">\n                    <div class="info-box-content d-flex align-items-center">\n                      <span class="info-box-text">\n                        Patient<br />\n                        Visit</span\n                      >\n                      <span class="info-box-number ml-auto"\n                        >{{ doctorvisitlistcount }}</span\n                      >\n                    </div>\n                    <!-- /.info-box-content -->\n                    <button\n                      class="view-dtl-btn"\n                      (click)="viewDoctorVisitList()"\n                    >\n                      View Details\n                    </button>\n                  </div>\n                  <!-- /.info-box -->\n                </div>\n                <!-- /.col -->\n                <div class="col-xl-4 col-md-6 col-12">\n                  <div class="info-box blue-bg pharma-delvers-icon">\n                    <div class="info-box-content d-flex align-items-center">\n                      <span class="info-box-text"\n                        >Patient <br />\n                        Report</span\n                      >\n                      <span class="info-box-number ml-auto"\n                        >{{ patientreportlist.length }}</span\n                      >\n                    </div>\n                    <!-- /.info-box-content -->\n                    <button\n                      class="view-dtl-btn"\n                      (click)="viewPatientReportList()"\n                    > \n                      View Details\n                    </button>\n                  </div>\n                  <!-- /.info-box -->\n                </div>\n                <!-- /.col -->\n                <div class="col-xl-4 col-md-6 col-12">\n                  <div class="info-box orange-bg info-dctr-vst-icon">\n                    <div class="info-box-content d-flex align-items-center">\n                      <span class="info-box-text"\n                        >Transaction <br />\n                        History\n                      </span>\n                      <span class="info-box-number ml-auto"\n                        >{{ transactionHistorycount }}</span\n                      >\n                    </div>\n                    <!-- /.info-box-content -->\n                    <!-- <button ion-button color="calm" (click)="editItem(item.patAppointmentID)"></button> -->\n                    <button\n                      class="view-dtl-btn"\n                      (click)="viewTransactionList()"\n                    >\n                      View Details\n                    </button>\n                  </div>\n                  <!-- /.info-box -->\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- end page content -->\n    </div>\n\n    <!-- include js -->\n  </div>\n</ion-content>\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/doctor/dash-board-for-doctor/dash-board-for-doctor.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_5__providers_api_api__["a" /* ApiProvider */]])
    ], DashBoardForDoctorPage);
    return DashBoardForDoctorPage;
}());

//# sourceMappingURL=dash-board-for-doctor.js.map

/***/ }),

/***/ 74:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddbooklabPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_common__ = __webpack_require__(14);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the AddbooklabPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddbooklabPage = /** @class */ (function () {
    function AddbooklabPage(navCtrl, navParams, api, datepipe, toastCtrl) {
        //
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.datepipe = datepipe;
        this.toastCtrl = toastCtrl;
        this.addressArray = [];
        this.locationArray = [];
        this.visittypeArray = [];
        this.labassistantArray = [];
        this.suggestedreportArray = [];
        this.visittypereasonarray = [];
        this.labAvailableArray = [];
        this.promocodeArray = [];
        this.labReportsLevel1 = [];
        this.labReportsLevelData = [];
        this.labReportLevel1ID = "";
        this.fclProviderMapID = "";
        this.facilityCenterID = "";
        this.fcLocationMapID = "";
        this.visittypeId = "";
        this.visittypereasonId = "";
        this.patAppDate = "";
        this.patAppTimeFrom = "";
        this.patAppTimeTo = "";
        this.patAppDescription = "";
        this.patVisitNoteID = "";
        this.patLabAppAmount = "";
        this.patLabAppointmentID = "";
        this.addressLine1 = "";
        this.coupounCode = "";
        this.feesAmount = "";
        this.cost = "";
        this.navobj = [];
        this.ischeckboxhomeactive = false;
        this.checked = false;
        this.titleheader = "";
        this.orderID = 0;
        this.custID = 0;
        this.txnAmount = "";
        console.log("this.flag :- " + this.navParams.get("flagType"));
        if (this.navParams.get("flagType") == 0) {
            this.flag = 0;
            this.navobj = this.navParams.get("obj");
            this.labReportsLevel1 = this.navobj.labReportsLevel1;
            this.patVisitNoteID = this.navParams.get("patvisitnoteid");
            console.log("helloooo=>", this.labReportsLevel1);
            for (var key in this.labReportsLevel1) {
                for (var subitem in this.labReportsLevel1[key]) {
                    if (subitem == "labReportLevel1ID") {
                        this.labReportsLevelData.push((_a = {},
                            _a[subitem] = this.labReportsLevel1[key][subitem],
                            _a));
                    }
                }
            }
            console.log("finalllabreportkey===>", this.labReportsLevelData);
            this.titleheader = "Add Book Lab";
        }
        else if (this.navParams.get("flagType") == 1) {
            this.flag = 1;
            //Edit from patientbooklablist
            this.navobj = this.navParams.get("obj");
            this.patLabAppointmentID = this.navobj.patLabAppointmentID;
            this.labReportsLevel1 = this.navobj.data;
            this.patVisitNoteID = this.navobj.patVisitNoteID;
            this.patAppDescription = this.navobj.patLabDetail;
            this.ischeckboxhomeactive = this.navobj.athome;
            this.patAppDate = this.changeStringToDate(new Date(this.navobj.patLabAppDate).toISOString());
            this.patAppTimeFrom = this.changeStringToDate(new Date(this.navobj.patLabAppTimeFrom).toISOString());
            this.patAppTimeTo = this.changeStringToDate(new Date(this.navobj.patLabAppTimeTo).toISOString());
            console.log("helloooo=>", this.labReportsLevel1);
            for (var key in this.labReportsLevel1) {
                for (var subitem in this.labReportsLevel1[key]) {
                    if (subitem == "labReportLevel1ID") {
                        this.labReportsLevelData.push((_b = {},
                            _b[subitem] = this.labReportsLevel1[key][subitem],
                            _b));
                    }
                }
            }
            console.log("finalllabreportkey===>", this.labReportsLevelData);
            // this.patAppDate =
            this.titleheader = "Edit Book Lab";
        }
        else if (this.navParams.get("flagType") == 2) {
            this.flag = 2;
            this.titleheader = "Add Book Lab";
        }
        else if (this.navParams.get("flagType") == 3) {
            this.flag = 3;
            //Edit from patientbooklablist
            this.navobj = this.navParams.get("obj");
            this.labReportsLevel1 = this.navobj.data;
            this.patVisitNoteID = this.navobj.patVisitNoteID;
            this.patAppDescription = this.navobj.patLabDetail;
            this.ischeckboxhomeactive = this.navobj.athome;
            this.patAppDate = this.changeStringToDate(new Date(this.navobj.patLabAppDate).toISOString());
            this.patAppTimeFrom = this.changeStringToDate(new Date(this.navobj.patLabAppTimeFrom).toISOString());
            this.patAppTimeTo = this.changeStringToDate(new Date(this.navobj.patLabAppTimeTo).toISOString());
            console.log("helloooo=>", this.labReportsLevel1);
            for (var key in this.labReportsLevel1) {
                for (var subitem in this.labReportsLevel1[key]) {
                    if (subitem == "labReportLevel1ID") {
                        this.labReportsLevelData.push((_c = {},
                            _c[subitem] = this.labReportsLevel1[key][subitem],
                            _c));
                    }
                }
            }
            console.log("finalllabreportkey===>", this.labReportsLevelData);
            // this.patAppDate =
            this.titleheader = "Re book Book Lab";
        }
        var _a, _b, _c;
        // this.visittype();
    }
    AddbooklabPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad AddbooklabPage");
        this.getallAddress();
        this.visittype();
        this.labvisittypereason();
    };
    /// Address////
    AddbooklabPage.prototype.getallAddress = function () {
        var _this = this;
        var data1 = {};
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllPatientLocation, data1)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.addressArray = resp.data.patAddressPojo;
                // this.add1 = this.addressArray.patAddressPojo;
                _this.addressLine1 = _this.addressArray[0].addressLine1;
                _this.getAddressid(_this.addressLine1);
            }
        });
    };
    AddbooklabPage.prototype.getAddressid = function (facilityid) {
        this.addressLine1 = facilityid;
        this.getallAvailableLab();
        console.log("addressID", "" + this.addressLine1);
    };
    /////Available lab/////
    AddbooklabPage.prototype.getallAvailableLab = function () {
        var _this = this;
        var data1 = {
            addressLine1: this.addressLine1
        };
        this.api
            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getLatLong, data1)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                _this.labAvailableArray = resp.data;
                // this.add1 = this.addressArray.patAddressPojo;
                _this.fcLocationMapID = _this.labAvailableArray[0].fcLocationMapID;
                // this.facilityProviderMapId = this.labAvailableArray[0].facilityProviderMapId;
                _this.getAvailableLab(_this.fcLocationMapID);
            }
        });
    };
    AddbooklabPage.prototype.getAvailableLab = function (facilityid) {
        this.fcLocationMapID = facilityid;
        this.getAllLabAssistant();
        console.log("availableID", "" + this.fcLocationMapID);
    };
    /// locations////
    AddbooklabPage.prototype.getAllLocations = function () {
        var _this = this;
        var data = {
            facilityCenterID: this.facilityCenterID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLocationByFacility, data)
            .then(function (resp) {
            _this.locationArray = resp.data;
            if (_this.locationArray.length > 0) {
                _this.fcLocationMapID = _this.locationArray[0].fcLocationMapID;
            }
            _this.getlocationid(_this.fcLocationMapID);
            // this.fcLocationMapID = this.locationArray[0].fcLocationMapID;
        });
    };
    AddbooklabPage.prototype.getlocationid = function (locationid) {
        this.fcLocationMapID = locationid;
        if (this.fcLocationMapID != "") {
            this.getAllLabAssistant();
        }
    };
    AddbooklabPage.prototype.getAllLabAssistant = function () {
        var _this = this;
        var data = {
            fcLocationMapID: this.fcLocationMapID
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllDoctorByLocationAndFacility, data)
            .then(function (resp) {
            console.log("getAllDoctorByLocationAndFacilityResp=========>", resp.data);
            _this.labassistantArray = resp.data;
            _this.fclProviderMapID = _this.labassistantArray[0].fclProviderMapID;
            _this.getlabassistantmapid(_this.fclProviderMapID);
        });
    };
    AddbooklabPage.prototype.getlabassistantmapid = function (locationid) {
        this.fclProviderMapID = locationid;
        this.getAllReportFacilityProvider();
    };
    AddbooklabPage.prototype.getAllReportFacilityProvider = function () {
        var _this = this;
        if (this.flag == 2) {
            var data = {
                fclProviderMapID: this.fclProviderMapID
            };
            console.log("getAllReportByFacilityProvider======>", data);
            this.api
                .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getReportByLab, data)
                .then(function (resp) {
                _this.labReportsLevel1 = resp.data.labReportMasterPojo;
                var dict = _this.labReportsLevel1[0];
                _this.labReportLevel1ID = _this.labReportsLevel1[0].labReportLevel1ID;
                _this.cost = _this.labReportsLevel1[0].costperreport;
                _this.getreportid(_this.labReportLevel1ID);
                // this.fcLocationMapID = this.locationArray[0].fcLocationMapID;
            });
        }
        else {
            console.log("getallreportcalleed");
            this.labReportLevel1ID = this.labReportsLevel1[0].labReportLevel1ID;
            this.getreportid(this.labReportLevel1ID);
        }
    };
    AddbooklabPage.prototype.getreportid = function (reportid) {
        this.labReportLevel1ID = reportid;
        this.visittype();
        this.promocodeList();
    };
    /// Apply Coupan Code ///
    AddbooklabPage.prototype.promocodeList = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAllCoupons, "")
            .then(function (resp) {
            _this.promocodeArray = resp.data;
            if (_this.promocodeArray.length > 0) {
                // this.coupounID = this.promocodeArray[0].coupounID;
                _this.coupounCode = _this.promocodeArray[0].coupounCode;
                _this.getapplypromocode(_this.coupounCode);
            }
            else {
                _this.coupounCode = "";
            }
        });
    };
    AddbooklabPage.prototype.getapplypromocode = function (promo) {
        this.coupounCode = promo;
        this.feesamount();
    };
    /// Fees Amount ///
    AddbooklabPage.prototype.feesamount = function () {
        var _this = this;
        var data = {
            coupounCode: this.coupounCode,
            patLabAppAmount: this.cost
        };
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].applyLabCouponCode, data)
            .then(function (resp) {
            _this.feesAmount = resp.data;
            _this.getfeesamount(_this.feesAmount);
        });
    };
    AddbooklabPage.prototype.getfeesamount = function (fees) {
        this.feesAmount = fees;
        // this.visitreason();
    };
    /// get visit type////
    AddbooklabPage.prototype.visittype = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentType, "")
            .then(function (resp) {
            _this.visittypeArray = resp.data;
            _this.visittypeId = _this.visittypeArray[0].key;
        });
    };
    AddbooklabPage.prototype.getvisittypeid = function (visitid) {
        this.visittypeId = visitid;
        this.labvisittypereason();
    };
    /// get visit type////
    AddbooklabPage.prototype.labvisittypereason = function () {
        var _this = this;
        this.api
            .wsPostHeaderBackground(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].labappointmentReson, "")
            .then(function (resp) {
            _this.visittypereasonarray = resp.data;
            _this.visittypereasonId = _this.visittypereasonarray[0].key;
        });
    };
    AddbooklabPage.prototype.getlabvisittypereasonid = function (visitreasonid) {
        this.visittypereasonId = visitreasonid;
    };
    AddbooklabPage.prototype.clickOnCheckBox = function () {
        // this.ischeckboxhomeactive = !this.ischeckboxhomeactive
        console.log(" state:" + this.ischeckboxhomeactive);
    };
    AddbooklabPage.prototype.callAddBookLabApi = function () {
        var _this = this;
        if (this.facilityCenterID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select facility", this.toastCtrl);
            return;
        }
        if (this.fcLocationMapID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Location", this.toastCtrl);
            return;
        }
        if (this.fclProviderMapID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select lab assistant", this.toastCtrl);
            return;
        }
        if (this.patAppDate.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment date", this.toastCtrl);
            return;
        }
        if (this.patAppTimeFrom.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment start time", this.toastCtrl);
            return;
        }
        if (this.patAppTimeTo.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select Appointment end time", this.toastCtrl);
            return;
        }
        if (this.labReportLevel1ID.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select suggested report", this.toastCtrl);
            return;
        }
        if (this.visittypeId.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select type Of Visit", this.toastCtrl);
            return;
        }
        if (this.visittypereasonId.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please select type Of Visit Reason", this.toastCtrl);
            return;
        }
        if (this.patAppDescription.length == 0) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please add detail Description", this.toastCtrl);
            return;
        }
        if (this.checked == false) {
            this.makePayment();
        }
        else {
            var data = void 0;
            if (this.flag == 2) {
                data = JSON.stringify({
                    fclProviderMapID: { fclProviderMapID: this.fclProviderMapID },
                    patLabAppDate: new Date().getTime(),
                    patLabAppTimeFrom: this.changeDateToMiliseconds(this.patAppDate + " " + this.patAppTimeFrom),
                    patLabAppTimeTo: this.changeDateToMiliseconds(this.patAppDate + " " + this.patAppTimeTo),
                    patAppType: this.visittypeId,
                    patientLabAppointmentReason: this.visittypereasonId,
                    patLabDetail: this.patAppDescription,
                    patAppStatus: "Pending",
                    labReportsLevel1: this.labReportsLevelData,
                    athome: this.ischeckboxhomeactive
                });
            }
            else if (this.flag == 1) {
                data = JSON.stringify({
                    patLabAppointmentID: this.patLabAppointmentID,
                    fclProviderMapID: { fclProviderMapID: this.fclProviderMapID },
                    patLabAppDate: new Date().getTime(),
                    patLabAppTimeFrom: this.changeDateToMiliseconds(this.patAppDate + " " + this.patAppTimeFrom),
                    patLabAppTimeTo: this.changeDateToMiliseconds(this.patAppDate + " " + this.patAppTimeTo),
                    patAppType: this.visittypeId,
                    patientLabAppointmentReason: this.visittypereasonId,
                    patLabDetail: this.patAppDescription,
                    patAppStatus: "Pending",
                    labReportsLevel1: this.labReportsLevelData,
                    athome: this.ischeckboxhomeactive
                });
            }
            else if (this.flag == 3) {
                data = JSON.stringify({
                    fclProviderMapID: { fclProviderMapID: this.fclProviderMapID },
                    patLabAppDate: new Date().getTime(),
                    patLabAppTimeFrom: this.changeDateToMiliseconds(this.patAppDate + " " + this.patAppTimeFrom),
                    patLabAppTimeTo: this.changeDateToMiliseconds(this.patAppDate + " " + this.patAppTimeTo),
                    patAppType: this.visittypeId,
                    patientLabAppointmentReason: this.visittypereasonId,
                    patLabDetail: this.patAppDescription,
                    patAppStatus: "Pending",
                    labReportsLevel1: this.labReportsLevelData,
                    athome: this.ischeckboxhomeactive
                });
            }
            else {
                data = JSON.stringify({
                    fclProviderMapID: { fclProviderMapID: this.fclProviderMapID },
                    patLabAppDate: new Date().getTime(),
                    patLabAppTimeFrom: this.changeDateToMiliseconds(this.patAppDate + " " + this.patAppTimeFrom),
                    patLabAppTimeTo: this.changeDateToMiliseconds(this.patAppDate + " " + this.patAppTimeTo),
                    patAppType: this.visittypeId,
                    patientLabAppointmentReason: this.visittypereasonId,
                    patLabDetail: this.patAppDescription,
                    patAppStatus: "Pending",
                    patVisitNote: {
                        patVisitNoteID: this.patVisitNoteID
                    },
                    labReportsLevel1: this.labReportsLevelData,
                    athome: this.ischeckboxhomeactive
                });
            }
            console.log("data====>", JSON.stringify(data));
            this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].addOrEditLab, data).then(function (resp) {
                if (resp.status === 500) {
                    // showToast( resp.error.message, this.toastCtrl)
                }
                else {
                    Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
                    _this.navCtrl.pop();
                }
            });
        }
        this.makePayment();
    };
    AddbooklabPage.prototype.addValue = function () {
        this.checked = !this.checked;
        console.log("checked: " + this.checked); //it is working !!!
    };
    ///to convert date and time////
    AddbooklabPage.prototype.changeDateToString = function (date, format //string
    ) {
        // this.changeStringToDate(this.selectedDate +' '+this.TimeFrom)
        var date1 = date.toISOString();
        // var date2 = this.changeStringToDate(date1,s)
        console.log("dateString=>", date1);
    };
    AddbooklabPage.prototype.changeStringToDate = function (dateString, format //date
    ) {
        if (format) {
            console.log("StringToDate==>", this.changeDateFormat(new Date(dateString), format));
            return this.changeDateFormat(new Date(dateString), format);
        }
        else {
            console.log("completeString=>>>>>>", dateString);
            // console.log('StringToDate==>', new Date(dateString).toISOString());
            return new Date(dateString).toISOString();
            // return new Date(dateString).getTime();
        }
    };
    AddbooklabPage.prototype.changeDateToMiliseconds = function (dateString) {
        console.log("MillisecondString=>>>>>>", dateString);
        return new Date(dateString).getTime();
    };
    AddbooklabPage.prototype.changeDateFormat = function (date, formate //date to any format
    ) {
        var latest_date = this.datepipe.transform(date, formate);
        console.log("ChangeDateFormat", latest_date);
        return latest_date;
    };
    AddbooklabPage.prototype.makePayment = function () {
        console.log("make PAyment");
        var min = 0;
        var max = 9999;
        var ORDER_ID = Math.floor(Math.random() * (+max - +min)) + +min;
        var CUST_ID = Math.floor(Math.random() * (+max + -min)) + +min;
        this.orderID = ORDER_ID;
        this.custID = CUST_ID;
        this.txnAmount = this.feesAmount;
        // this.navCtrl.loadUrl(url, { openExternal:true });
        window.open("http://client.attuneinfocom.com/paytm_payment_demo/pgRedirect.php?ORDER_ID=" +
            this.orderID +
            "&CUST_ID=" +
            this.custID +
            "&TXN_AMOUNT=" +
            this.txnAmount +
            "&redirect_url=patientBookLabList", "_self");
    };
    AddbooklabPage.prototype.successCallback = function (response) {
        if (response.STATUS == "TXN_SUCCESS") {
            var txn_id = response.TXNID;
            var paymentmode = response.PAYMENTMODE;
            // other details and function after payment transaction
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("payment succes ", this.toastCtrl);
        }
        else {
            // error code will be available in RESPCODE
            // error list page https://docs.google.com/spreadsheets/d/1h63fSrAmEml3CYV-vBdHNErxjJjg8-YBSpNyZby6kkQ/edit#gid=2058248999
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Transaction Failed for reason " + response.RESPMSG, this.toastCtrl);
            // showToast
        }
    };
    AddbooklabPage.prototype.failureCallback = function (error) {
        // error code will be available in RESCODE
        // error list page https://docs.google.com/spreadsheets/d/1h63fSrAmEml3CYV-vBdHNErxjJjg8-YBSpNyZby6kkQ/edit#gid=2058248999
        Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Transaction Failed for reason " + error.RESPMSG, this.toastCtrl);
    };
    AddbooklabPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-addbooklab",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/addbooklab/addbooklab.html"*/'<!--\n  Generated template for the AddbooklabPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>{{ titleheader }}</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <div class="book-apmnt pt-20 bg-fff">\n    <form class="cmn-form no-input-efct mb-20">\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="facilityCenterName"\n          [(ngModel)]="addressLine1"\n          (change)="getAddressid($event.target.value)"\n        >\n          <option\n            *ngFor="let category of addressArray; let idx = index"\n            [value]="category.addressLine1"\n            selected="{{ (idx == 0).addressLine1 }}"\n            >{{ category.addressLine1 }}</option\n          >\n        </select>\n        <label>Address</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="fcLocationName"\n          [disabled]="labAvailableArray.length == 0"\n          [(ngModel)]="fcLocationMapID"\n          (change)="getAvailableLab($event.target.value)"\n        >\n          <option\n            *ngFor="let location of labAvailableArray; let idx = index"\n            [value]="location.fcLocationMapID"\n            selected="{{ (idx == 0).fcLocationMapID }}"\n            >{{ location.facilityName+"-"+location.fcLocationName }}</option\n          >\n        </select>\n        <label>Available Lab</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="labassistantname"\n          [disabled]="labassistantArray.length == 0"\n          [(ngModel)]="fclProviderMapID"\n          (change)="getlabassistantmapid($event.target.value)"\n        >\n          <option\n            *ngFor="let labassist of labassistantArray; let idx = index"\n            [value]="labassist.fclProviderMapID"\n            selected="{{ (idx == 0).fclProviderMapID }}"\n            >{{ labassist.providerName }}</option\n          >\n        </select>\n        <label>Lab Assistant</label>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Date of Appointment</label>\n          <ion-datetime\n            displayFormat="DD MMMM YYYY"\n            pickerFormat="DD MMMM YYYY"\n            name="date"\n            [(ngModel)]="patAppDate"\n          ></ion-datetime>\n          <span class="input-icon"><img src="assets/images/date.png"/></span>\n        </div>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Time From</label>\n          <ion-datetime\n            displayFormat="hh:mm a"\n            pickerFormat="hh:mm a"\n            [(ngModel)]="patAppTimeFrom"\n            name="timeFrom"\n          ></ion-datetime>\n          <span class="input-icon"><img src="assets/images/time.png"/></span>\n        </div>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Time To</label>\n          <ion-datetime\n            displayFormat="hh:mm a"\n            pickerFormat="hh:mm a"\n            [(ngModel)]="patAppTimeTo"\n            name="timeTo"\n          ></ion-datetime>\n          <span class="input-icon"><img src="assets/images/time.png"/></span>\n        </div>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="suggestedreportname"\n          [disabled]="labReportsLevel1.length == 0"\n          [(ngModel)]="labReportLevel1ID"\n          (change)="getreportid($event.target.value)"\n        >\n          <option\n            *ngFor="let report of labReportsLevel1; let idx = index"\n            [value]="report.labReportLevel1ID"\n            selected="{{ (idx == 0).labReportLevel1ID }}"\n            >{{ report.reportName }}</option\n          >\n        </select>\n        <label>Sugggested Report</label>\n      </div>\n\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Cost Of selected report</label>\n          <input\n            type="number"\n            name="feesText"\n            [(ngModel)]="cost"\n            class="form-control"\n            readonly="true"\n          />\n        </div>\n      </div>\n\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          [(ngModel)]="coupounCode"\n          name="promocode"\n          (change)="getapplypromocode($event.target.value)"\n        >\n          <option\n            *ngFor="let promo of promocodeArray; let idx = index"\n            [value]="promo.coupounCode"\n            selected="{{ (idx == 0).coupounCode }}"\n            >{{ promo.coupounCode }}</option\n          >\n          <!-- selected="{{ (idx == 0).key }}" -->\n        </select>\n        <label>Apply Coupan Code</label>\n      </div>\n\n      <div class="pl15 pr15 form-bb">\n        <div class="form-group">\n          <label class="bmd-label-floating">Total Fees Amount </label>\n          <input\n            type="number"\n            name="amountToutal"\n            [(ngModel)]="feesAmount"\n            class="form-control"\n            readonly="true"\n          />\n        </div>\n      </div>\n\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="visittype"\n          [(ngModel)]="visittypeId"\n          (change)="getvisittypeid($event.target.value)"\n        >\n          <option\n            *ngFor="let visit of visittypeArray; let idx = index"\n            [value]="visit.key"\n            selected="{{ (idx == 0).key }}"\n            >{{ visit.value }}</option\n          >\n        </select>\n        <label>Visit Type</label>\n      </div>\n      <div class="floating-label cmn-select">\n        <select\n          class="floating-select form-control"\n          name="visittypereasonname"\n          [(ngModel)]="visittypereasonId"\n          [disabled]="visittypereasonarray.length == 0"\n          (change)="getlabvisittypereasonid($event.target.value)"\n        >\n          <option\n            *ngFor="\n              let visittypereason of visittypereasonarray;\n              let idx = index\n            "\n            [value]="visittypereason.key"\n            selected="{{ (idx == 0).key }}"\n            >{{ visittypereason.value }}</option\n          >\n        </select>\n        <label>Reason for Visit</label>\n      </div>\n      <div class="pl15 pr15 form-bb">\n        <div class="floating-label cmn-inpt">\n          <textarea\n            class="floating-input cmn-txtarea"\n            name="Desciption"\n            [(ngModel)]="patAppDescription"\n          ></textarea>\n          <label>Additional Detail</label>\n        </div>\n      </div>\n      <!-- <div class="avl-schdl">\n        <div class="scdl-ttl">Available Schedule</div>\n        <div class="cmn-checkbox mt-15">\n          <div class="form-check  d-inline-block">\n            <label class="form-check-label">\n              <input class="form-check-input" type="checkbox" name="schedule" />\n              At Home\n              <span class="form-check-sign">\n                <span class="check"></span>\n              </span>\n            </label>\n          </div>\n          <div class="form-check d-inline-block">\n            <label class="form-check-label">\n              <input class="form-check-input" type="checkbox" name="schedule" />\n              At Lab\n              <span class="form-check-sign">\n                <span class="check"></span>\n              </span>\n            </label>\n          </div>\n        </div>\n      </div> -->\n\n      <ion-list>\n        <ion-item>\n          <ion-label>COD (Cash On Delivery))</ion-label>\n          <ion-checkbox name="cod" (click)="addValue($event)"></ion-checkbox>\n        </ion-item>\n      </ion-list>\n\n      <div class="form-button bg-gray pt-25 text-center">\n        <button class="btn cmn-thm-btn mr-25" (click)="callAddBookLabApi()">\n          SAVE\n        </button>\n        <button type="button" class="btn  cmn-wht-btn">CANCEL</button>\n      </div>\n    </form>\n  </div>\n</ion-content>\n\n<!-- <div class="cmn-inr-form">\n  <ion-list>\n    <ion-item>\n      <ion-label color="" floating>Facility</ion-label>\n      <ion-select\n        [(ngModel)]="facilityCenterID"\n        (ionChange)="getFacilityid($event)"\n      >\n        <ion-option\n          *ngFor="let category of facilitiesArray; let idx = index"\n          [value]="category.facilityCenterID"\n          selected="{{ (idx == 0).facilityCenterID }}"\n          >{{ category.facilityCenterName }}</ion-option\n        >\n      </ion-select>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating>Location</ion-label>\n      <ion-select\n        [disabled]="locationArray.length == 0"\n        [(ngModel)]="fcLocationMapID"\n        (ionChange)="getlocationid($event)"\n      >\n        <ion-option\n          *ngFor="let location of locationArray; let idx = index"\n          [value]="location.fcLocationMapID"\n          selected="{{ (idx == 0).fcLocationMapID }}"\n          >{{ location.fcLocationName }}</ion-option\n        >\n      </ion-select>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating>Lab Assistant</ion-label>\n      <ion-select\n        [disabled]="labassistantArray.length == 0"\n        [(ngModel)]="fclProviderMapID"\n        (ionChange)="getlabassistantmapid($event)"\n      >\n        <ion-option\n          *ngFor="let labassist of labassistantArray; let idx = index"\n          [value]="labassist.fclProviderMapID"\n          selected="{{ (idx == 0).fclProviderMapID }}"\n          >{{ labassist.providerName }}</ion-option\n        >\n      </ion-select>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating>Date Of Appointment </ion-label>\n      <ion-datetime\n        displayFormat="DD MMMM YYYY"\n        pickerFormat="DD MMMM YYYY"\n        [(ngModel)]="patAppDate"\n      ></ion-datetime>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating>Time From</ion-label>\n      <ion-datetime\n        displayFormat="hh:mm a"\n        pickerFormat="hh:mm a"\n        [(ngModel)]="patAppTimeFrom"\n      ></ion-datetime>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating>Time To</ion-label>\n      <ion-datetime\n        displayFormat="hh:mm a"\n        pickerFormat="hh:mm a"\n        [(ngModel)]="patAppTimeTo"\n      ></ion-datetime>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating>Suggested Report</ion-label>\n      <ion-select\n        [disabled]="labReportsLevel1.length == 0"\n        [(ngModel)]="labReportLevel1ID"\n        (ionChange)="getreportid($event)"\n      >\n        <ion-option\n          *ngFor="let report of labReportsLevel1; let idx = index"\n          [value]="report.labReportLevel1ID"\n          selected="{{ (idx == 0).labReportLevel1ID }}"\n          >{{ report.lrl1Name }}</ion-option\n        >\n      </ion-select>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating>Visit Type</ion-label>\n      <ion-select\n        [(ngModel)]="visittypeId"\n        (ionChange)="getvisittypeid($event)"\n      >\n        <ion-option\n          *ngFor="let visit of visittypeArray; let idx = index"\n          [value]="visit.key"\n          selected="{{ (idx == 0).key }}"\n          >{{ visit.value }}</ion-option\n        >\n      </ion-select>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating>Reason for visit</ion-label>\n      <ion-select\n        [(ngModel)]="visittypereasonId"\n        [disabled]="visittypereasonarray.length == 0"\n        (ionChange)="getlabvisittypereasonid($event)"\n      >\n        <ion-option\n          *ngFor="\n            let visittypereason of visittypereasonarray;\n            let idx = index\n          "\n          [value]="visittypereason.key"\n          selected="{{ (idx == 0).key }}"\n          >{{ visittypereason.value }}</ion-option\n        >\n      </ion-select>\n    </ion-item>\n\n    <ion-item>\n      <ion-label color="" floating>Additional Detail</ion-label>\n      <ion-input\n        type="text"\n        name="Desciption"\n        [(ngModel)]="patAppDescription"\n      ></ion-input>\n    </ion-item>\n\n    <ion-item no-lines>\n      <ion-label>At Home</ion-label>\n      <ion-checkbox\n        [(ngModel)]="ischeckboxhomeactive"\n        (ionChange)="clickOnCheckBox()"\n      ></ion-checkbox>\n    </ion-item>\n\n    <div class="cmn-ftr-btn">\n      <button\n        (click)="callAddBookLabApi()"\n        ion-button\n        class="cmn-btn-styl prpl-btn"\n        block\n      >\n        Save\n      </button>\n    </div>\n  </ion-list>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/patient/addbooklab/addbooklab.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_4__angular_common__["d" /* DatePipe */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */]])
    ], AddbooklabPage);
    return AddbooklabPage;
}());

//# sourceMappingURL=addbooklab.js.map

/***/ }),

/***/ 97:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChangepasswordPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the ChangepasswordPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ChangepasswordPage = /** @class */ (function () {
    function ChangepasswordPage(navCtrl, toastCtrl, api, menuController) {
        this.navCtrl = navCtrl;
        this.toastCtrl = toastCtrl;
        this.api = api;
        this.menuController = menuController;
    }
    ChangepasswordPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ChangepasswordPage');
    };
    ChangepasswordPage.prototype.changePasswordBtn = function () {
        if (this.currentPwd == "" || this.currentPwd == undefined) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter current password", this.toastCtrl);
        } /*else if (this.currentPwd.length < 6) {
          showToast("Current passwords must be at least 6 characters long", this.toastCtrl);
        }*/
        else if (this.newPwd == "" || this.newPwd == undefined) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter new password", this.toastCtrl);
        }
        else if (this.newPwd.length < 6) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("New passwords must be at least 6 characters long", this.toastCtrl);
        }
        else if (this.newPwd == this.currentPwd) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Current password and New password should not be match", this.toastCtrl);
        }
        else if (this.confirmPwd == "" || this.confirmPwd == undefined) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Please enter confirm password", this.toastCtrl);
        }
        else if (this.confirmPwd.length < 6) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("Confirm passwords must be at least 6 characters long", this.toastCtrl);
        }
        else if (this.newPwd != this.confirmPwd) {
            Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])("New password and Confirm password does not match", this.toastCtrl);
        }
        else {
            var param = {
                "oldPassword": this.currentPwd,
                "userPassword": this.newPwd,
                "confirmpassword": this.newPwd
            };
            this.callChangePasswordService(param);
        }
    };
    ChangepasswordPage.prototype.callChangePasswordService = function (param) {
        var _this = this;
        console.log('param :- ' + JSON.stringify(param));
        this.api.wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].changePassword, param)
            .then(function (resp) {
            if (resp.status === 500) {
                // showToast( resp.error.message, this.toastCtrl)
            }
            else {
                console.log(resp);
                Object(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["j" /* showToast */])(resp.message, _this.toastCtrl);
            }
        });
    };
    ChangepasswordPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-changepassword',template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/commonpages/changepassword/changepassword.html"*/'<!--\n  Generated template for the ChangepasswordPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header> </ion-header>\n\n<ion-content>\n  <div class="tab-pane" id="Change-Password">\n    <div class="change-pwd">\n      <form class="cmn-form no-input-efct mb-20 bg-fff">\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Current Password</label>\n            <input\n              type="password"\n              name="Cpassword"\n              [(ngModel)]="currentPwd"\n              class="form-control"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">New Password</label>\n            <input\n              type="password"\n              name="Npassword"\n              [(ngModel)]="newPwd"\n              class="form-control"\n            />\n          </div>\n        </div>\n        <div class="pl15 pr15 form-bb">\n          <div class="form-group">\n            <label class="bmd-label-floating">Confirm Password</label>\n            <input\n              type="password"\n              name="confPassword"\n              [(ngModel)]="confirmPwd"\n              class="form-control"\n            />\n          </div>\n        </div>\n        <div class="form-button bg-gray pt-25 text-center">\n          <button class="btn cmn-thm-btn mr-25" (click)="changePasswordBtn()">\n            Change Password\n          </button>\n          <!-- <button type="button" class="btn  cmn-wht-btn">CANCEL</button> -->\n        </div>\n      </form>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <ion-item>\n  <ion-label floating>Current Password</ion-label>\n  <ion-input [(ngModel)]="currentPwd" type="password" ></ion-input>\n</ion-item>\n<ion-item>\n  <ion-label floating>New Password</ion-label>\n  <ion-input [(ngModel)]="newPwd" type="password" ></ion-input>\n</ion-item>\n<ion-item>\n  <ion-label floating>Confirm Password</ion-label>\n  <ion-input [(ngModel)]="confirmPwd" type="password" ></ion-input>\n</ion-item>\n\n<div padding>\n  <div padding>\n    <button ion-button type="submit" (click)="changePasswordBtn()" block>Change Password</button>\n  </div>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/commonpages/changepassword/changepassword.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_2__providers_api_api__["a" /* ApiProvider */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* MenuController */]])
    ], ChangepasswordPage);
    return ChangepasswordPage;
}());

//# sourceMappingURL=changepassword.js.map

/***/ }),

/***/ 98:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return PharmadeliveredPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_common__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__ = __webpack_require__(35);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__patient_editappointment_editappointment__ = __webpack_require__(39);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__patient_viewappointment_viewappointment__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__patient_rebookappointment_rebookappointment__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_api_api__ = __webpack_require__(3);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the PharmadeliveredPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var PharmadeliveredPage = /** @class */ (function () {
    function PharmadeliveredPage(navCtrl, navParams, api, alertCtrl, datepipe) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.alertCtrl = alertCtrl;
        this.datepipe = datepipe;
        this.appointmentTodayItemes = [];
        this.currentAppointlist = [];
        this.pharmadeliveredlist = [];
        this.currentAppointlist = this.appointmentTodayItemes;
        this.selectRole = localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]);
        if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Patient") {
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getpharmadelivered, "").then(function (resp) {
                // this.appointmentTodayItemes=resp.data.patAppointmentPojo;
                // this.currentAppointlist=resp.data.patAppointmentPojo;
                _this.pharmadeliveredlist = resp.data.pharmapojolist;
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "Doctor") {
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getpharmadelivered, "").then(function (resp) {
                _this.appointmentTodayItemes = resp.data.patAppointmentPojo;
                _this.currentAppointlist = resp.data.patAppointmentPojo;
            });
        }
        else if (localStorage.getItem(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["f" /* selectedRole */]) == "MedicalCenter") {
            this.api.wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getpharmadeliverdpharma, "").then(function (resp) {
                _this.pharmadeliveredlist = resp.data.pharmapojolist;
            });
        }
    }
    PharmadeliveredPage.prototype.ionViewDidLoad = function () {
        console.log("ionViewDidLoad PharmadeliveredPage");
    };
    PharmadeliveredPage.prototype.addItem = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__patient_addappointment_addappointment__["a" /* AddappointmentPage */]);
    };
    PharmadeliveredPage.prototype.editItem = function (id) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__patient_editappointment_editappointment__["a" /* EditappointmentPage */], { patAppointmentID: id });
    };
    PharmadeliveredPage.prototype.changeItem = function (stateInt) {
        switch (stateInt) {
            case 1:
                this.currentAppointlist = this.appointmentTodayItemes;
                break;
            default:
        }
    };
    PharmadeliveredPage.prototype.openItem = function (item) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__patient_viewappointment_viewappointment__["a" /* ViewappointmentPage */], { item: item });
    };
    PharmadeliveredPage.prototype.Canceled = function (data) {
        var _this = this;
        console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to cancel?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        console.log("Cancel clicked");
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            patientAppointmentStatus: "Cancel",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        console.log(JSON.stringify(passParam));
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                            }
                            else {
                                _this.api
                                    .wsGetBG(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, "")
                                    .then(function (resp) {
                                    _this.appointmentTodayItemes =
                                        resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PharmadeliveredPage.prototype.checkNulldata = function (data) {
        if (data.fclProviderMapID === null) {
            data.fclProviderMapID = "";
        }
        if (data.specialityID === null) {
            data.specialityID = "";
        }
        if (data.patAppDate === null) {
            data.patAppDate = 1524123001;
        }
        if (data.patAppTimeFrom === null) {
            data.patAppTimeFrom = 1524123001;
        }
        if (data.patAppTimeTo === null) {
            data.patAppTimeTo = 1524123001;
        }
        if (data.patAppType === null) {
            data.patAppType = "New";
        }
        if (data.patAppReason === null) {
            data.patAppReason = "BP";
        }
        if (data.patAppDescription === null) {
            data.patAppDescription = "dsfdsfdf";
        }
        return data;
    };
    PharmadeliveredPage.prototype.Rejected = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to reject?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            patientAppointmentStatus: "Rejected",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                            }
                            else {
                                _this.api
                                    .wsGetBG(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, "")
                                    .then(function (resp) {
                                    _this.appointmentTodayItemes =
                                        resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PharmadeliveredPage.prototype.Approved = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to approve?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () { }
                },
                {
                    text: "Ok",
                    handler: function () {
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            patientAppointmentStatus: "Approved",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                            }
                            else {
                                _this.api
                                    .wsGetBG(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentDoctor, "")
                                    .then(function (resp) {
                                    _this.appointmentTodayItemes =
                                        resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PharmadeliveredPage.prototype.Edit = function (data) {
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to edit?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                    }
                }
            ]
        });
        alert.present();
    };
    PharmadeliveredPage.prototype.Cancel = function (data) {
        var _this = this;
        //console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to cancel?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () {
                        //console.log('Cancel clicked');
                    }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var passParam = {
                            patientAppointmentStatus: "Cancel",
                            id: d.patAppointmentID,
                            description: ""
                        };
                        _this.api
                            .wsPostHeader(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].appointmentStatusChange, passParam)
                            .then(function (resp) {
                            if (resp.status === 500) {
                            }
                            else {
                                _this.api
                                    .wsGet(__WEBPACK_IMPORTED_MODULE_3__providers_commonfunction_commonfunction__["a" /* APIName */].getAppointmentPatient, "")
                                    .then(function (resp) {
                                    _this.appointmentTodayItemes =
                                        resp.data.patAppointmentPojo;
                                    _this.currentAppointlist = resp.data.patAppointmentPojo;
                                });
                            }
                        });
                    }
                }
            ]
        });
        alert.present();
    };
    PharmadeliveredPage.prototype.ReBook = function (data) {
        var _this = this;
        // console.log(data);
        var alert = this.alertCtrl.create({
            title: "Alert",
            message: "Are you sure you want to re-book?",
            buttons: [
                {
                    text: "Cancel",
                    role: "cancel",
                    handler: function () { }
                },
                {
                    text: "Ok",
                    handler: function () {
                        console.log("Ok clicked");
                        var d = _this.checkNulldata(data);
                        var id = d.patAppointmentID;
                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__patient_rebookappointment_rebookappointment__["a" /* RebookappointmentPage */], { patAppointmentID: id });
                    }
                }
            ]
        });
        alert.present();
    };
    PharmadeliveredPage.prototype.changeStringToDate = function (dateString, format) {
        if (format) {
            console.log("StringToDate==>", this.changeDateFormat(new Date(dateString), format));
            return this.changeDateFormat(new Date(dateString), format);
        }
        else {
            console.log("completeString=>>>>>>", dateString);
            console.log("StringToDate==>", new Date(dateString).toISOString());
            return new Date(dateString).toISOString();
        }
    };
    //date to any format
    PharmadeliveredPage.prototype.changeDateFormat = function (date, formate) {
        var latest_date = this.datepipe.transform(date, formate);
        console.log("ChangeDateFormat", latest_date);
        return latest_date;
    };
    PharmadeliveredPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-pharmadelivered",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/pharmadelivered/pharmadelivered.html"*/'<!--\n  Generated template for the AppointmentlistPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Pharma Delivered</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <div class="cmn-list-page">\n    <div *ngIf="selectRole == \'Patient\'">\n      <div\n        class="cmn-apmnt-row clearfix"\n        #slidingItem\n        *ngFor="let item of pharmadeliveredlist"\n      >\n        <div class="apmn-lft">\n          <div class="dr-name">{{ item.providerName }}</div>\n          <div class="dr-adrs">\n            <img src="assets/images/location.png" />\n            {{ item.facilityCenterName }} {{ item.facilityCenterType }} - {{\n            item.fcLocationName }}\n          </div>\n          <div class="vst-type">\n            {{ item.medname }}\n          </div>\n          <div class="vst-type">\n            {{ item.visittype }}\n          </div>\n        </div>\n        <div class="apmn-rgt pt0">\n          <div class="dctr-vst-dt">\n            {{ item.apptdate | date: "dd/MM/yyyy" }}<span class="apmn-time"\n              >{{ item.patAppTimeTo | date: "shortTime" }}</span\n            >\n          </div>\n\n          <div *ngIf="item.status == \'Approved\'" class="apmn-rgt">\n            <span class="apmnt-lbl accepted">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div *ngIf="item.status == \'Cancel\'" class="apmn-rgt">\n            <span class="apmnt-lbl cancelled">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div *ngIf="item.status == \'Rejected\'" class="apmn-rgt">\n            <span class="apmnt-lbl rejected">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div *ngIf="item.status == \'Pending\'" class="apmn-rgt">\n            <span class="apmnt-lbl pending">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div *ngIf="item.status == \'Completed\'" class="apmn-rgt">\n            <span\n              class="apmnt-lbl accepted                                    "\n            >\n              {{ item.status }}\n            </span>\n          </div>\n\n          <!-- <div class="apmn-rgt">\n            <span class="apmnt-lbl accepted">\n              {{ item.status }}\n            </span>\n          </div> -->\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf="selectRole == \'MedicalCenter\'">\n      <div\n        class="cmn-apmnt-row clearfix"\n        #slidingItem\n        *ngFor="let item of pharmadeliveredlist"\n      >\n        <div class="apmn-lft">\n          <div class="dr-name">{{ item.patientName }}</div>\n          <!-- <div class="dr-adrs">\n              <img src="assets/images/location.png" />\n              {{ item.facilityCenterName }} {{ item.facilityCenterType }} -\n              {{ item.fcLocationName }}\n            </div> -->\n          <div class="vst-type">\n            {{ item.medname }}\n          </div>\n          <div class="vst-type">\n            {{ item.visittype }}\n          </div>\n          <div class="dctr-vst-dt">\n            {{ item.apptdate | date: "dd/MM/yyyy" }}<span class="apmn-time"\n              >{{ item.patAppTimeTo | date: "shortTime" }}</span\n            >\n          </div>\n        </div>\n        <div class="apmn-rgt pt0">\n          <div *ngIf="item.status == \'Approved\'" class="apmn-rgt">\n            <span class="apmnt-lbl accepted">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div *ngIf="item.status == \'Cancel\'" class="apmn-rgt">\n            <span class="apmnt-lbl cancelled">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div *ngIf="item.status == \'Rejected\'" class="apmn-rgt">\n            <span class="apmnt-lbl rejected">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div *ngIf="item.status == \'Pending\'" class="apmn-rgt">\n            <span class="apmnt-lbl pending">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div *ngIf="item.status == \'Completed\'" class="apmn-rgt">\n            <span\n              class="apmnt-lbl accepted                                    "\n            >\n              {{ item.status }}\n            </span>\n          </div>\n\n          <!-- <div class="apmn-rgt">\n            <span class="apmnt-lbl accepted">\n              {{ item.status }}\n            </span>\n          </div> -->\n        </div>\n      </div>\n    </div>\n\n    <div *ngIf="selectRole == \'Doctor\'">\n      <div\n        class="cmn-apmnt-row clearfix"\n        #slidingItem\n        *ngFor="let item of currentAppointlist"\n      >\n        <div class="apmn-lft">\n          <div class="dr-name">{{ item.name }}</div>\n          <div class="dr-adrs">\n            <img src="assets/images/location.png" />\n            {{ item.facilityCenterName }} {{ item.facilityCenterType }} - {{\n            item.fcLocationName }}\n          </div>\n          <div class="vst-type">\n            {{ item.medname }}\n          </div>\n          <div class="vst-type">\n            {{ item.visittype }}\n          </div>\n        </div>\n        <div class="apmn-rgt pt0">\n          <div class="dctr-vst-dt">\n            {{ item.apptdate | date: "dd/MM/yyyy" }}<span class="apmn-time"\n              >{{ item.patAppTimeTo | date: "shortTime" }}</span\n            >\n          </div>\n\n          <div *ngIf="item.status == \'Approved\'" class="apmn-rgt">\n            <span class="apmnt-lbl accepted">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div *ngIf="item.status == \'Cancel\'" class="apmn-rgt">\n            <span class="apmnt-lbl cancelled">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div *ngIf="item.status == \'Rejected\'" class="apmn-rgt">\n            <span class="apmnt-lbl rejected">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div *ngIf="item.status == \'Pending\'" class="apmn-rgt">\n            <span class="apmnt-lbl pending">\n              {{ item.status }}\n            </span>\n          </div>\n\n          <div *ngIf="item.status == \'Completed\'" class="apmn-rgt">\n            <span\n              class="apmnt-lbl accepted                                    "\n            >\n              {{ item.status }}\n            </span>\n          </div>\n\n          <!-- <div class="apmn-rgt">\n            <span class="apmnt-lbl accepted">\n              {{ item.patAppStatus }}\n            </span>\n          </div> -->\n        </div>\n      </div>\n    </div>\n  </div>\n</ion-content>\n\n<!-- <div class="cmn-list-page">\n  <div class="cmn-tab-dsgn"></div>\n\n  <ion-list class="cmn-tb-cntnt" *ngIf="selectRole == \'Patient\'">\n    <ion-item-sliding #slidingItem *ngFor="let item of pharmadeliveredlist">\n      <ion-item>\n        <div class="ptnt-name">{{ item.providerName }}</div>\n        <div class="rson-fr-meet">\n          {{ item.facilityCenterName }} {{ item.facilityCenterType }} -\n          {{ item.fcLocationName }}\n        </div>\n        <div class="apmnt-tm">\n          {{ item.apptdate | date: "dd/MM/yyyy" }}\n          {{ item.patAppTimeTo | date: "shortTime" }}\n        </div>\n        <div class="apmnt-status">{{ item.status }}</div>\n        <div class="apmnt-medicinename">{{ item.medname }}</div>\n        <div class="pharma-visit">{{ item.visittype }}</div>\n      </ion-item>\n    </ion-item-sliding>\n  </ion-list>\n\n  <ion-list class="cmn-tb-cntnt" *ngIf="selectRole == \'MedicalCenter\'">\n    <ion-item-sliding #slidingItem *ngFor="let item of pharmadeliveredlist">\n      <ion-item>\n        <div class="ptnt-name">{{ item.patientName }}</div>\n        <div class="apmnt-tm">\n          {{ item.apptdate | date: "dd/MM/yyyy" }}\n          {{ item.patAppTimeTo | date: "shortTime" }}\n        </div>\n        <div class="apmnt-status">{{ item.status }}</div>\n        <div class="apmnt-medicinename">{{ item.medname }}</div>\n        <div class="pharma-visit">{{ item.visittype }}</div>\n      </ion-item>\n    </ion-item-sliding>\n  </ion-list>\n\n  <ion-list class="cmn-tb-cntnt" *ngIf="selectRole == \'Doctor\'">\n    <ion-item-sliding #slidingItem *ngFor="let item of currentAppointlist">\n      <div class="ptnt-name">{{ item.name }}</div>\n      <div class="rson-fr-meet">{{ item.patAppReason }}</div>\n      <div class="apmnt-tm">\n        {{ item.apptdate | date: "dd/MM/yyyy" }}\n        {{ item.patAppTimeTo | date: "shortTime" }}\n      </div>\n      <div class="apmnt-status">{{ item.patAppStatus }}</div>\n      <div class="apmnt-medicinename">{{ item.medname }}</div>\n      <div class="pharma-visit">{{ item.visittype }}</div>\n    </ion-item-sliding>\n  </ion-list>\n</div> -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/pharmadelivered/pharmadelivered.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_8__providers_api_api__["a" /* ApiProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["b" /* AlertController */],
            __WEBPACK_IMPORTED_MODULE_2__angular_common__["d" /* DatePipe */]])
    ], PharmadeliveredPage);
    return PharmadeliveredPage;
}());

//# sourceMappingURL=pharmadelivered.js.map

/***/ }),

/***/ 99:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LaboratorydashboardPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__labreport_labreport__ = __webpack_require__(143);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_api_api__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__labtransactionhistory_labtransactionhistory__ = __webpack_require__(239);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the LaboratorydashboardPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LaboratorydashboardPage = /** @class */ (function () {
    function LaboratorydashboardPage(navCtrl, navParams, api) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.api = api;
        this.viewPatientReportListCount = "";
        this.appointmentTodayItems = [];
        this.currentLabReportList = [];
        this.transactionHistorycount = "";
    }
    LaboratorydashboardPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        console.log("ionViewDidLoad LaboratorydashboardPage");
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLabReportWithoutBook, "").then(function (resp) {
            _this.appointmentTodayItems = resp.data.labReportPojo;
            _this.viewPatientReportListCount = resp.data.totalNumber;
        });
        //API for Transaction History
        this.api.wsGet(__WEBPACK_IMPORTED_MODULE_4__providers_commonfunction_commonfunction__["a" /* APIName */].getAllLabTransaction, "").then(function (resp) {
            _this.appointmentTodayItems = resp.data.patLabAppointmentsPojo;
            _this.transactionHistorycount = resp.data.totalNumber;
        });
    };
    // API for PatientReportList
    LaboratorydashboardPage.prototype.viewPatientReportList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__labreport_labreport__["a" /* LabreportPage */]);
    };
    LaboratorydashboardPage.prototype.viewTransactionList = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__labtransactionhistory_labtransactionhistory__["a" /* LabtransactionhistoryPage */]);
    };
    LaboratorydashboardPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: "page-laboratorydashboard",template:/*ion-inline-start:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/laboratorydashboard/laboratorydashboard.html"*/'<!--\n  Generated template for the LaboratorydashboardPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle left>\n      <ion-icon name="" class="toggleMenu"></ion-icon>\n    </button>\n    <ion-title>Dashboard</ion-title>\n    <ion-buttons right>\n      <button ion-button icon-only>\n        <ion-icon name="" class="notification-icon"\n          ><span class="ntfctn-dot"></span\n        ></ion-icon>\n      </button>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <div class="page-content-white">\n    <div class="page-wrapper">\n      <div class="page-container">\n        <!-- start page content -->\n        <div class="page-content-wrapper home">\n          <div class="page-content">\n            <div class="page-bar clearfix">\n              <div class="page-title-breadcrumb">\n                <div class=" pull-left">\n                  <div class="page-title">Welcome to Health Chain</div>\n                </div>\n                <!-- <ol class="breadcrumb page-breadcrumb pull-right">\n                            <li><i class="fa fa-home"></i>&nbsp;<a class="parent-item" routerLink="/home">Home</a>&nbsp;<i class="fa fa-angle-right"></i>\n                            </li>\n                            <li class="active">Dashboard</li>\n                        </ol> -->\n              </div>\n            </div>\n            <!-- start widget -->\n            <div class="state-overview">\n              <div class="">\n                <div class="col-xl-4 col-md-6 col-12">\n                  <div class="info-box orange-bg info-dctr-vst-icon">\n                    <div class="info-box-content d-flex align-items-center">\n                      <span class="info-box-text"\n                        >Patient <br />\n                        Report</span\n                      >\n                      <span class="info-box-number ml-auto"\n                        >{{ viewPatientReportListCount }}</span\n                      >\n                    </div>\n                    <!-- /.info-box-content -->\n                    <!-- <button ion-button color="calm" (click)="editItem(item.patAppointmentID)"></button> -->\n                    <button\n                      class="view-dtl-btn"\n                      (click)="viewPatientReportList()"\n                    >\n                      View Details\n                    </button>\n                  </div>\n                  <!-- /.info-box -->\n                </div>\n\n                <div class="col-xl-4 col-md-6 col-12">\n                  <div class="info-box pink-bg lab-report-icon">\n                    <div class="info-box-content d-flex align-items-center">\n                      <span class="info-box-text">\n                        Transaction<br />\n                        History</span\n                      >\n                      <span class="info-box-number ml-auto"\n                        >{{ transactionHistorycount }}</span\n                      >\n                    </div>\n                    <!-- /.info-box-content -->\n                    <button\n                      class="view-dtl-btn"\n                      (click)="viewTransactionList()"\n                    >\n                      View Details\n                    </button>\n                  </div>\n                  <!-- /.info-box -->\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- end page content -->\n    </div>\n\n    <!-- include js -->\n  </div>\n</ion-content>\n\n<!-- start admited patient list -->\n\n<!-- end of patient list -->\n\n<!-- start of pharma list -->\n<!-- <div class="col-xl-6 col-md-12 col-sm-12">\n                        <div class="card card-box pharma-appointment">\n                            <div class="card-head">\n                                <header>Pharmas Profile</header>\n                                <div class="tools">\n                                    <a class="btn btn-primary" (click)=ViewPharmaList(); title="View All">View All</a>\n                                </div>\n                            </div>\n                            <div class="card-body ">\n                               \n                                <div class="dshbord-empty-data hide">\n                                    <img src="../../images/pharma-empty-icon.png" alt="">\n                                    <h2>No appointments yet!</h2>\n                                    <div class=""><a href="#">Click here</a> to book Pharma Appointment</div>\n                                </div>\n                              \n                              <div class="table-wrap">\n                                    <div class="table-responsive">                                \n                                        <table id="pharmatable" datatable [dtOptions]="medoption" [dtTrigger]="medTrigger" class="table table-hover order-column valign-middle">\n                                            <colgroup>\n                                                <col width="16.66%">\n                                                <col width="16.66%">\n                                                <col width="16.66%">\n                                                <col width="16.66%">\n                                                <col width="16.66%">\n                                                <col width="16.66%"> \n                                            </colgroup>\n                                            <thead class="thead-light">\n                                                  <tr>\n                                                    <th> Full Name </th>\n                                                    <th> Email </th>\n                                                    <th> phone no. </th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    <tr  *ngFor="let a of pharmaListn                                                        <td>{{a.fullName}}</td>\n                                                        <td> {{a.email}}</td>\n                                                        <td>  {{a.phoneNo}}</td>\n                                                        \n                                                     \n                                                     </tr>\n                                                  <tr *ngIf="medicineBoughtListModel ?.length == 0">\n                                                      <td colspan="6" class="no-data-available">No data!</td>\n                                                  </tr>\n                                                </tbody>\n                                          </table>\n                                    </div>\n                                </div>	\n                            </div>\n                        </div>\n                    </div>\n                </div> -->\n<!-- end admited pharma list -->\n'/*ion-inline-end:"/home/yashdadia/aatif ionic/ionic/src/pages/laboratory/laboratorydashboard/laboratorydashboard.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_api_api__["a" /* ApiProvider */]])
    ], LaboratorydashboardPage);
    return LaboratorydashboardPage;
}());

//# sourceMappingURL=laboratorydashboard.js.map

/***/ })

},[561]);
//# sourceMappingURL=main.js.map